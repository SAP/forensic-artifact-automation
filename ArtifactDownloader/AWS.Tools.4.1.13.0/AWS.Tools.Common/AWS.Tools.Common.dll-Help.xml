<helpItems schema="maml"><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Clear-AWSHistory</name><description><para>Clears the contents of the AWS cmdlet history buffer ($AWSHistory) in the current shell.</para></description><verb>Clear</verb><noun>AWSHistory</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Clears the contents of the AWS cmdlet history buffer ($AWSHistory) in the current shell. </para></description><syntax><syntaxItem><name>Clear-AWSHistory</name></syntaxItem></syntax><parameters /><returnValues><returnValue><type><name>None</name><uri /><description /></type><description><para>This cmdlet does not generate any output.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Clear-AWSHistory.html&amp;tocid=Clear-AWSHistory</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Enable-AWSMetricsLogging</name><description><para>Enable logging of metrics data for AWS service requests.</para></description><verb>Enable</verb><noun>AWSMetricsLogging</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Amazon.PowerShell.Common.EnableMetricsLoggingCmdlet </para></description><syntax><syntaxItem><name>Enable-AWSMetricsLogging</name></syntaxItem></syntax><parameters /><returnValues><returnValue><type><name>None</name><uri /><description /></type><description><para>This cmdlet does not produce any output.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Enable-AWSMetricsLogging.html&amp;tocid=Enable-AWSMetricsLogging</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks><examples><example><title>-------------------------- EXAMPLE 1 --------------------------</title><code>Enable-AWSMetricsLogging</code><remarks><para>Description</para><para>-----------</para><para>Turns on logging of performance metrics for service calls.</para><para /><para /></remarks></example></examples></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Disable-AWSMetricsLogging</name><description><para>Disable logging of metrics data for AWS service requests.</para></description><verb>Disable</verb><noun>AWSMetricsLogging</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Amazon.PowerShell.Common.DisableMetricsLoggingCmdlet </para></description><syntax><syntaxItem><name>Disable-AWSMetricsLogging</name></syntaxItem></syntax><parameters /><returnValues><returnValue><type><name>None</name><uri /><description /></type><description><para>This cmdlet does not produce any output.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Disable-AWSMetricsLogging.html&amp;tocid=Disable-AWSMetricsLogging</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks><examples><example><title>-------------------------- EXAMPLE 1 --------------------------</title><code>Disable-AWSMetricsLogging</code><remarks><para>Description</para><para>-----------</para><para>Turns off logging of performance metrics for service calls.</para><para /><para /></remarks></example></examples></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Get-AWSPowerShellVersion</name><description><para>Displays version and copyright information for the AWS Tools for Windows PowerShell to the shell. If the ListServiceVersionInfo switch is specifiedthe services and their API versions supported by this module are also displayed.</para></description><verb>Get</verb><noun>AWSPowerShellVersion</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Writes version and copyright information for the AWSPowerShell integration to the shell. If the ListServices switch is specified the services and their API versions supported by this module are also displayed. </para></description><syntax><syntaxItem><name>Get-AWSPowerShellVersion</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ListServiceVersionInfo</name><description><para>If specified the cmdlet also lists all supported AWS services and their versions. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ListServiceVersionInfo</name><description><para>If specified the cmdlet also lists all supported AWS services and their versions. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>String</name><uri /><description /></type><description><para>Version information for the tools and optionally supported services.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Get-AWSPowerShellVersion.html&amp;tocid=Get-AWSPowerShellVersion</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Set-AWSHistoryConfiguration</name><description><para>Configures how the $AWSHistory session variable records AWS cmdlet processing.</para></description><verb>Set</verb><noun>AWSHistoryConfiguration</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Configures the $AWSHistory instance for the current session.  
A history buffer size of 0 disables overall AWS cmdlet activity recording and clears any data currently  in the buffer. If the new size is smaller than the current data in the buffer, older records are deleted. 
By default, only service responses are recorded for a cmdlet. Use the -EnableRequestRecording switch to turn on tracing of service requests in the buffer. </para></description><syntax><syntaxItem><name>Set-AWSHistoryConfiguration</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>MaxCmdletHistory</name><description><para>The maximum number of AWS cmdlet invocations that will be held in the history buffer. </para></description><parameterValue required="true" variableLength="false">System.Int32</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>MaxServiceCallHistory</name><description><para>The maximum number of service responses (and requests, if enabled) that will be recorded for a single AWS cmdlet. </para></description><parameterValue required="true" variableLength="false">System.Int32</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>RecordServiceRequests</name><description><para>If set, also records the service requests that a cmdlet makes. Default: Off. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>MaxCmdletHistory</name><description><para>The maximum number of AWS cmdlet invocations that will be held in the history buffer. </para></description><parameterValue required="true" variableLength="false">System.Int32</parameterValue><type><name>System.Int32</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>MaxServiceCallHistory</name><description><para>The maximum number of service responses (and requests, if enabled) that will be recorded for a single AWS cmdlet. </para></description><parameterValue required="true" variableLength="false">System.Int32</parameterValue><type><name>System.Int32</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>RecordServiceRequests</name><description><para>If set, also records the service requests that a cmdlet makes. Default: Off. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>None</name><uri /><description /></type><description><para>This cmdlet does not generate any output.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Set-AWSHistoryConfiguration.html&amp;tocid=Set-AWSHistoryConfiguration</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Clear-AWSCredential</name><description><para>Clears the set of AWS credentials currently set as default in the shell or, if supplied with a name, deletes the set of credentials associated with the supplied name from the local credentials store.</para></description><verb>Clear</verb><noun>AWSCredential</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Clears the set of AWS credentials currently set as default in the shell 
Note: For scripts written against earlier versions of this module this cmdlet can also be invoked with the alias <i>Clear-AWSCredentials</i>. </para></description><syntax><syntaxItem><name>Clear-AWSCredential</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>This parameter allows to specify the scope of the variable $StoredAWSCredentials to clear. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. This parameter cannot be used when ProfileName is specified. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>This parameter allows to specify the scope of the variable $StoredAWSCredentials to clear. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. This parameter cannot be used when ProfileName is specified. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue><type><name>Amazon.PowerShell.Common.VariableScope</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>None</name><uri /><description /></type><description><para>This cmdlet does not generate any output.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Clear-AWSCredential.html&amp;tocid=Clear-AWSCredential</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks><examples><example><title>-------------------------- EXAMPLE 1 --------------------------</title><code>Clear-AWSCredential</code><remarks><para>Description</para><para>-----------</para><para>Clears any credentials set as default in the current shell. The stored profiles are not affected.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 2 --------------------------</title><code>Clear-AWSCredential -ProfileName myCredentials</code><remarks><para>Description</para><para>-----------</para><para>Deletes the credential profile named 'myCredentials'.</para><para /><para /></remarks></example></examples></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Add-AWSLoggingListener</name><description><para>Adds a listener to aws service calls and enable logging.</para></description><verb>Add</verb><noun>AWSLoggingListener</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Adds a single trace listener to the specified trace source. Given a name and file path,  creates a TextWriterTraceListener with the given name and file path, and adds it to the  listeners for the trace source. 
If Source is not specified, &amp;#39;Amazon&amp;#39; is assumed, which represents all SDK API calls.  In the case where there are multiple listeners for multiple sources, Trace calls for an API will go to the most specific source only. For example, if one listener is added to &amp;#39;Amazon.S3&amp;#39; and another on &amp;#39;Amazon&amp;#39;, then S3 calls will only be logged to the former listener. </para></description><syntax><syntaxItem><name>Add-AWSLoggingListener</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1"><name>Name</name><description><para>The name of the logger. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2"><name>LogFilePath</name><description><para>File path to write the log to. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Source</name><description><para>Specify a source to log responses for. 
Defaults to all responses (i.e. &#39;Amazon&#39;). To limit to a specific service (for example DynamoDB), use &#39;Amazon.DynamoDB&#39;.) </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter></syntaxItem><syntaxItem><name>Add-AWSLoggingListener</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1"><name>TraceListener</name><description><para>Specify a custom trace listener object. </para></description><parameterValue required="true" variableLength="false">System.Diagnostics.TraceListener</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Source</name><description><para>Specify a source to log responses for. 
Defaults to all responses (i.e. &#39;Amazon&#39;). To limit to a specific service (for example DynamoDB), use &#39;Amazon.DynamoDB&#39;.) </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2"><name>LogFilePath</name><description><para>File path to write the log to. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1"><name>Name</name><description><para>The name of the logger. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Source</name><description><para>Specify a source to log responses for. 
Defaults to all responses (i.e. &#39;Amazon&#39;). To limit to a specific service (for example DynamoDB), use &#39;Amazon.DynamoDB&#39;.) </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1"><name>TraceListener</name><description><para>Specify a custom trace listener object. </para></description><parameterValue required="true" variableLength="false">System.Diagnostics.TraceListener</parameterValue><type><name>System.Diagnostics.TraceListener</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>None</name><uri /><description /></type><description><para>This cmdlet does not produce any output.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Add-AWSLoggingListener.html&amp;tocid=Add-AWSLoggingListener</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks><examples><example><title>-------------------------- EXAMPLE 1 --------------------------</title><code>Add-AWSLoggingListener -Name MyAWSLogs -LogFilePath c:\logs\aws.txt</code><remarks><para>Description</para><para>-----------</para><para>Attaches a listener for the source 'Amazon', matching responses from all services for the current script or shell. Log output will be written to the specified file (the folder path must exist). Multiple listeners for different namespaces can be active at a time. By default only error responses are logged.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 2 --------------------------</title><code>Add-AWSLoggingListener -Name MyS3Logs -LogFilePath c:\logs\s3.txt -Source Amazon.S3</code><remarks><para>Description</para><para>-----------</para><para>Attaches a listener for the source 'Amazon.S3'. Responses matching only this namespace will be logged to the specified file (the folder path must exist). Multiple listeners for different namespaces can be active at a time. By default only error responses are logged.</para><para /><para /></remarks></example></examples></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>New-AWSCredential</name><description><para>Returns a populated AWSCredentials instance.</para></description><verb>New</verb><noun>AWSCredential</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Creates and returns an AWSCredentials object 
Note: For scripts written against earlier versions of this module this cmdlet can also be invoked with the alias <i>New-AWSCredentials</i>. </para></description><syntax><syntaxItem><name>New-AWSCredential</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="201"><name>ProfileName</name><description><para>The user-defined name of an AWS credentials or SAML-based role profile containing credential information. The profile is expected to be found in the secure credential file shared with the AWS SDK for .NET and AWS Toolkit for Visual Studio. You can also specify the name of a profile stored in the .ini-format credential file used with the AWS CLI and other AWS SDKs. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>NetworkCredential</name><description><para>Used with SAML-based authentication when ProfileName references a SAML role profile. Contains the network credentials to be supplied during authentication with the configured identity provider&#39;s endpoint. This parameter is not required if the user&#39;s default network identity can or should be used during authentication. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</parameterValue></parameter></syntaxItem><syntaxItem><name>New-AWSCredential</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AccessKey</name><description><para>The AWS access key for the user account. This can be a temporary access key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SecretKey</name><description><para>The AWS secret key for the user account. This can be a temporary secret key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SessionToken</name><description><para>The session token if the access and secret keys are temporary session-based credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter></syntaxItem><syntaxItem><name>New-AWSCredential</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ExternalID</name><description><para>The user-defined external ID to be used when assuming a role, if required by the role. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>MfaSerial</name><description><para>The MFA serial number to be used when assuming a role, if required by the role. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>RoleArn</name><description><para>The ARN of the role to assume for assume role credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SourceProfile</name><description><para>The name of the source profile to be used by assume role credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter></syntaxItem><syntaxItem><name>New-AWSCredential</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>Credential</name><description><para>An AWSCredentials object instance containing access and secret key information, and optionally a token for session-based credentials. </para></description><parameterValue required="true" variableLength="false">Amazon.Runtime.AWSCredentials</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AccessKey</name><description><para>The AWS access key for the user account. This can be a temporary access key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>Credential</name><description><para>An AWSCredentials object instance containing access and secret key information, and optionally a token for session-based credentials. </para></description><parameterValue required="true" variableLength="false">Amazon.Runtime.AWSCredentials</parameterValue><type><name>Amazon.Runtime.AWSCredentials</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ExternalID</name><description><para>The user-defined external ID to be used when assuming a role, if required by the role. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>MfaSerial</name><description><para>The MFA serial number to be used when assuming a role, if required by the role. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>NetworkCredential</name><description><para>Used with SAML-based authentication when ProfileName references a SAML role profile. Contains the network credentials to be supplied during authentication with the configured identity provider&#39;s endpoint. This parameter is not required if the user&#39;s default network identity can or should be used during authentication. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</parameterValue><type><name>System.Management.Automation.PSCredential</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="201"><name>ProfileName</name><description><para>The user-defined name of an AWS credentials or SAML-based role profile containing credential information. The profile is expected to be found in the secure credential file shared with the AWS SDK for .NET and AWS Toolkit for Visual Studio. You can also specify the name of a profile stored in the .ini-format credential file used with the AWS CLI and other AWS SDKs. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>RoleArn</name><description><para>The ARN of the role to assume for assume role credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SecretKey</name><description><para>The AWS secret key for the user account. This can be a temporary secret key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SessionToken</name><description><para>The session token if the access and secret keys are temporary session-based credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SourceProfile</name><description><para>The name of the source profile to be used by assume role credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>AWSCredentials</name><uri /><description /></type><description><para>AWSCredentials instance containing AWS credentials data.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=New-AWSCredential.html&amp;tocid=New-AWSCredential</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Set-AWSProxy</name><description><para>Sets AWS default proxy for the shell. Subsequent AWS cmdlet invocations will use the configured proxy.</para></description><verb>Set</verb><noun>AWSProxy</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Sets AWS default proxy for the shell. </para></description><syntax><syntaxItem><name>Set-AWSProxy</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1"><name>Hostname</name><description><para>Proxy server host </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2"><name>Port</name><description><para>Proxy server port </para></description><parameterValue required="true" variableLength="false">System.Int32</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="3"><name>Username</name><description><para>Username to submit to the proxy server for authentication </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="4"><name>Password</name><description><para>Password to submit to the proxy server for authentication </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="5"><name>Credential</name><description><para>The credentials to submit to the proxy server for authentication </para></description><parameterValue required="true" variableLength="false">System.Net.ICredentials</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>BypassList</name><description><para>An array of regular expressions that describe URIs that do not use  the proxy server when accessed. </para></description><parameterValue required="true" variableLength="false">System.String[]</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>BypassOnLocal</name><description><para>If specified, requests to local Internet resources do not use the configured proxy. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>This parameter allows to specify the scope of the proxy configuration to set. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>BypassList</name><description><para>An array of regular expressions that describe URIs that do not use  the proxy server when accessed. </para></description><parameterValue required="true" variableLength="false">System.String[]</parameterValue><type><name>System.String[]</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>BypassOnLocal</name><description><para>If specified, requests to local Internet resources do not use the configured proxy. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="5"><name>Credential</name><description><para>The credentials to submit to the proxy server for authentication </para></description><parameterValue required="true" variableLength="false">System.Net.ICredentials</parameterValue><type><name>System.Net.ICredentials</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1"><name>Hostname</name><description><para>Proxy server host </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="4"><name>Password</name><description><para>Password to submit to the proxy server for authentication </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2"><name>Port</name><description><para>Proxy server port </para></description><parameterValue required="true" variableLength="false">System.Int32</parameterValue><type><name>System.Int32</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>This parameter allows to specify the scope of the proxy configuration to set. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue><type><name>Amazon.PowerShell.Common.VariableScope</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="3"><name>Username</name><description><para>Username to submit to the proxy server for authentication </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>None</name><uri /><description /></type><description><para>This cmdlet does not generate any output.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Set-AWSProxy.html&amp;tocid=Set-AWSProxy</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks><examples><example><title>-------------------------- EXAMPLE 1 --------------------------</title><code>Set-AWSProxy -Hostname localhost -Port 8888</code><remarks><para>Description</para><para>-----------</para><para>This command configures a proxy that does not require special credentials.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 2 --------------------------</title><code>Set-AWSProxy -Hostname localhost -Port 8888 -Username 1 -Password 1</code><remarks><para>Description</para><para>-----------</para><para>This command configures a proxy that requires a username and a password.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 3 --------------------------</title><code>Set-AWSProxy -Hostname localhost -Port 8888 -Credential ([System.Net.CredentialCache]::DefaultCredentials)</code><remarks><para>Description</para><para>-----------</para><para>This command configures a proxy with default credentials. The -Credentials parameter can be used for any credentials object that implements the ICredentials interface.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 4 --------------------------</title><code>Set-AWSProxy -Hostname https://proxy.testserver.com -Port 80 -BypassList 169.254.169.250;169.254.169.251;169.254.169.254</code><remarks><para>Description</para><para>-----------</para><para>This command configures a proxy at https://proxy.testserver.com that uses port number 80. The -BypassList parameter is added to show that IP addresses 169.254.169.250, 169.254.169.251, and 169.254.169.254 do not use the proxy. Note that because your bypass list includes only IP addresses and not FQDNs, quotation marks around the IP address values are not needed. You can use semicolons as a delimiter between IP addresses that you want to bypass.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 5 --------------------------</title><code>Set-AWSProxy -Port 8888 -Hostname 127.0.0.1 -BypassList @("127.0.0.1", "ip-ranges.amazonaws.com")</code><remarks><para>Description</para><para>-----------</para><para>This command configures a proxy that uses port number 8888. The -BypassList parameter is added to show that IP address 127.0.0.1, and AWS-based IP addresses, do not use the proxy. Note that because you have a mixture of an IP address and an FQDN, enclose values that you want to bypass in quotation marks as shown in the example, and use a comma as a delimiter. This example formats the values as an array, but you can also format them without parens:  Set-AWSProxy -Port 8888 -Hostname 127.0.0.1 -BypassList "127.0.0.1", "ip-ranges.amazonaws.com"</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 6 --------------------------</title><code>Set-AWSProxy -Port 8888 -Hostname 127.0.0.1 -BypassList "127.0.0.1";"ip-ranges.amazonaws.com"</code><remarks><para>Description</para><para>-----------</para><para>As in the preceding example, this command configures a proxy that uses port number 8888. The -BypassList parameter is added to show that IP address 127.0.0.1, and AWS-based IP addresses, do not use the proxy. Note that because you have a mixture of an IP address and an FQDN, enclose values that you want to bypass in quotation marks as shown in the example. This example, unlike the preceding example, uses semicolons, which are accepted as a delimiter between the quotation-enclosed proxy values. This example formats the BypassList values without the parentheses-enclosed array.</para><para /><para /></remarks></example></examples></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Clear-AWSProxy</name><description><para>Clears AWS default proxy for the shell. Subsequent AWS cmdlet invocations will not use a proxy.</para></description><verb>Clear</verb><noun>AWSProxy</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Clears AWS default proxy for the shell. </para></description><syntax><syntaxItem><name>Clear-AWSProxy</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>This parameter allows to specify the scope of the proxy configuration to clear. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>This parameter allows to specify the scope of the proxy configuration to clear. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue><type><name>Amazon.PowerShell.Common.VariableScope</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>None</name><uri /><description /></type><description><para>This cmdlet does not generate any output.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Clear-AWSProxy.html&amp;tocid=Clear-AWSProxy</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks><examples><example><title>-------------------------- EXAMPLE 1 --------------------------</title><code>Clear-AWSProxy</code><remarks><para>Description</para><para>-----------</para><para>This command removes proxy configuration from the current shell. Subsequent cmdlets invocations will not use a proxy.</para><para /><para /></remarks></example></examples></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Initialize-AWSDefaultConfiguration</name><description><para>Creates or updates the credential profile named 'default' using supplied keys, existing credentials or profile, or EC2 metadata. The profile and a default region is then set active in the current shell.</para></description><verb>Initialize</verb><noun>AWSDefaultConfiguration</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Creates or updates the credential profile named &amp;#39;default&amp;#39; and sets the profile, and optionally a region,  as active in the current shell. The credential data to be stored in the &amp;#39;default&amp;#39; profile can be provided  from: 
 -Supplied access and secret key parameters for AWS credentials 
 -A pre-existing profile 
 -A credentials object 
 -Active credentials in the current shell (in the variable $StoredAWSCredentials) 
 -EC2 role metadata (for instances launched with instance profiles) 
A default region to assume when the default profile is active is also set using the -Region parameter,   from a default region already set in the current shell or, if the cmdlet is executing on an EC2 instance, from the instance metadata. If a region setting cannot be determined from a parameter or the shell you are  prompted to select one. 
Note that if run on an EC2 instance and you want to select a region other than the region containing the instance you should supply the -Region parameter so that the cmdlet does not inspect EC2 instance metadata to auto-discover the region. 
In all cases a profile named &amp;#39;default&amp;#39; will be created or updated to contain the specified credential and region data. Note that if the credential source is another profile this cmdlet effectively copies the  credential data from the source profile to the &amp;#39;default&amp;#39; profile. 
When the cmdlet exits the active credentials can be accessed in the shell via a variable named $StoredAWSCredentials.  The active region can be found in the variable $StoredAWSRegion. 
Note: For scripts written against earlier versions of this module this cmdlet can also be invoked with the alias <i>Initialize-AWSDefaults</i>. </para></description><syntax><syntaxItem><name>Initialize-AWSDefaultConfiguration</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>This parameter allows to specify the scope of the shell variables set by this cmdlet. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue></parameter></syntaxItem><syntaxItem><name>Initialize-AWSDefaultConfiguration</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="201"><name>ProfileName</name><description><para>The user-defined name of an AWS credentials or SAML-based role profile containing credential information. The profile is expected to be found in the secure credential file shared with the AWS SDK for .NET and AWS Toolkit for Visual Studio. You can also specify the name of a profile stored in the .ini-format credential file used with the AWS CLI and other AWS SDKs. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="211"><name>Region</name><description><para>The system name of an AWS region or an AWSRegion instance. This governs the endpoint that will be used when calling service operations. Note that the AWS resources referenced in a call are usually region-specific. </para></description><parameterValue required="true" variableLength="false">System.Object</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>This parameter allows to specify the scope of the shell variables set by this cmdlet. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>NetworkCredential</name><description><para>Used with SAML-based authentication when ProfileName references a SAML role profile. Contains the network credentials to be supplied during authentication with the configured identity provider&#39;s endpoint. This parameter is not required if the user&#39;s default network identity can or should be used during authentication. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</parameterValue></parameter></syntaxItem><syntaxItem><name>Initialize-AWSDefaultConfiguration</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="211"><name>Region</name><description><para>The system name of an AWS region or an AWSRegion instance. This governs the endpoint that will be used when calling service operations. Note that the AWS resources referenced in a call are usually region-specific. </para></description><parameterValue required="true" variableLength="false">System.Object</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>This parameter allows to specify the scope of the shell variables set by this cmdlet. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AccessKey</name><description><para>The AWS access key for the user account. This can be a temporary access key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SecretKey</name><description><para>The AWS secret key for the user account. This can be a temporary secret key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SessionToken</name><description><para>The session token if the access and secret keys are temporary session-based credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter></syntaxItem><syntaxItem><name>Initialize-AWSDefaultConfiguration</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="211"><name>Region</name><description><para>The system name of an AWS region or an AWSRegion instance. This governs the endpoint that will be used when calling service operations. Note that the AWS resources referenced in a call are usually region-specific. </para></description><parameterValue required="true" variableLength="false">System.Object</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>This parameter allows to specify the scope of the shell variables set by this cmdlet. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ExternalID</name><description><para>The user-defined external ID to be used when assuming a role, if required by the role. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>MfaSerial</name><description><para>The MFA serial number to be used when assuming a role, if required by the role. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>RoleArn</name><description><para>The ARN of the role to assume for assume role credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SourceProfile</name><description><para>The name of the source profile to be used by assume role credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter></syntaxItem><syntaxItem><name>Initialize-AWSDefaultConfiguration</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="211"><name>Region</name><description><para>The system name of an AWS region or an AWSRegion instance. This governs the endpoint that will be used when calling service operations. Note that the AWS resources referenced in a call are usually region-specific. </para></description><parameterValue required="true" variableLength="false">System.Object</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>This parameter allows to specify the scope of the shell variables set by this cmdlet. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>Credential</name><description><para>An AWSCredentials object instance containing access and secret key information, and optionally a token for session-based credentials. </para></description><parameterValue required="true" variableLength="false">Amazon.Runtime.AWSCredentials</parameterValue></parameter></syntaxItem><syntaxItem><name>Initialize-AWSDefaultConfiguration</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="211"><name>Region</name><description><para>The system name of an AWS region or an AWSRegion instance. This governs the endpoint that will be used when calling service operations. Note that the AWS resources referenced in a call are usually region-specific. </para></description><parameterValue required="true" variableLength="false">System.Object</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>This parameter allows to specify the scope of the shell variables set by this cmdlet. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AccessKey</name><description><para>The AWS access key for the user account. This can be a temporary access key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>Credential</name><description><para>An AWSCredentials object instance containing access and secret key information, and optionally a token for session-based credentials. </para></description><parameterValue required="true" variableLength="false">Amazon.Runtime.AWSCredentials</parameterValue><type><name>Amazon.Runtime.AWSCredentials</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ExternalID</name><description><para>The user-defined external ID to be used when assuming a role, if required by the role. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>MfaSerial</name><description><para>The MFA serial number to be used when assuming a role, if required by the role. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>NetworkCredential</name><description><para>Used with SAML-based authentication when ProfileName references a SAML role profile. Contains the network credentials to be supplied during authentication with the configured identity provider&#39;s endpoint. This parameter is not required if the user&#39;s default network identity can or should be used during authentication. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</parameterValue><type><name>System.Management.Automation.PSCredential</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="201"><name>ProfileName</name><description><para>The user-defined name of an AWS credentials or SAML-based role profile containing credential information. The profile is expected to be found in the secure credential file shared with the AWS SDK for .NET and AWS Toolkit for Visual Studio. You can also specify the name of a profile stored in the .ini-format credential file used with the AWS CLI and other AWS SDKs. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="211"><name>Region</name><description><para>The system name of an AWS region or an AWSRegion instance. This governs the endpoint that will be used when calling service operations. Note that the AWS resources referenced in a call are usually region-specific. </para></description><parameterValue required="true" variableLength="false">System.Object</parameterValue><type><name>System.Object</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>RoleArn</name><description><para>The ARN of the role to assume for assume role credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>This parameter allows to specify the scope of the shell variables set by this cmdlet. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue><type><name>Amazon.PowerShell.Common.VariableScope</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SecretKey</name><description><para>The AWS secret key for the user account. This can be a temporary secret key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SessionToken</name><description><para>The session token if the access and secret keys are temporary session-based credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SourceProfile</name><description><para>The name of the source profile to be used by assume role credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>None</name><uri /><description /></type><description><para>This cmdlet does not generate any output.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Initialize-AWSDefaultConfiguration.html&amp;tocid=Initialize-AWSDefaultConfiguration</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks><examples><example><title>-------------------------- EXAMPLE 1 --------------------------</title><code>Initialize-AWSDefaultConfiguration</code><remarks><para>Description</para><para>-----------</para><para>Tests to see if a profile named 'default' exists. If it does the credential and region data in the profile are loaded and set as active in the current shell.

If a 'default' profile does not exist and the cmdlet is running on the local workstation the user is prompted to enter the AWS access and secret keys for an account, and to select a default region. If run on an Amazon EC2 instance the instance metadata is inspected to determine if the instance was launched with a role and if so credentials are obtained from the role before prompting for a default region. The credentials and region selection are then saved into a profile named 'default' and set as active in the current shell.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 2 --------------------------</title><code>Initialize-AWSDefaultConfiguration -AccessKey AKIAIOSFODNN7EXAMPLE -SecretKey wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY -Region us-west-2</code><remarks><para>Description</para><para>-----------</para><para>Saves the specified credential keys and default region selection to a profile named 'default'. On exit the credentials and region are set as active in the current shell.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 3 --------------------------</title><code>Initialize-AWSDefaultConfiguration -ProfileName myProfile -Region us-west-2</code><remarks><para>Description</para><para>-----------</para><para>Loads the credential data from the profile named 'myProfile' and saves it to a profile named 'default' (effectively copying credential data from one profile to another). The default profile is also updated to assume a default region of 'us-west-2'. When the cmdlet exists the specified credentials and region are set active in the current shell.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 4 --------------------------</title><code>Initialize-AWSDefaultConfiguration -Region us-west-2</code><remarks><para>Description</para><para>-----------</para><para>If a profile named 'default' exists it is updated to assume a default region of 'us-west-2'. If the profile does not exist and the cmdlet is running on the local workstation the user is prompted to enter the AWS access and secret keys for an account. If run on an Amazon EC2 instance the instance metadata is inspected to determine if the instance was launched with a role and if so credentials are obtained from the role. A profile named 'default' is then created containing the discovered or entered credentials and region, and the current shell updated to set them active.</para><para /><para /></remarks></example></examples></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Set-AWSSamlRoleProfile</name><description><para>Creates or updates one or more role profiles for use with authentication against a SAML-based federated identity provider to obtain temporary role-based AWS credentials.</para></description><verb>Set</verb><noun>AWSSamlRoleProfile</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Creates or updates role profiles for use with a SAML federated identity provider to obtain temporary AWS credentials for roles the user is authorized to assume. The endpoint for authentication should have been configured previously using Set-AWSSamlEndpoint. Once created the role profiles can be used to obtain time-limited temporary AWS credentials by specifying the name of the role profile to the -ProfileName parameter of the Set-AWSCredentials cmdlet or any cmdlet that makes calls to AWS service operations. 
<br /><br /> 
User authentication is not performed until AWS credentials are required, i.e. just prior to a service operation call. Additionally if the credentials expire then the tools will automatically attempt to re-authenticate the user to obtain fresh credentials. When a role profile is configured to use the default logged-in user identity then this process happens silently. If a role profile is configured to use an alternate identity (by specifying the -NetworkCredential parameter) the user is prompted to re-enter their credentials prior to re-authentication. </para></description><syntax><syntaxItem><name>Set-AWSSamlRoleProfile</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>EndpointName</name><description><para>The name assigned to the endpoint definition that was previously registered using Set-AWSSamlEndpoint. The endpoint definition contains the URL of the endpoint to be used to authenticate users prior to vending temporary AWS credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>PrincipalARN</name><description><para>The Amazon Resource Name (ARN) of the principal holding the role to be assumed when credentials are requested following successful authentication. If specified the RoleARN parameter must also be specified. 
<br /><br /> 
If neither of the PrincipalARN and RoleARN parameters are supplied and the user is authorized to assume multiple roles the cmdlet will prompt to select the role that should be referenced by the profile. The user is also prompted if ARNs are specified but cannot be found in the data returned on successful authentication. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>RoleARN</name><description><para>The Amazon Resource Name (ARN) of the role to be assumed when credentials are requested following successful authentication. If specified the PrincipalARN parameter must also be specified. 
<br /><br /> 
If neither of the PrincipalARN and RoleARN parameters are supplied and the user is authorized to assume multiple roles the cmdlet will prompt to select the role that should be referenced by the profile. The user is also prompted if ARNs are specified but cannot be found in the data returned on successful authentication. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>NetworkCredential</name><description><para>Optional. Supply a value only if an identity different to the user&#39;s default Windows identity should be used during authentication. 
<br /><br /> 
If an alternate credential is specified then when the tools need to re-authenticate the user to obtain fresh credentials following expiry the user is prompted to re-enter the password for the user account before re-authentication can be performed. When the default user identity is configured for use (-NetworkCredential not specified) re-authentication occurs silently. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>StoreAs</name><description><para>The name to associate with the role data. This name will be used with the -ProfileName parameter to Set-AWSCredentials cmdlet and AWS service cmdlets to load the profile and obtain temporary AWS credentials based on the role and other data held in the profile. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>STSEndpointRegion</name><description><para>Specifies the region to be used when making calls to STS to obtain temporary credentials after successful authentication.  
This parameter is only needed in regions where a specific regional endpoint for STS must  be used (eg cn-north-1). In all regions where the global sts.amazonaws.com endpoint can be  used this parameter should not be specified. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter></syntaxItem><syntaxItem><name>Set-AWSSamlRoleProfile</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>EndpointName</name><description><para>The name assigned to the endpoint definition that was previously registered using Set-AWSSamlEndpoint. The endpoint definition contains the URL of the endpoint to be used to authenticate users prior to vending temporary AWS credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>NetworkCredential</name><description><para>Optional. Supply a value only if an identity different to the user&#39;s default Windows identity should be used during authentication. 
<br /><br /> 
If an alternate credential is specified then when the tools need to re-authenticate the user to obtain fresh credentials following expiry the user is prompted to re-enter the password for the user account before re-authentication can be performed. When the default user identity is configured for use (-NetworkCredential not specified) re-authentication occurs silently. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>StoreAllRoles</name><description><para>If set all roles available to the user are evaluated following authentication and one role profile per role will be created. The name of each role will be used for each corresponding profile that is created. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>STSEndpointRegion</name><description><para>Specifies the region to be used when making calls to STS to obtain temporary credentials after successful authentication.  
This parameter is only needed in regions where a specific regional endpoint for STS must  be used (eg cn-north-1). In all regions where the global sts.amazonaws.com endpoint can be  used this parameter should not be specified. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>EndpointName</name><description><para>The name assigned to the endpoint definition that was previously registered using Set-AWSSamlEndpoint. The endpoint definition contains the URL of the endpoint to be used to authenticate users prior to vending temporary AWS credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>NetworkCredential</name><description><para>Optional. Supply a value only if an identity different to the user&#39;s default Windows identity should be used during authentication. 
<br /><br /> 
If an alternate credential is specified then when the tools need to re-authenticate the user to obtain fresh credentials following expiry the user is prompted to re-enter the password for the user account before re-authentication can be performed. When the default user identity is configured for use (-NetworkCredential not specified) re-authentication occurs silently. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</parameterValue><type><name>System.Management.Automation.PSCredential</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>PrincipalARN</name><description><para>The Amazon Resource Name (ARN) of the principal holding the role to be assumed when credentials are requested following successful authentication. If specified the RoleARN parameter must also be specified. 
<br /><br /> 
If neither of the PrincipalARN and RoleARN parameters are supplied and the user is authorized to assume multiple roles the cmdlet will prompt to select the role that should be referenced by the profile. The user is also prompted if ARNs are specified but cannot be found in the data returned on successful authentication. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>RoleARN</name><description><para>The Amazon Resource Name (ARN) of the role to be assumed when credentials are requested following successful authentication. If specified the PrincipalARN parameter must also be specified. 
<br /><br /> 
If neither of the PrincipalARN and RoleARN parameters are supplied and the user is authorized to assume multiple roles the cmdlet will prompt to select the role that should be referenced by the profile. The user is also prompted if ARNs are specified but cannot be found in the data returned on successful authentication. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>StoreAllRoles</name><description><para>If set all roles available to the user are evaluated following authentication and one role profile per role will be created. The name of each role will be used for each corresponding profile that is created. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>StoreAs</name><description><para>The name to associate with the role data. This name will be used with the -ProfileName parameter to Set-AWSCredentials cmdlet and AWS service cmdlets to load the profile and obtain temporary AWS credentials based on the role and other data held in the profile. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>STSEndpointRegion</name><description><para>Specifies the region to be used when making calls to STS to obtain temporary credentials after successful authentication.  
This parameter is only needed in regions where a specific regional endpoint for STS must  be used (eg cn-north-1). In all regions where the global sts.amazonaws.com endpoint can be  used this parameter should not be specified. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>System.String</name><uri /><description /></type><description><para>This cmdlet returns the name of the role profile to the pipeline. If the -StoreAllRoles switch is used the names of all created or updated profiles are output.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Set-AWSSamlRoleProfile.html&amp;tocid=Set-AWSSamlRoleProfile</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks><examples><example><title>-------------------------- EXAMPLE 1 --------------------------</title><code>Set-AWSSamlRoleProfile -StoreAs Role1 -EndpointName MyADFSEndpoint</code><remarks><para>Description</para><para>-----------</para><para>Authenticates the currently logged in user account against the specified endpoint (configured previusly using Set-AWSSamlEndpoint). Following successful authentication, if the user is authorized to assume only a single role the role details are stored in a profile named 'Role1'. If the user is authorized for more than one role a menu is presented for the desired  role to be associated with the profile to be selected.

The role profile can be used to obtain time-limited temporary AWS credentials by specifying it as the value of the -ProfileName parameter to the Set-AWSCredentials cmdlet or any cmdlet that makes calls to AWS service operations. Authentication prior to obtaining credentials is performed using the current user identity.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 2 --------------------------</title><code>
$credential = Get-Credential -Message "Enter user credentials for authentication" 
Set-AWSSamlRoleProfile -StoreAs Role1 -EndpointName MyADFSEndpoint -NetworkCredential $credential
	</code><remarks><para>Description</para><para>-----------</para><para>Authenticates the specified user account against the specified endpoint (configured previously using Set-AWSSamlEndpoint). Following successful  authentication, if the user is authorized to assume only a single role the role details are stored in a profile named 'Role1'. If the user is authorized for more than one role a menu is presented for the desired  role to be associated with the profile to be selected.

The role profile can be used to obtain time-limited temporary AWS credentials by specifying it as the value of the -ProfileName parameter to the Set-AWSCredentials cmdlet or any cmdlet that makes calls to AWS service operations. Authentication prior to obtaining credentials is performed using the current user identity.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 3 --------------------------</title><code>
$params = @{
    "PrincipalARN"="arn:aws:iam::012345678912:saml-provider/ADFS"
    "RoleARN"="arn:aws:iam::012345678912:role/ADFS-Dev"
}
Set-AWSSamlRoleProfile @params -StoreAs ADFS-Dev
	</code><remarks><para>Description</para><para>-----------</para><para>This example shows how to create or update a role profile when the Amazon Resource Names (ARNs) for the role are known in advance. Following authentication for the currently logged in user the cmdlet will verify that the role is present in the set the user is authorized to assume and set up the role profile. If the role is not found the user is prompted to select the correct role.

To authenticate as a different user account add the -NetworkCredential parameter as shown in other examples.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 4 --------------------------</title><code>Set-AWSSamlRoleProfile -StoreAllRoles -EndpointName MyADFSEndpoint</code><remarks><para>Description</para><para>-----------</para><para>Authenticates the current user account against the configured endpoint and if successful creates one role profile for each role the user is authorized to assume. The 'friendly name' of the role is used as the name for each profile.

To authenticate as a different user account add the -NetworkCredential parameter as shown in other examples.</para><para /><para /></remarks></example></examples></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Remove-AWSLoggingListener</name><description><para>Removes a logger from the specified source (e.g. 'Amazon', or 'Amazon.S3') by name.</para></description><verb>Remove</verb><noun>AWSLoggingListener</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Remove a listener from and AWS API trace source. </para></description><syntax><syntaxItem><name>Remove-AWSLoggingListener</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1"><name>Source</name><description><para>Source to remove the listener from. 
Examples: &#39;Amazon&#39;, or &#39;Amazon.DynamoDB&#39;. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2"><name>Name</name><description><para>Name of the trace listener to remove. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2"><name>Name</name><description><para>Name of the trace listener to remove. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1"><name>Source</name><description><para>Source to remove the listener from. 
Examples: &#39;Amazon&#39;, or &#39;Amazon.DynamoDB&#39;. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>None</name><uri /><description /></type><description><para>This cmdlet does not produce any output.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Remove-AWSLoggingListener.html&amp;tocid=Remove-AWSLoggingListener</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks><examples><example><title>-------------------------- EXAMPLE 1 --------------------------</title><code>Remove-AWSLoggingListener -Source Amazon.S3 -Name MyS3Logs</code><remarks><para>Description</para><para>-----------</para><para>Removes the specified logger from the trace source.</para><para /><para /></remarks></example></examples></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Clear-DefaultAWSRegion</name><description><para>Clears any default AWS region set in the shell variable $StoredAWSRegion.</para></description><verb>Clear</verb><noun>DefaultAWSRegion</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Clears any default AWS region set in the shell variable $StoredAWSRegion. </para></description><syntax><syntaxItem><name>Clear-DefaultAWSRegion</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>This parameter allows to specify the scope of the region configuration to clear. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>This parameter allows to specify the scope of the region configuration to clear. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue><type><name>Amazon.PowerShell.Common.VariableScope</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>None</name><uri /><description /></type><description><para>This cmdlet does not generate any output.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Clear-DefaultAWSRegion.html&amp;tocid=Clear-DefaultAWSRegion</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Clear-AWSDefaultConfiguration</name><description><para>Clears the persisted credentials associated with the credential profile names 'default' and 'AWS PS Default', plus any credentials and region data currently set in the session's shell variables. To clear the stored default credentials only, use the -SkipShell parameter. To affect the current shell only, use the -SkipProfileStore parameter.</para></description><verb>Clear</verb><noun>AWSDefaultConfiguration</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Clears the persisted credentials associated with the credential profile names &amp;#39;default&amp;#39; and &amp;#39;AWS PS Default&amp;#39;, plus any  credentials and region data currently set in the session&amp;#39;s shell variables. To clear the stored default credentials only,  use the -SkipShell parameter. To affect the current shell only, use the -SkipProfileStore parameter. 
Note: For scripts written against earlier versions of this module this cmdlet can also be invoked with the alias <i>Clear-AWSDefaults</i>. </para></description><syntax><syntaxItem><name>Clear-AWSDefaultConfiguration</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SkipShell</name><description><para>If set, the cmdlet will not clear the current shell state. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SkipProfileStore</name><description><para>If set, the cmdlet will not clear the &#39;default&#39; and &#39;AWS PS Default&#39; profiles held in the credentials store. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio for the &#39;default&#39; and &#39;AWS PS Default&#39; profiles. If the profiles are not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>This parameter allows to specify the scope of the shell variables to clear. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. This parameter cannot be used when SkipShell is specified. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio for the &#39;default&#39; and &#39;AWS PS Default&#39; profiles. If the profiles are not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>This parameter allows to specify the scope of the shell variables to clear. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. This parameter cannot be used when SkipShell is specified. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue><type><name>Amazon.PowerShell.Common.VariableScope</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SkipProfileStore</name><description><para>If set, the cmdlet will not clear the &#39;default&#39; and &#39;AWS PS Default&#39; profiles held in the credentials store. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SkipShell</name><description><para>If set, the cmdlet will not clear the current shell state. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>None</name><uri /><description /></type><description><para>This cmdlet does not generate any output.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Clear-AWSDefaultConfiguration.html&amp;tocid=Clear-AWSDefaultConfiguration</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Get-AWSCredential</name><description><para>Returns an AWSCredentials object initialized with from either credentials currently set as default in the shell or saved and associated with the supplied name from a local credential store. Optionally the cmdlet can list the names, types, and locations of all sets of credentials held in the store.</para></description><verb>Get</verb><noun>AWSCredential</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Returns an AWSCredentials object initialized with from either credentials currently set as default in the shell or saved and associated with the supplied name from the local credential store. Optionally the cmdlet can list the names, types, and locations of all sets of credentials held in local stores. 
Note: For scripts written against earlier versions of this module this cmdlet can also be invoked with the alias <i>Get-AWSCredentials</i>. </para></description><syntax><syntaxItem><name>Get-AWSCredential</name></syntaxItem><syntaxItem><name>Get-AWSCredential</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2"><name>ProfileName</name><description><para>The name associated with the credentials in local storage </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter></syntaxItem><syntaxItem><name>Get-AWSCredential</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ListProfile</name><description><para>Lists the names of all CredentialProfiles saved in local storage </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter></syntaxItem><syntaxItem><name>Get-AWSCredential</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ListProfileDetail</name><description><para>List the name, type, and location of all CredentialProfiles saved in local storage </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ListProfile</name><description><para>Lists the names of all CredentialProfiles saved in local storage </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ListProfileDetail</name><description><para>List the name, type, and location of all CredentialProfiles saved in local storage </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2"><name>ProfileName</name><description><para>The name associated with the credentials in local storage </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>Amazon.Runtime.AWSCredentials</name><uri /><description /></type><description><para>Object containing a set of AWS credentials.</para></description></returnValue><returnValue><type><name>String</name><uri /><description /></type><description><para>The set of names associated with saved credentials in local stores.</para></description></returnValue><returnValue><type><name>Amazon.Powershell.Common.ProfileInfo</name><uri /><description /></type><description><para>The set of names, types, and locations associated with saved credentials in local stores.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Get-AWSCredential.html&amp;tocid=Get-AWSCredential</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Get-AWSService</name><description><para>Returns the name of the AWS services supported by the current version of AWS Tools for PowerShell, optionally restricting the scope of the search to a specific service which can be identified using one or more words from the service name or the prefix applied to the nouns of cmdlets belonging to the service.</para></description><verb>Get</verb><noun>AWSService</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Returns the name of the AWS services supported by the current version of AWS Tools for PowerShell, optionally restricting the scope of the search to a specific service which can be identified using one or more words from the service name or the prefix applied to the nouns of cmdlets belonging to the service. 
If no match is made, no data is output. </para></description><syntax><syntaxItem><name>Get-AWSService</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>Service</name><description><para>Matches the full or partial term supplied to the parameter value, which can be the service prefix (for example &#39;EC2&#39;) or one or more terms from the service name (for example &#39;compute&#39; or &#39;compute cloud&#39;). 
When partial names are used (as opposed to a prefix code) all services  for which a match can be found are used to assist in the cmdlet results. A  regular expression can always be supplied for the parameter value. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>Service</name><description><para>Matches the full or partial term supplied to the parameter value, which can be the service prefix (for example &#39;EC2&#39;) or one or more terms from the service name (for example &#39;compute&#39; or &#39;compute cloud&#39;). 
When partial names are used (as opposed to a prefix code) all services  for which a match can be found are used to assist in the cmdlet results. A  regular expression can always be supplied for the parameter value. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>PSObject</name><uri /><description /></type><description><para>A collection of zero or more objects listing AWS services supported by the current version of AWS Tools for PowerShell.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Get-AWSService.html&amp;tocid=Get-AWSService</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Get-DefaultAWSRegion</name><description><para>Returns the current default AWS region for this shell, if any, as held in the shell variable $StoredAWSRegion.</para></description><verb>Get</verb><noun>DefaultAWSRegion</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Returns the current default AWS region for this shell, if any, as held in the shell variable $StoredAWSRegion. </para></description><syntax><syntaxItem><name>Get-DefaultAWSRegion</name></syntaxItem></syntax><parameters /><returnValues><returnValue><type><name>AWSRegion</name><uri /><description /></type><description><para>AWSRegion instance mapping to the default AWS region stored in $StoredAWSRegion.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Get-DefaultAWSRegion.html&amp;tocid=Get-DefaultAWSRegion</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Set-AWSResponseLogging</name><description><para>Modify response logging options for AWS service requests.</para></description><verb>Set</verb><noun>AWSResponseLogging</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Modify when to produce log entries. </para></description><syntax><syntaxItem><name>Set-AWSResponseLogging</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1"><name>Level</name><description><para>When to log responses. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1"><name>Level</name><description><para>When to log responses. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>None</name><uri /><description /></type><description><para>This cmdlet does not produce any output.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Set-AWSResponseLogging.html&amp;tocid=Set-AWSResponseLogging</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks><examples><example><title>-------------------------- EXAMPLE 1 --------------------------</title><code>Set-AWSResponseLogging -Level Always</code><remarks><para>Description</para><para>-----------</para><para>Enables logging of all service responses configured in the attached listeners. Other values for the -Level parameter are 'Never', which turns off logging and 'OnError' which logs only error responses.</para><para /><para /></remarks></example></examples></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Remove-AWSCredentialProfile</name><description><para>Removes the credential profile with the supplied name from one of the local credential stores.</para></description><verb>Remove</verb><noun>AWSCredentialProfile</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Amazon.PowerShell.Common.RemoveAWSCredentialProfileCmdlet </para></description><syntax><syntaxItem><name>Remove-AWSCredentialProfile</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2"><name>ProfileName</name><description><para>The name associated with the credential profile that is to be deleted. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="3"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Force</name><description><para>Suppresses prompts for confirmation before proceeding to remove the specified credential profile. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Force</name><description><para>Suppresses prompts for confirmation before proceeding to remove the specified credential profile. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="3"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2"><name>ProfileName</name><description><para>The name associated with the credential profile that is to be deleted. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>None</name><uri /><description /></type><description><para>This cmdlet does not generate any output.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Remove-AWSCredentialProfile.html&amp;tocid=Remove-AWSCredentialProfile</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Set-AWSCredential</name><description><para>Saves AWS credentials to persistent store (-StoreAs) or temporarily for the shell using shell variable $StoredAWSCredentials.Note that temporary session-based credentials cannot be saved to the persistent store.</para></description><verb>Set</verb><noun>AWSCredential</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Saves AWS credentials to persistent store (-StoreAs) or temporarily for the shell using shell variable $StoredAWSCredentials. 
Note: For scripts written against earlier versions of this module this cmdlet can also be invoked with the alias <i>Set-AWSCredentials</i>. </para></description><syntax><syntaxItem><name>Set-AWSCredential</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="201"><name>ProfileName</name><description><para>The user-defined name of an AWS credentials or SAML-based role profile containing credential information. The profile is expected to be found in the secure credential file shared with the AWS SDK for .NET and AWS Toolkit for Visual Studio. You can also specify the name of a profile stored in the .ini-format credential file used with the AWS CLI and other AWS SDKs. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>StoreAs</name><description><para>The name to be used to identity the credentials in local storage. Use this with the -ProfileName parameter on cmdlets to load the stored credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>When saving AWS credentials to the shell variable $StoredAWSCredentials, this parameter allows to specify the scope of the variable. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. This parameter cannot be used when StoreAs is specified. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>NetworkCredential</name><description><para>Used with SAML-based authentication when ProfileName references a SAML role profile. Contains the network credentials to be supplied during authentication with the configured identity provider&#39;s endpoint. This parameter is not required if the user&#39;s default network identity can or should be used during authentication. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</parameterValue></parameter></syntaxItem><syntaxItem><name>Set-AWSCredential</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>StoreAs</name><description><para>The name to be used to identity the credentials in local storage. Use this with the -ProfileName parameter on cmdlets to load the stored credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>When saving AWS credentials to the shell variable $StoredAWSCredentials, this parameter allows to specify the scope of the variable. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. This parameter cannot be used when StoreAs is specified. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AccessKey</name><description><para>The AWS access key for the user account. This can be a temporary access key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SecretKey</name><description><para>The AWS secret key for the user account. This can be a temporary secret key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SessionToken</name><description><para>The session token if the access and secret keys are temporary session-based credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter></syntaxItem><syntaxItem><name>Set-AWSCredential</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>StoreAs</name><description><para>The name to be used to identity the credentials in local storage. Use this with the -ProfileName parameter on cmdlets to load the stored credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>When saving AWS credentials to the shell variable $StoredAWSCredentials, this parameter allows to specify the scope of the variable. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. This parameter cannot be used when StoreAs is specified. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ExternalID</name><description><para>The user-defined external ID to be used when assuming a role, if required by the role. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>MfaSerial</name><description><para>The MFA serial number to be used when assuming a role, if required by the role. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>RoleArn</name><description><para>The ARN of the role to assume for assume role credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SourceProfile</name><description><para>The name of the source profile to be used by assume role credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter></syntaxItem><syntaxItem><name>Set-AWSCredential</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>StoreAs</name><description><para>The name to be used to identity the credentials in local storage. Use this with the -ProfileName parameter on cmdlets to load the stored credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>When saving AWS credentials to the shell variable $StoredAWSCredentials, this parameter allows to specify the scope of the variable. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. This parameter cannot be used when StoreAs is specified. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>Credential</name><description><para>An AWSCredentials object instance containing access and secret key information, and optionally a token for session-based credentials. </para></description><parameterValue required="true" variableLength="false">Amazon.Runtime.AWSCredentials</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AccessKey</name><description><para>The AWS access key for the user account. This can be a temporary access key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>Credential</name><description><para>An AWSCredentials object instance containing access and secret key information, and optionally a token for session-based credentials. </para></description><parameterValue required="true" variableLength="false">Amazon.Runtime.AWSCredentials</parameterValue><type><name>Amazon.Runtime.AWSCredentials</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ExternalID</name><description><para>The user-defined external ID to be used when assuming a role, if required by the role. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>MfaSerial</name><description><para>The MFA serial number to be used when assuming a role, if required by the role. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>NetworkCredential</name><description><para>Used with SAML-based authentication when ProfileName references a SAML role profile. Contains the network credentials to be supplied during authentication with the configured identity provider&#39;s endpoint. This parameter is not required if the user&#39;s default network identity can or should be used during authentication. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</parameterValue><type><name>System.Management.Automation.PSCredential</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="202"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="201"><name>ProfileName</name><description><para>The user-defined name of an AWS credentials or SAML-based role profile containing credential information. The profile is expected to be found in the secure credential file shared with the AWS SDK for .NET and AWS Toolkit for Visual Studio. You can also specify the name of a profile stored in the .ini-format credential file used with the AWS CLI and other AWS SDKs. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>RoleArn</name><description><para>The ARN of the role to assume for assume role credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>When saving AWS credentials to the shell variable $StoredAWSCredentials, this parameter allows to specify the scope of the variable. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. This parameter cannot be used when StoreAs is specified. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue><type><name>Amazon.PowerShell.Common.VariableScope</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SecretKey</name><description><para>The AWS secret key for the user account. This can be a temporary secret key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SessionToken</name><description><para>The session token if the access and secret keys are temporary session-based credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SourceProfile</name><description><para>The name of the source profile to be used by assume role credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>StoreAs</name><description><para>The name to be used to identity the credentials in local storage. Use this with the -ProfileName parameter on cmdlets to load the stored credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>None</name><uri /><description /></type><description><para>This cmdlet does not generate any output.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Set-AWSCredential.html&amp;tocid=Set-AWSCredential</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks><examples><example><title>-------------------------- EXAMPLE 1 --------------------------</title><code>Set-AWSCredential -ProfileName myCredentials</code><remarks><para>Description</para><para>-----------</para><para>Loads the credentials contained in the specified profile and sets them active for all cmdlets in the current shell (the parameter name can be omitted for brevity). The cmdlet first searches the encrypted credential file shared with the AWS SDK for .NET and AWS Toolkit for Visual Studio. If this file does not contain a matching profile the cmdlet will attempt to load the profile from the text-format credential file shared with the AWS CLI, looking in its default location (%USERPROFILE%\.aws\credentials). If this file has been renamed, or does not exist in the default location, use the -ProfileLocation parameter to point to the credential file. Note that using -ProfileLocation disables profile lookup in the encrypted .NET store file.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 2 --------------------------</title><code>Set-AWSCredential -AccessKey AKIAIOSFODNN7EXAMPLE -SecretKey wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY -StoreAs myCredentials</code><remarks><para>Description</para><para>-----------</para><para>Saves the specified credentials as a profile named 'myCredentials'. The cmdlet does not affect any credentials currently set as active in the shell. To update the shell run the cmdlet again specifying the name of the profile (Set-AWSCredential -ProfileName myCredentials). On platforms that support the encrypted credential file the profile is written to the encrypted store. If the platform does not support the encrypted store (Linux, MacOS, Windows Nano Server) the profile is written to the plain text ini-format shared credential file at %HOME%\.aws\credentials. To force the profile to be written to the shared credential file on systems that support both stores, specify the path and filename of the credential file using the -ProfileLocation parameter.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 3 --------------------------</title><code>Set-AWSCredential -AccessKey AKIAIOSFODNN7EXAMPLE -SecretKey wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY -SessionToken SamPleTokeN.....</code><remarks><para>Description</para><para>-----------</para><para>Sets the temporary session-based credentials as active in the current shell. Note that temporary credentials cannot be saved as a profile.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 4 --------------------------</title><code>Set-AWSCredential -ProfileName myCredentials -ProfileLocation C:\myAWSCredentials.ini</code><remarks><para>Description</para><para>-----------</para><para>Loads the specified credentials from the ini-format credential file (with a non-default name and location) shared with the AWS CLI and sets the credentials in the profile active in the current shell. The -ProfileLocation parameter can be omitted if the credential file is named 'credentials' and is stored in the default location (%USERPROFILE%\.aws).</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 5 --------------------------</title><code>
$credential = Get-Credential -Message "Enter your domain credentials for federated identity"    
Set-AWSCredential -ProfileName mySamlCredentialProfile -NetworkCredential $credential
    </code><remarks><para>Description</para><para>-----------</para><para>Loads the specifed SAML federated credential profile (created with Set-AWSSAMLRoleProfile). The -NetworkCredential parameter is only needed if the logged-in user acount is not joined to the domain used for federation. In this scenario, when temporary credential generated is attempted and the user must be authenticated, caching the identity with the -NetworkCredential parameter value avoids a pop-up credential demand. For systems where the logged-in user account belongs to the domain the logged-in identity is used automatically and no credential demand is made. In this scenario you do not need to supply a credential value.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 6 --------------------------</title><code>
Set-AWSCredential -AccessKey AKIAIOSFODNN7EXAMPLE -SecretKey wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY -StoreAs sourceAccountProfile    
Set-AWSCredential -SourceProfile sourceAccountProfile -RoleArn arn:aws:iam::123456789012:role/my_role -StoreAs myRoleProfile
    </code><remarks><para>Description</para><para>-----------</para><para>Creates a cross-account role profile for the specified role. First you create a source profile that can be referenced by multiple role profiles. Then create the role profile for the specified role(s). When the role profile is loaded for use, the role described in the profile will be assumed and temporary credentials for the role set as active in the shell.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 7 --------------------------</title><code>Set-AWSCredential -SourceProfile sourceAccountProfile -RoleArn arn:aws:iam::123456789012:role/my_role -MfaSerial 124345 -StoreAs myRoleProfile</code><remarks><para>Description</para><para>-----------</para><para>Creates a cross-account role profile for the specified role that requires use of a two-factor MFA device during credential generation. When credentials for the role are generated the user is prompted to enter the value on the MFA device.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 8 --------------------------</title><code>Set-AWSCredential -SourceProfile sourceAccountProfile -RoleArn arn:aws:iam::123456789012:role/my_role -ExternalId idValue -StoreAs myRoleProfile</code><remarks><para>Description</para><para>-----------</para><para>Creates a cross-account role profile for the specified role that requires a unique identifier to be specified. The identifier is used by third parties when assuming roles in their customers' accounts.</para><para /><para /></remarks></example></examples></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Get-AWSRegion</name><description><para>Returns the set of available AWS regions.</para></description><verb>Get</verb><noun>AWSRegion</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Returns the set of available AWS regions. 
<br /><br /><b>Note:</b> The regions listed as output for this cmdlet are those known at the time this module was built. Regions launched subsequent to the build  will not be listed in the output. The new regions can still be used with the -Region parameter for cmdlets in this module by simply entering the region system name (eg us-west-2, eu-west-3 etc). </para></description><syntax><syntaxItem><name>Get-AWSRegion</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>SystemName</name><description><para>If set returns an AWSRegion instance corresponding to the specified system name (e.g. us-west-2). 
This parameter can also be used to return AWSRegion instances for the US GovCloud and China (Beijing) regions by specifying the relevant system name. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>IncludeChina</name><description><para>Include the China (Beijing) region in the returned collection of AWSRegion instances.  Note that use of this region requires an alternate set of credentials. 
This switch is ignored if the SystemName parameter is used to request a specific AWSRegion instance. To return the specific China (Beijing) region, specify a value of &#39;cn-north-1&#39; for the SystemName parameter. 
Default: off. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter></syntaxItem><syntaxItem><name>Get-AWSRegion</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>SystemName</name><description><para>If set returns an AWSRegion instance corresponding to the specified system name (e.g. us-west-2). 
This parameter can also be used to return AWSRegion instances for the US GovCloud and China (Beijing) regions by specifying the relevant system name. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>IncludeChina</name><description><para>Include the China (Beijing) region in the returned collection of AWSRegion instances.  Note that use of this region requires an alternate set of credentials. 
This switch is ignored if the SystemName parameter is used to request a specific AWSRegion instance. To return the specific China (Beijing) region, specify a value of &#39;cn-north-1&#39; for the SystemName parameter. 
Default: off. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>IncludeGovCloud</name><description><para>If set the returned collection includes &#39;Gov Cloud&#39; region(s). 
Default: off. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter></syntaxItem><syntaxItem><name>Get-AWSRegion</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>GovCloudOnly</name><description><para>If set the returned collection contains only the &#39;Gov Cloud&#39; region(s). 
Default: off. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>GovCloudOnly</name><description><para>If set the returned collection contains only the &#39;Gov Cloud&#39; region(s). 
Default: off. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>IncludeChina</name><description><para>Include the China (Beijing) region in the returned collection of AWSRegion instances.  Note that use of this region requires an alternate set of credentials. 
This switch is ignored if the SystemName parameter is used to request a specific AWSRegion instance. To return the specific China (Beijing) region, specify a value of &#39;cn-north-1&#39; for the SystemName parameter. 
Default: off. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>IncludeGovCloud</name><description><para>If set the returned collection includes &#39;Gov Cloud&#39; region(s). 
Default: off. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>SystemName</name><description><para>If set returns an AWSRegion instance corresponding to the specified system name (e.g. us-west-2). 
This parameter can also be used to return AWSRegion instances for the US GovCloud and China (Beijing) regions by specifying the relevant system name. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>AWSRegion</name><uri /><description /></type><description><para>AWSRegion instance for each available region.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Get-AWSRegion.html&amp;tocid=Get-AWSRegion</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks><examples><example><title>-------------------------- EXAMPLE 1 --------------------------</title><code>
Get-DefaultAWSRegion

Region         Name                      IsShellDefault
------         ----                      --------------
ap-northeast-1 Asia Pacific (Tokyo)      False
ap-northeast-2 Asia Pacific (Seoul)      False
ap-south-1     Asia Pacific (Mumbai)     False
ap-southeast-1 Asia Pacific (Singapore)  False
ap-southeast-2 Asia Pacific (Sydney)     False
ca-central-1   Canada (Central)          False
eu-central-1   EU Central (Frankfurt)    False
eu-west-1      EU West (Ireland)         False
eu-west-2      EU West (London)          False
eu-west-3      EU West (Paris)           False
sa-east-1      South America (Sao Paulo) False
us-east-1      US East (Virginia)        False
us-east-2      US East (Ohio)            False
us-west-1      US West (N. California)   False
us-west-2      US West (Oregon)          True
    </code><remarks><para>Description</para><para>-----------</para><para>Returns the list of regions known at the time the the module was built and released. Regions launched after the build and release are not shown but can still be used with other cmdlets in the module by specifying the 'system name' to the cmdlet's -Region parameter on invocation.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 2 --------------------------</title><code>
Get-DefaultAWSRegion

Region         Name                      IsShellDefault
------         ----                      --------------
ap-northeast-1 Asia Pacific (Tokyo)      False
ap-northeast-2 Asia Pacific (Seoul)      False
ap-south-1     Asia Pacific (Mumbai)     False
...
us-west-1      US West (N. California)   False
us-west-2      US West (Oregon)          True

Get-EC2Instance -Region not-shown-above
    </code><remarks><para>Description</para><para>-----------</para><para>This example shows how to use a region that is not listed in the output of the Get-AWSRegion cmdlet, likely as the region was launched after the installed version of the module was released. To use the unlisted region, simply pass the 'system name' (eg us-east-1, us-west-2) to the -Region parameter of the cmdlet you want to run (in this example, Get-EC2Instance). In this example 'not-shown-above' is the fictional system code of a new region.</para><para /><para /></remarks></example></examples></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Get-AWSPublicIpAddressRange</name><description><para>Returns the public IP address range data for Amazon Web Services. Each address range instance contains the service key, host region and IP address range (in CIDR notation).</para></description><verb>Get</verb><noun>AWSPublicIpAddressRange</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Returns the collection of current public IP address ranges for Amazon Web Services. Each address  range instance contains the service key, host region and IP address range (in CIDR notation). 
The cmdlet can optionally emit the set of currently known service keys, perform filtering of  output by service key or region information or output the publication date and time of the current information. 
The information processed by this cmdlet is contained in a publicly accessible JSON-format file at https://ip-ranges.amazonaws.com/ip-ranges.json. The information in this file is generated from our internal  system-of-record and is authoritative. You can expect it to change several times per week and should poll  accordingly 
For more details on the public IP address range data for Amazon Web Services,  see http://docs.aws.amazon.com/general/latest/gr/aws-ip-ranges.html. </para></description><syntax><syntaxItem><name>Get-AWSPublicIpAddressRange</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ServiceKey</name><description><para>If set, contains one or more service keys to filter the output to. This parameter can be used in conjunction with the Region parameter to filter by region and service key. </para></description><parameterValue required="true" variableLength="false">System.String[]</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Region</name><description><para>If set, contains one or more region identifiers (e.g. &quot;us-east-1&quot;, &quot;global&quot;) to filter the output to. This parameter can be used in conjunction with the ServiceKey parameter to filter by region and service key. </para></description><parameterValue required="true" variableLength="false">System.String[]</parameterValue></parameter></syntaxItem><syntaxItem><name>Get-AWSPublicIpAddressRange</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>OutputServiceKeys</name><description><para>If set the cmdlet emits the collection of currently-known service keys used in the address range data. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter></syntaxItem><syntaxItem><name>Get-AWSPublicIpAddressRange</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>OutputPublicationDate</name><description><para>If set the cmdlet emits the publication date and time of the data. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>OutputPublicationDate</name><description><para>If set the cmdlet emits the publication date and time of the data. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>OutputServiceKeys</name><description><para>If set the cmdlet emits the collection of currently-known service keys used in the address range data. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Region</name><description><para>If set, contains one or more region identifiers (e.g. &quot;us-east-1&quot;, &quot;global&quot;) to filter the output to. This parameter can be used in conjunction with the ServiceKey parameter to filter by region and service key. </para></description><parameterValue required="true" variableLength="false">System.String[]</parameterValue><type><name>System.String[]</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ServiceKey</name><description><para>If set, contains one or more service keys to filter the output to. This parameter can be used in conjunction with the Region parameter to filter by region and service key. </para></description><parameterValue required="true" variableLength="false">System.String[]</parameterValue><type><name>System.String[]</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>AWSPublicIpAddressRange</name><uri /><description /></type><description><para>A collection of AWSPublicIpAddressRange instances. This is the default output from the cmdlet.</para></description></returnValue><returnValue><type><name>String[]</name><uri /><description /></type><description><para>A collection of currently-known service keys used in the address data, if the -OutputServiceKeys switch is set.</para></description></returnValue><returnValue><type><name>DateTime</name><uri /><description /></type><description><para>The publication date and time if the -OutputPublicationDate switch is set.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Get-AWSPublicIpAddressRange.html&amp;tocid=Get-AWSPublicIpAddressRange</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks><examples><example><title>-------------------------- EXAMPLE 1 --------------------------</title><code>
Get-AWSPublicIpAddressRange

IpPrefix                Region                Service
--------                ------                -------
50.19.0.0/16            us-east-1             AMAZON
54.239.98.0/24          us-east-1             AMAZON
...
50.19.0.0/16            us-east-1             EC2
75.101.128.0/17         us-east-1             EC2
...
205.251.192.0/21        GLOBAL                ROUTE53
54.232.40.64/26         sa-east-1             ROUTE53_HEALTHCHECKS
...
54.239.192.0/19         GLOBAL                CLOUDFRONT
204.246.176.0/20        GLOBAL                CLOUDFRONT
...
    </code><remarks><para>Description</para><para>-----------</para><para>Outputs all of the current IP address range objects to the pipeline.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 2 --------------------------</title><code>
Get-AWSPublicIpAddressRange -OutputServiceKeys

AMAZON
EC2
ROUTE53
ROUTE53_HEALTHCHECKS
CLOUDFRONT
    </code><remarks><para>Description</para><para>-----------</para><para>Outputs the currently used set of 'Service' keys to the pipeline.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 3 --------------------------</title><code>
Get-AWSPublicIpAddressRange -OutputPublicationDate

Monday, December 15, 2014 4:41:01 PM
    </code><remarks><para>Description</para><para>-----------</para><para>Outputs the publication date of the IP address range information.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 4 --------------------------</title><code>Get-AWSPublicIpAddressRange -ServiceKey ec2</code><remarks><para>Description</para><para>-----------</para><para>Filters the IP address ranges to output only those with a 'Service' value of 'EC2' to the pipeline.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 5 --------------------------</title><code>Get-AWSPublicIpAddressRange -Region us-west-2</code><remarks><para>Description</para><para>-----------</para><para>Filters the IP address ranges to output only those used in the US West (Oregon) region to the pipeline.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 6 --------------------------</title><code>Get-AWSPublicIpAddressRange -ServiceKey ec2,route53_healthchecks -Region us-west-2</code><remarks><para>Description</para><para>-----------</para><para>Filters the IP address ranges to output only those belonging to EC2 and CloudFront and  in the US West (Oregon) region to the pipeline. Multiple values can also be specified for the -Region parameter.</para><para /><para /></remarks></example></examples></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Set-AWSSamlEndpoint</name><description><para>Creates or updates an endpoint settings definition for use with SAML role profiles.</para></description><verb>Set</verb><noun>AWSSamlEndpoint</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Creates or updates an endpoint settings definition for use with SAML role profiles. The name of the endpoint settings is used with the Set-AWSSamlRoleProfile and Set-AWSCredentials cmdlets to associate one or more role profiles to a shared endpoint definition. </para></description><syntax><syntaxItem><name>Set-AWSSamlEndpoint</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>Endpoint</name><description><para>The endpoint to be used when authenticating users prior to requesting temporary role- based AWS credentials. The full endpoint of the identity provider must be specified and it must be a HTTPS-scheme URL. </para></description><parameterValue required="true" variableLength="false">System.Uri</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>StoreAs</name><description><para>The user-defined name to assign to the endpoint settings. This name will be used when creating or accessing role profiles with the Set-AWSSamlRoleProfile cmdlet to set up and use role-based credential profiles that use the endpoint to authenticate the user. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AuthenticationType</name><description><para>The authentication type (or protocol type) used when communicating with the endpoint. If not configured for an endpoint &#39;Kerberos&#39; is assumed. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AuthenticationType</name><description><para>The authentication type (or protocol type) used when communicating with the endpoint. If not configured for an endpoint &#39;Kerberos&#39; is assumed. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>Endpoint</name><description><para>The endpoint to be used when authenticating users prior to requesting temporary role- based AWS credentials. The full endpoint of the identity provider must be specified and it must be a HTTPS-scheme URL. </para></description><parameterValue required="true" variableLength="false">System.Uri</parameterValue><type><name>System.Uri</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>StoreAs</name><description><para>The user-defined name to assign to the endpoint settings. This name will be used when creating or accessing role profiles with the Set-AWSSamlRoleProfile cmdlet to set up and use role-based credential profiles that use the endpoint to authenticate the user. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>System.String</name><uri /><description /></type><description><para>The cmdlet returns the name assigned to the endpoint settings to the pipeline.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Set-AWSSamlEndpoint.html&amp;tocid=Set-AWSSamlEndpoint</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks><examples><example><title>-------------------------- EXAMPLE 1 --------------------------</title><code>
$endpoint = "https://adfs.example.com/adfs/ls/IdpInitiatedSignOn.aspx?loginToRp=urn:amazon:webservices"	
Set-AWSSamlEndpoint -StoreAs MyADFSEndpoint -Endpoint $endpoint
	</code><remarks><para>Description</para><para>-----------</para><para>Creates or updates a profile name MyADFSEndpoint for use with Set-AWSSamlRoleProfile. Kerberos will be used as the authentication protocol when authenticating users against the endoint.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 2 --------------------------</title><code>
$endpoint = "https://adfs.example.com/adfs/ls/IdpInitiatedSignOn.aspx?loginToRp=urn:amazon:webservices"	
Set-AWSSamlEndpoint -StoreAs MyADFSEndpoint -Endpoint $endpoint -AuthenticationType NTLM
	</code><remarks><para>Description</para><para>-----------</para><para>Creates or updates a profile name MyADFSEndpoint for use with Set-AWSSamlRoleProfile. The endpoint is configured to use the NTLM protocol during authentication (other options are Digest, Basic, Kerberos and Negotiate).</para><para /><para /></remarks></example></examples></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Get-AWSCmdletName</name><description><para>Searches for cmdlets that invoke a Amazon Web Services service operation, map to an AWS CLI command, or lists all cmdlets that belong to a service identified by one or more words in its name or its cmdlet noun prefix. If no service name or pattern is given all service cmdlets are output.</para></description><verb>Get</verb><noun>AWSCmdletName</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Returns the name of the cmdlet that invokes a named Amazon Web Services service operation, optionally restricting the scope of the search to a specific service which can be identified using one or more words from the service name or the prefix applied to the nouns of cmdlets belonging to the service. 
Returns the names and corresponding service operations for a specific Amazon Web Services service which can be identified using one or more words from the service name or the  prefix applied to the nouns of cmdlets belonging to the service. 
If no match is made, no data is output. </para></description><syntax><syntaxItem><name>Get-AWSCmdletName</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>ApiOperation</name><description><para>The name of the service operation (api) to search for. If not further restricted by service prefix or service name, all cmdlets across all services are inspected for a matching operation. 
By default the value supplied for this parameter is treated as a simple whole-word pattern  to match. If the -MatchWithRegex switch is set the value is used as a regular expression. In both cases the search is case-insensitive/invariant culture. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>CmdletName</name><description><para>The name of the cmdlet to search for. If not further restricted by service prefix or service name, all cmdlets across all services are inspected. 
By default the value supplied for this parameter is treated as a simple whole-word pattern  to match. If the -MatchWithRegex switch is set the value is used as a regular expression. In both cases the search is case-insensitive/invariant culture. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>MatchWithRegex</name><description><para>If set, the value supplied for the ApiOperation or CmdletName parameter is assumed to be a regular expression. By default, the value supplied for ApiOperation or CmdletName are treated as a simple case-insensitive whole-word pattern to match (the cmdlet will surround the value with ^ and $ tokens automatically). If the switch is set no modification of the supplied value is performed. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Service</name><description><para>Restricts the search to the cmdlets belonging to services that match the full or  partial term supplied to the parameter value, which can be the service prefix (for example &#39;EC2&#39;) or one or more terms from the service name (for example &#39;compute&#39; or &#39;compute cloud&#39;). 
When partial names are used (as opposed to a prefix code) all services  for which a match can be found are used to assist in the cmdlet results. A  regular expression can always be supplied for the parameter value. 
If this is the only parameter supplied to the cmdlet, the output will list all of the cmdlets belonging to the services matching the search term, together  with the corresponding service operation names. Note that for services with &#39;helper&#39; cmdlets that do not invoke a particular service operation the ServiceOperation member for the cmdlet in the resulting output is left blank. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter></syntaxItem><syntaxItem><name>Get-AWSCmdletName</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AwsCliCommand</name><description><para>The AWS CLI command to match. For example &#39;aws ec2 describe-instances&#39;.  
The cmdlet will make a best-effort to identify the owning service and the operation  name by parsing the command using known conventions for the AWS CLI command format. The &#39;aws&#39; prefix may be omitted and any AWS CLI options (identified by the prefix characters --) are skipped when parsing the value to identify the service code and operation name elements. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>ApiOperation</name><description><para>The name of the service operation (api) to search for. If not further restricted by service prefix or service name, all cmdlets across all services are inspected for a matching operation. 
By default the value supplied for this parameter is treated as a simple whole-word pattern  to match. If the -MatchWithRegex switch is set the value is used as a regular expression. In both cases the search is case-insensitive/invariant culture. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AwsCliCommand</name><description><para>The AWS CLI command to match. For example &#39;aws ec2 describe-instances&#39;.  
The cmdlet will make a best-effort to identify the owning service and the operation  name by parsing the command using known conventions for the AWS CLI command format. The &#39;aws&#39; prefix may be omitted and any AWS CLI options (identified by the prefix characters --) are skipped when parsing the value to identify the service code and operation name elements. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>CmdletName</name><description><para>The name of the cmdlet to search for. If not further restricted by service prefix or service name, all cmdlets across all services are inspected. 
By default the value supplied for this parameter is treated as a simple whole-word pattern  to match. If the -MatchWithRegex switch is set the value is used as a regular expression. In both cases the search is case-insensitive/invariant culture. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>MatchWithRegex</name><description><para>If set, the value supplied for the ApiOperation or CmdletName parameter is assumed to be a regular expression. By default, the value supplied for ApiOperation or CmdletName are treated as a simple case-insensitive whole-word pattern to match (the cmdlet will surround the value with ^ and $ tokens automatically). If the switch is set no modification of the supplied value is performed. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Service</name><description><para>Restricts the search to the cmdlets belonging to services that match the full or  partial term supplied to the parameter value, which can be the service prefix (for example &#39;EC2&#39;) or one or more terms from the service name (for example &#39;compute&#39; or &#39;compute cloud&#39;). 
When partial names are used (as opposed to a prefix code) all services  for which a match can be found are used to assist in the cmdlet results. A  regular expression can always be supplied for the parameter value. 
If this is the only parameter supplied to the cmdlet, the output will list all of the cmdlets belonging to the services matching the search term, together  with the corresponding service operation names. Note that for services with &#39;helper&#39; cmdlets that do not invoke a particular service operation the ServiceOperation member for the cmdlet in the resulting output is left blank. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>PSObject</name><uri /><description /></type><description><para>A collection of zero or more objects listing cmdlets that implement the specified operation, map to the AWS CLI command or belong to the specified service.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Get-AWSCmdletName.html&amp;tocid=Get-AWSCmdletName</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks><examples><example><title>-------------------------- EXAMPLE 1 --------------------------</title><code>
Get-AWSCmdletName -ApiOperation describeinstances

CmdletName            ServiceOperation        ServiceName                            CmdletNounPrefix
----------            ----------------        -----------                            ----------------
Get-EC2Instance       DescribeInstances       Amazon Elastic Compute Cloud           EC2
Get-OPSInstances      DescribeInstances       AWS OpsWorks                           OPS
    </code><remarks><para>Description</para><para>-----------</para><para>Returns the names of the all cmdlets that invoke an API matching the term 'describeinstances' across all services. In this example, 'Get-EC2Instance' from Amazon EC2 and Get-OPSInstances from Amazon OpsWorks are output.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 2 --------------------------</title><code>
Get-AWSCmdletName -ApiOperation describeinstances -Service ec2

CmdletName            ServiceOperation        ServiceName                            CmdletNounPrefix
----------            ----------------        -----------                            ----------------
Get-EC2Instance       DescribeInstances       Amazon Elastic Compute Cloud           EC2
    </code><remarks><para>Description</para><para>-----------</para><para>Returns the names of the all cmdlets that invoke an API matching the term 'describeinstances' for the Amazon EC2 service.In this example, 'Get-EC2Instance' is output.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 3 --------------------------</title><code>
Get-AWSCmdletName -ApiOperation describeinstances -Service "compute cloud"

CmdletName            ServiceOperation        ServiceName                            CmdletNounPrefix
----------            ----------------        -----------                            ----------------
Get-EC2Instance       DescribeInstances       Amazon Elastic Compute Cloud           EC2
    </code><remarks><para>Description</para><para>-----------</para><para>Returns the names of the all cmdlets that invoke an API matching the term 'describeinstances' for the Amazon EC2 service.In this example, 'Get-EC2Instance' is output.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 4 --------------------------</title><code>
Get-AWSCmdletName -ApiOperation securitygroup -MatchWithRegex

CmdletName                              ServiceOperation                        ServiceName                            CmdletNounPrefix
----------                              ----------------                        -----------                            ----------------
Approve-ECCacheSecurityGroupIngress     AuthorizeCacheSecurityGroupIngress      Amazon ElastiCache                     EC
Get-ECCacheSecurityGroup                DescribeCacheSecurityGroups             Amazon ElastiCache                     EC
...
Get-EC2SecurityGroup                    DescribeSecurityGroups                  Amazon Elastic Compute Cloud           EC2
Grant-EC2SecurityGroupEgress            AuthorizeSecurityGroupEgress            Amazon Elastic Compute Cloud           EC2
Grant-EC2SecurityGroupIngress           AuthorizeSecurityGroupIngress           Amazon Elastic Compute Cloud           EC2
...
New-RDSDBSecurityGroup                  CreateDBSecurityGroup                   Amazon Relational Database Service     RDS
Remove-RDSDBSecurityGroup               DeleteDBSecurityGroup                   Amazon Relational Database Service     RDS
Revoke-RDSDBSecurityGroupIngress        RevokeDBSecurityGroupIngress            Amazon Relational Database Service     RDS
...
Approve-RSClusterSecurityGroupIngress   AuthorizeClusterSecurityGroupIngress    Amazon Redshift                        RS
Get-RSClusterSecurityGroups             DescribeClusterSecurityGroups           Amazon Redshift                        RS
    </code><remarks><para>Description</para><para>-----------</para><para>Returns the names of the all cmdlets that contain the term 'securitygroup' in the operation they invoke, across all services.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 5 --------------------------</title><code>
Get-AWSCmdletName -ApiOperation securitygroup -MatchWithRegex -Service ec2

CmdletName                          ServiceOperation                        ServiceName                            CmdletNounPrefix
----------                          ----------------                        -----------                            ----------------
Get-EC2SecurityGroup                DescribeSecurityGroups                  Amazon Elastic Compute Cloud           EC2
Grant-EC2SecurityGroupEgress        AuthorizeSecurityGroupEgress            Amazon Elastic Compute Cloud           EC2
Grant-EC2SecurityGroupIngress       AuthorizeSecurityGroupIngress           Amazon Elastic Compute Cloud           EC2
...
    </code><remarks><para>Description</para><para>-----------</para><para>Returns the names of the all Amazon EC2 cmdlets that contain the term 'securitygroup' in the operation they invoke.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 6 --------------------------</title><code>
Get-AWSCmdletName -ApiOperation listmetrics -Service cloudwatch

CmdletName              ServiceOperation        ServiceName            CmdletNounPrefix
----------              ----------------        -----------            ----------------
Get-CWMetrics           ListMetrics             Amazon CloudWatch      CW
    </code><remarks><para>Description</para><para>-----------</para><para>Returns the name of the cmdlet that invokes the Amazon CloudWatch 'ListMetrics' operation. In this example, 'Get-CWMetrics' is output. The same result can be obtained by using the service prefix, 'cw' as the value for the -Service parameter.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 7 --------------------------</title><code>
Get-AWSCmdletName -AwsCliCommand "aws ec2 describe-images"

CmdletName              ServiceOperation        ServiceName                            CmdletNounPrefix
----------              ----------------        -----------                            ----------------
Get-EC2Image            DescribeImages          Amazon Elastic Compute Cloud           EC2
    </code><remarks><para>Description</para><para>-----------</para><para>Returns the name of the cmdlet that performs the same operation as the specified AWS CLI command. In this example, 'Get-EC2Image' is output. Any options (prefixed by --) in the AWS CLI command are ignored. The initial 'aws' can also be omitted. This format is useful when transcoding an AWS CLI sample to AWS PowerShell.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 8 --------------------------</title><code>
Get-AWSCmdletName -Service ec2

CmdletName                            ServiceOperation                       ServiceName
----------                            ----------------                       -----------
Add-EC2ClassicLinkVpc                 AttachClassicLinkVpc                   Amazon Elastic Compute Cloud
Add-EC2InternetGateway                AttachInternetGateway                  Amazon Elastic Compute Cloud
Add-EC2NetworkInterface               AttachNetworkInterface                 Amazon Elastic Compute Cloud
...
Get-ECSClusterDetail                  DescribeClusters                       Amazon EC2 Container Service
Get-ECSClusters                       ListClusters                           Amazon EC2 Container Service
Get-ECSClusterService                 ListServices                           Amazon EC2 Container Service
...	
	</code><remarks><para>Description</para><para>-----------</para><para>Performs a search to list all cmdlets that have 'ec2' in either the service name or the cmdlet noun prefix. In this example this matches Amazon Elastic Compute Cloud (search term matches noun prefix) and Amazon EC2 Container Service (search term found in the name).</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 9 --------------------------</title><code>
Get-AWSCmdletName -Service compute

CmdletName                            ServiceOperation                       ServiceName
----------                            ----------------                       -----------
Add-EC2ClassicLinkVpc                 AttachClassicLinkVpc                   Amazon Elastic Compute Cloud
Add-EC2InternetGateway                AttachInternetGateway                  Amazon Elastic Compute Cloud
Add-EC2NetworkInterface               AttachNetworkInterface                 Amazon Elastic Compute Cloud
...
Unregister-EC2Image                   DeregisterImage                        Amazon Elastic Compute Cloud
Unregister-EC2PrivateIpAddress        UnassignPrivateIpAddresses             Amazon Elastic Compute Cloud
Unregister-EC2RouteTable              DisassociateRouteTable                 Amazon Elastic Compute Cloud
	</code><remarks><para>Description</para><para>-----------</para><para>Performs a search to list all cmdlets that have 'compute' in either the service name or the cmdlet noun prefix. In this example the match is for Amazon Elastic Compute Cloud only (search term found in the name).</para><para /><para /></remarks></example></examples></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Set-DefaultAWSRegion</name><description><para>Sets a default AWS region system name (e.g. us-west-2, eu-west-1 etc) into the shell variable $StoredAWSRegion. AWS cmdlets will use the value of this variable to satisfy their -Region parameter if the parameter is not specified.</para></description><verb>Set</verb><noun>DefaultAWSRegion</noun><copyright><para>&amp;copy; Copyright 2012 - 2021 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Sets a default AWS region into the shell environment, accessible as $StoredAWSRegion. 
<br /><br /><b>Note:</b> The regions available for tab completion to the -Region parameter were those known at the time this module was built. Regions launched subsequent to the build will not be listed for tab completion but can still be used by simply entering the region system name. </para></description><syntax><syntaxItem><name>Set-DefaultAWSRegion</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="211"><name>Region</name><description><para>The system name of an AWS region or an AWSRegion instance. This governs the endpoint that will be used when calling service operations. Note that  the AWS resources referenced in a call are usually region-specific. 
If the Region parameter is supplied the cmdlet ignores the ProfileLocation parameter. </para></description><parameterValue required="true" variableLength="false">System.Object</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="212"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs). When supplied the cmdlet will attempt to read the default region to be used from the credential file&#39;s default profile. 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>This parameter allows to specify the scope of the region configuration to set. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="212"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs). When supplied the cmdlet will attempt to read the default region to be used from the credential file&#39;s default profile. 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="211"><name>Region</name><description><para>The system name of an AWS region or an AWSRegion instance. This governs the endpoint that will be used when calling service operations. Note that  the AWS resources referenced in a call are usually region-specific. 
If the Region parameter is supplied the cmdlet ignores the ProfileLocation parameter. </para></description><parameterValue required="true" variableLength="false">System.Object</parameterValue><type><name>System.Object</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Scope</name><description><para>This parameter allows to specify the scope of the region configuration to set. For details about variables scopes see https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes. </para></description><parameterValue required="true" variableLength="false">Amazon.PowerShell.Common.VariableScope</parameterValue><type><name>Amazon.PowerShell.Common.VariableScope</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>None</name><uri /><description /></type><description><para>This cmdlet does not generate any output.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Set-DefaultAWSRegion.html&amp;tocid=Set-DefaultAWSRegion</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink></relatedLinks><examples><example><title>-------------------------- EXAMPLE 1 --------------------------</title><code>Set-DefaultAWSRegion -Region us-west-2</code><remarks><para>Description</para><para>-----------</para><para>Sets the default region for all cmdlets in the current shell to 'us-west-2' (the parameter name can be omitted for brevity). Once a shell default has been set you can override the default by using the -Region parameter with the specific cmdlet(s) as required.</para><para /><para /></remarks></example></examples></command></helpItems>