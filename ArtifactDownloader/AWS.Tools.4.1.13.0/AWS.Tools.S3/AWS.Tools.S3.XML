<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.S3</name>
    </assembly>
    <members>
        <member name="M:Amazon.PowerShell.Cmdlets.S3.AmazonS3Helper.CleanKey(System.String)">
            <summary>
            'Cleans' a user-supplied S3 key to ensure it does not start with space, \ or /
            and all remaining partitions use / and it does not end with a space.
            </summary>
            <param name="userKeyOrPrefix">The original user key or key prefix</param>
            <returns>Cleaned key</returns>
        </member>
        <member name="M:Amazon.PowerShell.Cmdlets.S3.AmazonS3Helper.BucketNameFromParam(System.Object,System.String)">
            <summary>
            Extracts a bucket name from a supplied parameter object, which should be
            a string or S3Bucket instance.
            </summary>
            <param name="paramValue"></param>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PowerShell.Cmdlets.S3.AmazonS3Helper.BucketRegionFromParam(System.Object,System.String)">
            <summary>
            Extracts the system name of a region for a bucket from parameter value
            </summary>
            <param name="paramValue"></param>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.PowerShell.Cmdlets.S3.AmazonS3Helper.SetExtraRequestFields(Amazon.S3.Transfer.TransferUtilityUploadDirectoryRequest,Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.CmdletContext)">
            <summary>
            Sets metadata and headers collections for the request.
            </summary>
            <param name="request"></param>
            <param name="cmdletContext"></param>
        </member>
        <member name="M:Amazon.PowerShell.Cmdlets.S3.AmazonS3Helper.SetMetadataAndHeaders(Amazon.S3.Transfer.TransferUtilityUploadRequest,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Sets metadata and headers collections for the request.
            </summary>
            <param name="request"></param>
            <param name="metadata"></param>
            <param name="headers"></param>
        </member>
        <member name="M:Amazon.PowerShell.Cmdlets.S3.AmazonS3Helper.SetMetadataAndHeaders(Amazon.S3.Model.PutObjectRequest,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Sets metadata and headers collections for the request.
            </summary>
            <param name="request"></param>
            <param name="metadata"></param>
            <param name="headers"></param>
        </member>
        <member name="M:Amazon.PowerShell.Cmdlets.S3.AmazonS3Helper.SetMetadataAndHeaders(Amazon.S3.Model.CopyObjectRequest,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Sets metadata and headers collections for the request.
            </summary>
            <param name="request"></param>
            <param name="metadata"></param>
            <param name="headers"></param>
        </member>
        <member name="M:Amazon.PowerShell.Cmdlets.S3.AmazonS3Helper.SetMetadataAndHeaders(Amazon.S3.Model.InitiateMultipartUploadRequest,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Sets metadata and headers collections for the request.
            </summary>
            <param name="request"></param>
            <param name="metadata"></param>
            <param name="headers"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet" -->
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.BucketName">
            <summary>
            <para>The name of the bucket containing the source object.</para><para>When using this API with an access point, you must direct requests to the access point hostname. 
            The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. 
            When using this operation using an access point through the AWS SDKs, you provide the access point 
            ARN in place of the bucket name. For more information about access point ARNs, see 
            <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html">Using Access Points</a> 
            in the <i>Amazon Simple Storage Service Developer Guide</i>.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.Key">
            <summary>
            The key of the single source object to copy.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.VersionId">
            <summary>
            Specifies the version of the source object to copy.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.DestinationKey">
            <summary>
            The key for the copy of the source S3 object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.DestinationBucket">
            <summary>
            <para>The name of the bucket that will contain the copied object. If not specified,
            the copy is to another S3 object in the source bucket.</para><para>When using this API with an access point, you must direct requests to the access point hostname. 
            The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. 
            When using this operation using an access point through the AWS SDKs, you provide the access point 
            ARN in place of the bucket name. For more information about access point ARNs, see 
            <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html">Using Access Points</a> 
            in the <i>Amazon Simple Storage Service Developer Guide</i>.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.MetadataDirective">
            <summary>
            Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request.
            Valid values are COPY or REPLACE. COPY is the default if not specified.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.ContentType">
            <summary>
            Sets the content type of the target object; if not specified an attempt is made to infer it using the destination
            or source object keys.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.CannedACLName" -->
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.PublicReadOnly">
            <summary>
            If set, applies an ACL making the bucket public with read-only permissions
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.PublicReadWrite">
            <summary>
            If set, applies an ACL making the bucket public with read-write permissions
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.StorageClass">
            <summary>
            Specifies the storage class for the object.
            Please refer to <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a> for information on S3 storage classes.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.StandardStorage">
            <summary>
            Specifies the STANDARD storage class, which is the default storage class for S3 objects.
            Provides a 99.999999999% durability guarantee.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.ReducedRedundancyStorage">
            <summary>
            Specifies S3 should use REDUCED_REDUNDANCY storage class for the object. This
            provides a reduced (99.99%) durability guarantee at a lower
            cost as compared to the STANDARD storage class. Use this
            storage class for non-mission critical data or for data
            that doesnâ€™t require the higher level of durability that S3
            provides with the STANDARD storage class.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.ServerSideEncryption">
            <summary>
            Specifies the encryption used on the server to store the content.
            Allowable values: None, AES256, aws:kms.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.ServerSideEncryptionKeyManagementServiceKeyId">
            <summary>
            Specifies the AWS KMS key for Amazon S3 to use to encrypt the object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.WebsiteRedirectLocation">
            <summary>
            If this is set then when a GET request is made from the S3 website endpoint a 301 HTTP status code
            will be returned indicating a redirect with this value as the redirect location.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.Metadata">
            <summary>
            Metadata headers to set on the object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.HeaderCollection">
            <summary>
            Response headers to set on the object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.TagSet">
            <summary>
            One or more tags to apply to the object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.LocalFile">
            <summary>
            The full path to the local file that will be created.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.LocalFolder">
            <summary>
            <para>
            The path to a local folder that will contain the downloaded object. If a relative path
            is supplied, it will be resolved to a full path using the current session's location.
            </para>
            <para>
            When copying to a local folder the object key is used as the filename. Note that object
            keys that are not valid filenames for the host system could cause an exception to be thrown.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.KeyPrefix">
            <summary>
            Used to download multiple objects to the specified local folder. The supplied prefix
            will be used to determine the set of objects to download that share the same key prefix.
            You must specify either this parameter, or the -Key parameter, to determine what object(s) to 
            download.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.ETagToMatch">
            <summary>
            Copies the object if its entity tag (ETag) matches the specified tag; otherwise return a PreconditionFailed.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.ETagToNotMatch">
            <summary>
            Copies the object if its entity tag (ETag) is different than the specified Etag; otherwise returns an error.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.ModifiedSinceDate">
            <summary>
            Copies the object if it has been modified since the specified time; otherwise returns an error.
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.UnmodifiedSinceDate">
            <summary>
            Copies the object if it hasn't been modified since the specified time; otherwise returns a PreconditionFailed.
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.UtcModifiedSinceDate">
            <summary>
            Copies the object if it has been modified since the specified time; otherwise returns an error.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.UtcUnmodifiedSinceDate">
            <summary>
            Copies the object if it hasn't been modified since the specified time; otherwise returns a PreconditionFailed.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.CopySourceServerSideEncryptionCustomerMethod">
            <summary>
            Specifies the server-side encryption algorithm used on the source object with the customer provided key.
            Allowable values: None or AES256.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.CopySourceServerSideEncryptionCustomerProvidedKey">
            <summary>
            Specifies base64-encoded encryption key for Amazon S3 used on the source object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.CopySourceServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            Specifies base64-encoded MD5 of the encryption key for Amazon S3 used on the source object. This field is optional, the SDK will calculate the MD5 if this is not set.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.ServerSideEncryptionCustomerMethod">
            <summary>
            Specifies the server-side encryption algorithm to be used with the customer provided key.
            Allowable values: None or AES256.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.ServerSideEncryptionCustomerProvidedKey">
            <summary>
            Specifies base64-encoded encryption key for Amazon S3 to use to decrypt the object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.ServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            Specifies base64-encoded MD5 of the encryption key for Amazon S3 to use to decrypt the object. This field is optional, 
            the SDK will calculate the MD5 if this is not set.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.MultiPartObjectCopyController.PartDetail">
            <summary>
            Byte range for each part and the service's etag value
            on completion of the part upload
            </summary>
        </member>
        <member name="F:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.MultiPartObjectCopyController._parts">
            <summary>
            Contains the collection of parts we need to process
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.MultiPartObjectCopyController.NumberOfParts">
            <summary>
            The number of parts we've broken the upload into, based on
            the max allowed by S3 in conjunction with the minimum part size
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.MultiPartObjectCopyController.Error">
            <summary>
            If set, an error was trapped by one of the upload threads
            and the outer code should quit (ShouldExit will yield true)
            and report this to the user. The exception is posted by the
            first thread to encounter an error; errors on other threads
            are dropped on the floor.
            </summary>
        </member>
        <member name="M:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.MultiPartObjectCopyController.ShouldExit">
            <summary>
            Indicates to the caller we're done either because we've encountered an error or
            all parts have been processed
            </summary>
            <returns></returns>
        </member>
        <member name="M:Amazon.PowerShell.Cmdlets.S3.CopyS3ObjectCmdlet.MultiPartObjectCopyController.Run">
            <summary>
            Launches threads to process the part list and immediately
            exits back to the caller.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketCmdlet">
            <summary>
            Returns a list of all buckets owned by the authenticated sender of the request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketCmdlet.BucketName">
            <summary>
            If set, returns a single S3Bucket instance mapping to the specified bucket.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Buckets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.ListBucketsResponse).
            Specifying the name of a property of type Amazon.S3.Model.ListBucketsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetMultipartUploadCmdlet">
            <summary>
            This action lists in-progress multipart uploads. 
            An in-progress multipart upload is a multipart upload that has been initiated using the 
            Initiate Multipart Upload request, but has not yet been completed or aborted.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetMultipartUploadCmdlet.BucketName">
            <summary>
            <para>
            <para>The name of the bucket to which the multipart upload was initiated.</para><para>When using this action with an access point, you must direct requests 
            to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. 
            When using this action with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. 
            For more information about access point ARNs, see 
            <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</para>
            <para>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. 
            The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. 
            When using this action using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. 
            For more information about S3 on Outposts ARNs, see 
            <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetMultipartUploadCmdlet.Encoding">
            <summary>
            <para>
            Requests Amazon S3 to encode the object keys in the response and specifies
            the encoding method to use. An object key may contain any Unicode character;
            however, XML 1.0 parser cannot parse some characters, such as characters
            with an ASCII value from 0 to 10. For characters that are not supported in
            XML 1.0, you can add this parameter to request that Amazon S3 encode the
            keys in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetMultipartUploadCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetMultipartUploadCmdlet.Delimiter">
            <summary>
            <para>
            Character you use to group keys.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetMultipartUploadCmdlet.KeyMarker">
            <summary>
            <para>
            Together with upload-id-marker, this parameter specifies the multipart upload after which listing should begin.
            </para>
            <para>
            If upload-id-marker is not specified, only the keys lexicographically greater than the specified key-marker will be included in the list.
            </para>
            <para>
            If upload-id-marker is specified, any multipart uploads for a key equal to the key-marker might also be included, 
            provided those multipart uploads have upload IDs lexicographically greater than the specified upload-id-marker.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetMultipartUploadCmdlet.MaxUpload">
            <summary>
            <para>
            Sets the maximum number of multipart uploads, from 1 to 1,000, to return in the response body. 1,000 is the maximum number of uploads that can be returned in a response.
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetMultipartUploadCmdlet.Prefix">
            <summary>
            <para>
            Lists in-progress uploads only for those keys that begin with the specified prefix.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetMultipartUploadCmdlet.UploadIdMarker">
            <summary>
            Together with key-marker, specifies the multipart upload after which listing should begin. 
            If key-marker is not specified, the upload-id-marker parameter is ignored. Otherwise, 
            any multipart uploads for a key equal to the key-marker might be included in the list only 
            if they have an upload ID lexicographically greater than the specified upload-id-marker.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetMultipartUploadCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetMultipartUploadCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MultipartUploads'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.ListMultipartUploadsResponse).
            Specifying the name of a property of type Amazon.S3.Model.ListMultipartUploadsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetMultipartUploadCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of KeyMarker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectCmdlet">
            <summary>
            Returns some or all (up to 1,000) of the objects in a bucket. You can use the request
            parameters as selection criteria to return a subset of the objects in a bucket. A
            200 OK response can contain valid or invalid XML. Be sure to design your application
            to parse the contents of the response and handle it appropriately.
            
             <important><para>
            This action has been revised. We recommend that you use the newer version, <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html">ListObjectsV2</a>,
            when developing applications. For backward compatibility, Amazon S3 continues to support
            <code>ListObjects</code>.
            </para></important><para>
            The following operations are related to <code>ListObjects</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html">ListObjectsV2</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html">ListBuckets</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectCmdlet.Key">
            <summary>
            Key value identifying a single object in S3 to return metadata for.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectCmdlet.BucketName">
            <summary>
            <para>
            <para>The name of the bucket containing the objects.</para><para>When using this action with an access point, you must direct requests to the access
            point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com.
            When using this action with an access point through the AWS SDKs, you provide the
            access point ARN in place of the bucket name. For more information about access point
            ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using
            access points</a> in the <i>Amazon S3 User Guide</i>.</para><para>When using this action with Amazon S3 on Outposts, you must direct requests to the
            S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com.
            When using this action using S3 on Outposts through the AWS SDKs, you provide the
            Outposts bucket ARN in place of the bucket name. For more information about S3 on
            Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using
            S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectCmdlet.Encoding">
            <summary>
            <para>
            Requests Amazon S3 to encode the object keys in the response and specifies
            the encoding method to use. An object key may contain any Unicode character;
            however, XML 1.0 parser cannot parse some characters, such as characters
            with an ASCII value from 0 to 10. For characters that are not supported in
            XML 1.0, you can add this parameter to request that Amazon S3 encode the
            keys in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            <para>The account ID of the expected bucket owner. If the bucket is owned by a different
            account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectCmdlet.RequestPayer">
            <summary>
            <para>
            <para>Confirms that the requester knows that she or he will be charged for the list objects
            request. Bucket owners need not specify this parameter in their requests.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectCmdlet.Delimiter">
            <summary>
            <para>
            A delimiter is a character you use to group keys.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectCmdlet.Marker">
            <summary>
            <para>
            Specifies the key to start with when listing objects in a bucket.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectCmdlet.MaxKey">
            <summary>
            <para>
            <para>Sets the maximum number of keys returned in the response. By default the action returns
            up to 1,000 key names. The response might contain fewer keys but will never contain
            more. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectCmdlet.Prefix">
            <summary>
            <para>
            Limits the response to keys that begin with the specified prefix.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'S3Objects'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.ListObjectsResponse).
            Specifying the name of a property of type Amazon.S3.Model.ListObjectsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectV2Cmdlet">
            <summary>
            Returns some or all (up to 1,000) of the objects in a bucket with each request. You
            can use the request parameters as selection criteria to return a subset of the objects
            in a bucket. A <code>200 OK</code> response can contain valid or invalid XML. Make
            sure to design your application to parse the contents of the response and handle it
            appropriately. Objects are returned sorted in an ascending order of the respective
            key names in the list. For more information about listing objects, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ListingKeysUsingAPIs.html">Listing
            object keys programmatically</a><para>
            To use this operation, you must have READ access to the bucket.
            </para><para>
            To use this action in an AWS Identity and Access Management (IAM) policy, you must
            have permissions to perform the <code>s3:ListBucket</code> action. The bucket owner
            has this permission by default and can grant this permission to others. For more information
            about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions
            Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
            Access Permissions to Your Amazon S3 Resources</a>.
            </para><important><para>
            This section describes the latest revision of this action. We recommend that you use
            this revised API for application development. For backward compatibility, Amazon S3
            continues to support the prior version of this API, <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjects.html">ListObjects</a>.
            </para></important><para>
            To get a list of your buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html">ListBuckets</a>.
            </para><para>
            The following operations are related to <code>ListObjectsV2</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectV2Cmdlet.Key">
            <summary>
            Key value identifying a single object in S3 to return metadata for.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectV2Cmdlet.BucketName">
            <summary>
            <para>
            <para>Bucket name to list. </para><para>When using this action with an access point, you must direct requests to the access
            point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com.
            When using this action with an access point through the AWS SDKs, you provide the
            access point ARN in place of the bucket name. For more information about access point
            ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using
            access points</a> in the <i>Amazon S3 User Guide</i>.</para><para>When using this action with Amazon S3 on Outposts, you must direct requests to the
            S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com.
            When using this action using S3 on Outposts through the AWS SDKs, you provide the
            Outposts bucket ARN in place of the bucket name. For more information about S3 on
            Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using
            S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectV2Cmdlet.Encoding">
            <summary>
            <para>
            Requests Amazon S3 to encode the object keys in the response and specifies
            the encoding method to use. An object key may contain any Unicode character;
            however, XML 1.0 parser cannot parse some characters, such as characters
            with an ASCII value from 0 to 10. For characters that are not supported in
            XML 1.0, you can add this parameter to request that Amazon S3 encode the
            keys in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectV2Cmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            <para>The account ID of the expected bucket owner. If the bucket is owned by a different
            account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectV2Cmdlet.FetchOwner">
            <summary>
            <para>
            The owner field is not present in ListObjectsV2 responses by default.
            If you want to return owner field with each key in the result then set this field to true.
            If not specified, the Owner field on S3Object will be null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectV2Cmdlet.RequestPayer">
            <summary>
            <para>
            <para>Confirms that the requester knows that she or he will be charged for the list objects
            request in V2 style. Bucket owners need not specify this parameter in their requests.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectV2Cmdlet.StartAfter">
            <summary>
            <para>
            <para>StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts listing
            after this specified key. StartAfter can be any key in the bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectV2Cmdlet.ContinuationToken">
            <summary>
            <para>
            <para>ContinuationToken indicates Amazon S3 that the list is being continued on this bucket
            with a token. ContinuationToken is obfuscated and is not a real key.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-ContinuationToken $null' for the first call and '-ContinuationToken $AWSHistory.LastServiceResponse.NextContinuationToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectV2Cmdlet.Delimiter">
            <summary>
            <para>
            A delimiter is a character you use to group keys.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectV2Cmdlet.MaxKey">
            <summary>
            <para>
            <para>Sets the maximum number of keys returned in the response. By default the action returns
            up to 1,000 key names. The response might contain fewer keys but will never contain
            more.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectV2Cmdlet.Prefix">
            <summary>
            <para>
            Limits the response to keys that begin with the specified prefix.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectV2Cmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'S3Objects'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.ListObjectsV2Response).
            Specifying the name of a property of type Amazon.S3.Model.ListObjectsV2Response will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectV2Cmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectV2Cmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of ContinuationToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3PreSignedURLCmdlet">
            <summary>
            <para>
            Create a signed URL allowing access to a resource that would usually require authentication.
            </para>
            <para>
            Note that you can pipe an Amazon.S3.Model.S3Object instance to this cmdlet and its members will be used to
            satisfy the BucketName, Key and optionally VersionId (if an S3ObjectVersion instance is supplied), parameters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3PreSignedURLCmdlet.BucketName">
            <summary>
            <para>The name of the bucket to create a pre-signed url to, or containing the object.</para><para>When using this API with an access point, you must direct requests to the access point hostname. 
            The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. 
            When using this operation using an access point through the AWS SDKs, you provide the access point 
            ARN in place of the bucket name. For more information about access point ARNs, see 
            <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html">Using Access Points</a> 
            in the <i>Amazon Simple Storage Service Developer Guide</i>.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3PreSignedURLCmdlet.ResponseHeaderOverrides_CacheControl">
            <summary>
            <para>
            CacheControl header value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3PreSignedURLCmdlet.ResponseHeaderOverrides_ContentDisposition">
            <summary>
            <para>
            The ContentDisposition header value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3PreSignedURLCmdlet.ResponseHeaderOverrides_ContentEncoding">
            <summary>
            <para>
            The ContentEncoding header value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3PreSignedURLCmdlet.ResponseHeaderOverrides_ContentLanguage">
            <summary>
            <para>
            ContentLanguage header value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3PreSignedURLCmdlet.ContentType">
            <summary>
            <para>
            A standard MIME type describing the format of the object data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3PreSignedURLCmdlet.ResponseHeaderOverrides_ContentType">
            <summary>
            <para>
            A standard MIME type describing the format of the object data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3PreSignedURLCmdlet.Expire">
            <summary>
            <para>
            The expiry date and time for the pre-signed url.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3PreSignedURLCmdlet.ResponseHeaderOverrides_Expire">
            <summary>
            <para>
            Expiry header value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3PreSignedURLCmdlet.Key">
            <summary>
            <para>
            The key to the object for which a pre-signed url should be created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3PreSignedURLCmdlet.Protocol">
            <summary>
            <para>
            The requested protocol (http/https) for the pre-signed url.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3PreSignedURLCmdlet.ServerSideEncryptionCustomerMethod">
            <summary>
            <para>
            The Server-side encryption algorithm to be used with the customer provided key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3PreSignedURLCmdlet.ServerSideEncryptionKeyManagementServiceKeyId">
            <summary>
            <para>
            The id of the AWS Key Management Service key that Amazon S3 should use to encrypt and decrypt the object.
            If a key id is not specified, the default key will be used for encryption and decryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3PreSignedURLCmdlet.ServerSideEncryptionMethod">
            <summary>
            <para>
            Specifies the encryption used on the server to store the content.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3PreSignedURLCmdlet.Verb">
            <summary>
            <para>
            The verb for the pre-signed url. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3PreSignedURLCmdlet.VersionId">
            <summary>
            <para>
            Version id for the object that the pre-signed url will reference. If not set,
            the url will reference the latest version of the object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3PreSignedURLCmdlet.RequestorPay">
            <summary>
            Confirms that the requester knows that they will be charged for the request.
            Bucket owners do not need to specify this parameter.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.NewS3BucketCmdlet">
            <summary>
            Creates a new bucket with the supplied name and permissions.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.NewS3BucketCmdlet.BucketName">
            <summary>
            The name that will be given to the new bucket. This name needs to be
            unique across Amazon S3.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Amazon.PowerShell.Cmdlets.S3.NewS3BucketCmdlet.CannedACLName" -->
        <member name="P:Amazon.PowerShell.Cmdlets.S3.NewS3BucketCmdlet.PublicReadOnly">
            <summary>
            If set, applies an ACL making the bucket public with read-only permissions
            This parameter is obsolete. Use CannedACLName instead.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.NewS3BucketCmdlet.PublicReadWrite">
            <summary>
            If set, applies an ACL making the bucket public with read-write permissions.
            This parameter is obsolete. Use CannedACLName instead.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.NewS3BucketCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.NewS3BucketCmdlet.ObjectLockEnabledForBucket">
            <summary>
            Specifies whether you want S3 Object Lock to be enabled for the new bucket.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.NewS3BucketCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutBucketResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.ReadS3ObjectCmdlet">
            <summary>
            <para>
            Downloads an S3 object, optionally including sub-objects, to a local file or folder location. Returns a
            FileInfo or DirectoryInfo instance to the downloaded file or the containing folder.
            </para>
            <para>
            Note that you can pipe an Amazon.S3.Model.S3Object instance to this cmdlet and its members will be used to
            satisfy the BucketName, Key and optionally VersionId (if an S3ObjectVersion instance is supplied), parameters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.ReadS3ObjectCmdlet.BucketName">
            <summary>
            <para>Name of the bucket that holds the content to be downloaded</para><para>When using this API with an access point, you must direct requests to the access point hostname. 
            The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. 
            When using this operation using an access point through the AWS SDKs, you provide the access point 
            ARN in place of the bucket name. For more information about access point ARNs, see 
            <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html">Using Access Points</a> 
            in the <i>Amazon Simple Storage Service Developer Guide</i>.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.ReadS3ObjectCmdlet.Key">
            <summary>
            The key that identifies the single object in S3.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.ReadS3ObjectCmdlet.File">
            <summary>
            The full path to the local file that will be created.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.ReadS3ObjectCmdlet.Version">
            <summary>
            If specified, the specific version of the S3 object is returned.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Amazon.PowerShell.Cmdlets.S3.ReadS3ObjectCmdlet.KeyPrefix" -->
        <member name="P:Amazon.PowerShell.Cmdlets.S3.ReadS3ObjectCmdlet.Folder">
            <summary>
            The full path to a local folder; all downloaded content will be placed under this folder,
            with subfolders maintaining the S3 object key hierarchies.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.ReadS3ObjectCmdlet.S3Object">
            <summary>
            <para>
            Amazon.S3.Model.S3Object instance containing the bucketname and key of the object to download. 
            If the supplied object is an Amazon.S3.Model.S3ObjectVersion instance (derived from S3Object), 
            the version of the object to download will be inferred automatically. 
            </para>
            <para>
            The object identified by the supplied S3Object can be downloaded to a specific file (by supplying 
            a value for the -File parameter) or to a folder (specified using the -Folder parameter). When 
            downloading to a folder, the object key is used as the filename. Note that object keys that are not 
            valid filenames for the host system could cause an exception to be thrown.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.ReadS3ObjectCmdlet.ModifiedSinceDate">
            <summary>
            If specified, only  objects that have been modified since this date will be downloaded.
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.ReadS3ObjectCmdlet.UnmodifiedSinceDate">
            <summary>
            If specified, only objects that have not been modified since this date will be downloaded.
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.ReadS3ObjectCmdlet.UtcModifiedSinceDate">
            <summary>
            If specified, only  objects that have been modified since this date will be downloaded.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.ReadS3ObjectCmdlet.UtcUnmodifiedSinceDate">
            <summary>
            If specified, only objects that have not been modified since this date will be downloaded.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.ReadS3ObjectCmdlet.ServerSideEncryptionCustomerMethod">
            <summary>
            Specifies the server-side encryption algorithm to be used with the customer provided key.
            Allowable values: None or AES256.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.ReadS3ObjectCmdlet.ServerSideEncryptionCustomerProvidedKey">
            <summary>
            Specifies base64-encoded encryption key for Amazon S3 to use to decrypt the object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.ReadS3ObjectCmdlet.ServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            Specifies base64-encoded MD5 of the encryption key for Amazon S3 to use to decrypt the object. This field is optional, the SDK will calculate the MD5 if this is not set.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketCmdlet">
            <summary>
            Deletes an S3 bucket, optionally deleting remaining bucket content first (non-empty buckets cannot be deleted).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketCmdlet.BucketName">
            <summary>
            <para>The name of the bucket to be deleted.</para><para>When using this API with an access point, you must direct requests to the access point hostname. 
            The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. 
            When using this operation using an access point through the AWS SDKs, you provide the access point 
            ARN in place of the bucket name. For more information about access point ARNs, see 
            <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html">Using Access Points</a> 
            in the <i>Amazon Simple Storage Service Developer Guide</i>.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketCmdlet.DeleteBucketContent">
            <summary>
            <para>
            If set, all remaining objects and/or object versions in the bucket are deleted proir to the bucket itself 
            being deleted.
            </para>
            <para>Default: Off.</para>
            <para>
            Buckets that contain objects cannot be deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.DeleteBucketResponse).
            Specifying the name of a property of type Amazon.S3.Model.DeleteBucketResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.RemoveS3MultipartUploadCmdlet">
            <summary>
            <para>
            This operation aborts multipart uploads.
            </para>
            <para>
            After a multipart upload is aborted, no additional parts can be uploaded using that upload ID. The storage consumed by any previously uploaded parts will be freed.
            If you are uploading large files, Write-S3Object cmdlet will use multipart upload to fulfill the request.
            If a multipart upload is interrupted, Write-S3Object cmdlet will attempt to abort the multipart upload.
            Under certain circumstances (network outage, power failure, etc.), Write-S3Object cmdlet will not be able to abort the multipart upload.
            In this case, in order to stop getting charged for the storage of uploaded parts,
            you should manually invoke the Remove-S3MultipartUploads to abort the incomplete multipart uploads.
            </para>
            <para>
            Note: For scripts written against earlier versions of this module this cmdlet can also be invoked with the alias <i>Remove-S3MultipartUploads</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3MultipartUploadCmdlet.BucketName">
            <summary>
            <para>The name of the bucket containing multipart uploads.</para><para>When using this API with an access point, you must direct requests to the access point hostname. 
            The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. 
            When using this operation using an access point through the AWS SDKs, you provide the access point 
            ARN in place of the bucket name. For more information about access point ARNs, see 
            <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html">Using Access Points</a> 
            in the <i>Amazon Simple Storage Service Developer Guide</i>.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3MultipartUploadCmdlet.InitiatedDate">
            <summary>
            The date before which the multipart uploads were initiated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3MultipartUploadCmdlet.DaysBefore">
            <summary>
            The number of days ago that the multipart uploads were initiated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3MultipartUploadCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.RemoveS3ObjectCmdlet">
            <summary>
            <para>
            Deletes the specified object, object version or set of objects from S3. The DeleteObject operation removes 
            the specified object from Amazon S3.Once deleted, there is no method to restore or undelete an object.
            </para>
            <para>
            You can pipe Amazon.S3.Model.S3Object or Amazon.S3.Model.S3ObjectVersion instances to this cmdlet and their 
            members will be used to satisfy the BucketName, Key (and VersionId if an S3ObjectVersion instance is supplied) 
            parameters.
            <br/><br/>
            <b>Note: </b>When piping a collection of Amazon.S3.Model.S3Object or Amazon.S3.Model.S3ObjectVersion instances
            to identify the objects to be deleted the cmdlet receives the elements from the piped collection 
            one element at a time and will therefore make one service call per collection element to be deleted. To perform 
            the deletion as a batch with a single call to the service specify the collection as the value of the -InputObject 
            parameter. The -KeyCollection and -KeyAndVersionCollection parameters automatically process as a batch and make 
            a single call to the service to delete all of the objects identified in the collections supplied to the parameters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3ObjectCmdlet.BucketName">
            <summary>
            <para>The name of the bucket containing the object(s) to be deleted.</para><para>When using this API with an access point, you must direct requests to the access point hostname. 
            The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. 
            When using this operation using an access point through the AWS SDKs, you provide the access point 
            ARN in place of the bucket name. For more information about access point ARNs, see 
            <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html">Using Access Points</a> 
            in the <i>Amazon Simple Storage Service Developer Guide</i>.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3ObjectCmdlet.Key">
            <summary>
            The object key identifying the object to be deleted.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3ObjectCmdlet.VersionId">
            <summary>
            Version identifier of the S3 object to be deleted, for buckets with versioning enabled.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3ObjectCmdlet.KeyAndVersionCollection">
            <summary>
            Collection of Amazon.S3.Model.KeyVersion objects describing the S3 objects to be deleted.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3ObjectCmdlet.InputObject">
            <summary>
            Collection of S3Object or S3ObjectVersion instances describing the S3 objects to be deleted. 
            <br/>
            <b>Note: </b>the objects must all belong to the same bucket.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3ObjectCmdlet.KeyCollection">
            <summary>
            Collection of key names describing the S3 objects to be deleted.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3ObjectCmdlet.ReportErrorsOnly">
            <summary>
            <para>
            If set when deleting multiple objects the service response will include only those 
            keys for objects on which the delete operation failed. By default this switch is not 
            set and keys for both successful multi-object deletes and failures are returned in the 
            response.
            </para>
            <para>
            This parameter is used only when deleting multiple objects using the <code>-KeyCollection</code>
            parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3ObjectCmdlet.SerialNumber">
            <summary>
            <para>
            Specifies the serial number of the multi-factor authentication device 
            associated with your AWS Account. 
            </para>
            <para>
            This is a required property for this request if:<br />
            1. EnableMfaDelete was configured on the bucket containing this object's version.<br />
            2. You are deleting an object's version
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3ObjectCmdlet.AuthenticationValue">
            <summary>
            <para>
            Specifies the current token/code displayed on the multi-factor authentication device 
            associated with your AWS Account. 
            </para>
            <para>
            This is a required property for this request if:<br />
            1. EnableMfaDelete was configured on the bucket containing this object's version.<br />
            2. You are deleting an object's version
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3ObjectCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.SetS3ACLCmdlet">
            <summary>
            Amazon.S3.IAmazonS3.PutACL
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SetS3ACLCmdlet.PublicReadOnly">
            <summary>
            If set, applies an ACL making the bucket public with read-only permissions
            This parameter is obsolete. Use CannedACL instead.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SetS3ACLCmdlet.PublicReadWrite">
            <summary>
            If set, applies an ACL making the bucket public with read-write permissions
            This parameter is obsolete. Use CannedACL instead.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SetS3ACLCmdlet.BucketName">
            <summary>
            <para>
            <para>The bucket name that contains the object to which you want to attach the ACL.</para><para>When using this API with an access point, you must direct requests to the access point hostname. 
            The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. 
            When using this operation with an access point through the AWS SDKs, you provide the access point 
            ARN in place of the bucket name. For more information about access point ARNs, see 
            <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html">Using Access Points</a> 
            in the <i>Amazon Simple Storage Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SetS3ACLCmdlet.CannedACL">
            <summary>
            <para>
            The canned ACL to apply to the bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SetS3ACLCmdlet.Owner_DisplayName">
            <summary>
            <para>
            The display name of the owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SetS3ACLCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SetS3ACLCmdlet.AccessControlList_Grant">
            <summary>
            <para>
            A collection of grants.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SetS3ACLCmdlet.Owner_Id">
            <summary>
            <para>
            The unique identifier of the owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SetS3ACLCmdlet.Key">
            <summary>
            <para>
            The key of an S3 object.
            If not specified, the ACLs are applied to the bucket.
            <para>When using this API with an access point, you must direct requests to the access point hostname. 
            The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. 
            When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. 
            For more information about access point ARNs, see 
            <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</para><para>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. 
            The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. 
            When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. 
            For more information about S3 on Outposts ARNs, see 
            <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SetS3ACLCmdlet.VersionId">
            <summary>
            <para>
            If set and an object key has been specified, the ACLs are applied
            to the specific version of the object.
            This property is ignored if the ACL is to be set on a Bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SetS3ACLCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutACLResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SetS3ACLCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SetS3ACLCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.TestS3BucketCmdlet">
            <summary>
            Tests that an S3 Bucket exists
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.TestS3BucketCmdlet.BucketName">
            <summary>
            The name of the bucket to test existence and access.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet">
            <summary>
            <para>
            Uploads a local file, text content or a folder hierarchy of files to Amazon S3, placing them into the specified bucket
            using the specified key (single object) or key prefix (multiple objects).
            </para>
            <para>
            If you are uploading large files, Write-S3Object cmdlet will use multipart upload to fulfill the request. 
            If a multipart upload is interrupted, Write-S3Object cmdlet will attempt to abort the multipart upload.
            Under certain circumstances (network outage, power failure, etc.), Write-S3Object cmdlet will not be able to abort the multipart upload. 
            In this case, in order to stop getting charged for the storage of uploaded parts, 
            you should manually invoke the Remove-S3MultipartUploads to abort the incomplete multipart uploads.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.BucketName">
            <summary>
            <para>The name of the bucket that will hold the uploaded content.</para><para>When using this API with an access point, you must direct requests to the access point hostname. 
            The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. 
            When using this operation using an access point through the AWS SDKs, you provide the access point 
            ARN in place of the bucket name. For more information about access point ARNs, see 
            <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html">Using Access Points</a> 
            in the <i>Amazon Simple Storage Service Developer Guide</i>.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.Key">
            <summary>
            The key that will be used to identify the object in S3. If the -File parameter is specified, -Key is optional
            and the object key can be inferred from the filename value supplied to the -File parameter.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.File">
            <summary>
            The full path to the local file to be uploaded.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.Stream">
            <summary>
            <para>
            <para>The stream to be uploaded.</para>
            </para>
            <para>The cmdlet accepts a parameter of type string, string[], System.IO.FileInfo or System.IO.Stream.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.Content">
            <summary>
            Specifies text content that will be used to set the content of the object in S3. Use a here-string to
            specify multiple lines of text.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.KeyPrefix">
            <summary>
            <para>
            The common key prefix that will be used for the objects uploaded to S3. Use this parameter when uploading
            multiple objects. Each object's final key will be of the form 'keyprefix/filename'.
            </para>
            <para>
            To indicate that all content should be uploaded to the root of the bucket, specify a KeyPrefix of '\'
            or '/'.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.Folder">
            <summary>
            The full path to a local folder; all content in the folder will be uploaded to the
            specified bucket and key. Sub-folders in the folder will only be uploaded if the
            Recurse switch is specified.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.Recurse">
            <summary>
            If set, all sub-folders beneath the folder set in LocalFolder will also be uploaded.
            The folder structure will be mirrored in S3.
            Defaults off [false].
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.SearchPattern">
            <summary>
            The search pattern used to determine which files in the directory are uploaded.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.CannedACLName" -->
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.PublicReadOnly">
            <summary>
            If set, applies an ACL making the S3 object(s) public with read-only permissions
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.PublicReadWrite">
            <summary>
            If set, applies an ACL making the S3 object(s) public with read-write permissions
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.ContentType" -->
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.StorageClass">
            <summary>
            Specifies the storage class for the object.
            Please refer to <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a> for information on S3 storage classes.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.StandardStorage">
            <summary>
            <para>
            Specifies the STANDARD storage class, which is the default storage class for S3 objects.
            Provides a 99.999999999% durability guarantee.
            </para>
            <para>
            This parameter is deprecated. Please use the StorageClass parameter instead.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.ReducedRedundancyStorage">
            <summary>
            <para>
            Specifies S3 should use REDUCED_REDUNDANCY storage class for the object. This
            provides a reduced (99.99%) durability guarantee at a lower
            cost as compared to the STANDARD storage class. Use this
            storage class for non-mission critical data or for data
            that does not require the higher level of durability that S3
            provides with the STANDARD storage class.
            </para>
            <para>
            This parameter is deprecated. Please use the StorageClass parameter instead.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.ServerSideEncryption">
            <summary>
            Specifies the encryption used on the server to store the content.
            Allowable values: None, AES256, aws:kms.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.ServerSideEncryptionKeyManagementServiceKeyId">
            <summary>
            Specifies the AWS KMS key for Amazon S3 to use to encrypt the object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.ServerSideEncryptionCustomerMethod">
            <summary>
            Specifies the server-side encryption algorithm to be used with the customer provided key.
            Allowable values: None or AES256.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.ServerSideEncryptionCustomerProvidedKey">
            <summary>
            Specifies base64-encoded encryption key for Amazon S3 to use to encrypt the object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.ServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            Specifies base64-encoded MD5 of the encryption key for Amazon S3 to use to decrypt the object. This field is optional, the SDK will calculate the MD5 if this is not set.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.Metadata">
            <summary>
            Metadata headers to set on the object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.HeaderCollection">
            <summary>
            Response headers to set on the object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.TagSet">
            <summary>
            One or more tags to apply to the object.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.ConcurrentServiceRequest">
            <summary>
            This property determines how many active threads will be used to upload the file .
            This property is only applicable if the file being uploaded is larger than 16 MB, in which case TransferUtility 
            is used to upload multiple parts in parallel.
            The default value is 10.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.CalculateContentMD5Header">
            <summary>
            This property determines whether the Content-MD5 header should be calculated for upload.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.AmazonS3ClientCmdlet.UseAccelerateEndpoint">
            <summary>
            Enables S3 accelerate by sending requests to the accelerate endpoint instead of the regular region endpoint.
            To use this feature, the bucket name must be DNS compliant and must not contain periods (.). 
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.AmazonS3ClientCmdlet.UseDualstackEndpoint">
            <summary>
            Configures the request to Amazon S3 to use the dualstack endpoint for a region.
            S3 supports dualstack endpoints which return both IPv6 and IPv4 values.
            The dualstack mode of Amazon S3 cannot be used with accelerate mode.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.AmazonS3ClientCmdlet.ForcePathStyleAddressing">
            <summary>
            S3 requests can be performed using one of two URI styles: Virtual or Path.
            When using Virtual style, the bucket is included as part of the hostname. 
            When using Path style the bucket is included as part of the URI path.
            The default value is $true when the EndpointUrl parameter is specified, $false otherwise.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.AddS3PublicAccessBlockCmdlet">
            <summary>
            Amazon.S3.IAmazonS3.PutPublicAccessBlock
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.AddS3PublicAccessBlockCmdlet.PublicAccessBlockConfiguration_BlockPublicAcl">
            <summary>
            <para>
            <para>Specifies whether Amazon S3 should block public ACLs for this bucket. Setting this
            element to <code>TRUE</code> causes the following behavior:</para><ul><li><para>PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public
            access.</para></li><li><para>PUT Object calls will fail if the request includes an object ACL.</para></li></ul><para>Note that enabling this setting doesn't affect existing policies or ACLs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.AddS3PublicAccessBlockCmdlet.PublicAccessBlockConfiguration_BlockPublicPolicy">
            <summary>
            <para>
            <para>Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting
            this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy
            if the specified bucket policy allows public access. </para><para>Note that enabling this setting doesn't affect existing bucket policies.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.AddS3PublicAccessBlockCmdlet.BucketName">
            <summary>
            <para>
            <para>The name of the Amazon S3 bucket whose Public Access Block configuration you want
            to set.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.AddS3PublicAccessBlockCmdlet.ContentMD5">
            <summary>
            <para>
            <para> The MD5 hash of the <code>PutPublicBlock</code> request body. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.AddS3PublicAccessBlockCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.AddS3PublicAccessBlockCmdlet.PublicAccessBlockConfiguration_IgnorePublicAcl">
            <summary>
            <para>
            <para>Specifies whether Amazon S3 should ignore public ACLs for this bucket. Setting this
            element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on this bucket
            and any objects that it contains. </para><para>Note that enabling this setting doesn't affect the persistence of any existing ACLs
            and doesn't prevent new public ACLs from being set.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.AddS3PublicAccessBlockCmdlet.PublicAccessBlockConfiguration_RestrictPublicBucket">
            <summary>
            <para>
            <para>Specifies whether Amazon S3 should restrict public bucket policies for this bucket. 
            Setting this element to <code>TRUE</code> restricts access to this bucket to only AWS 
            service principals and authorized users within this account if the bucket has a 
            public policy.</para><para>Enabling this setting doesn't affect previously stored bucket policies, 
            except that public and cross-account access within any public bucket policy, 
            including non-public delegation to specific accounts, is blocked.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.AddS3PublicAccessBlockCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutPublicAccessBlockResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.AddS3PublicAccessBlockCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.AddS3PublicAccessBlockCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3ACLCmdlet">
            <summary>
            Amazon.S3.IAmazonS3.GetACL
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ACLCmdlet.BucketName">
            <summary>
            <para>
            <para>The bucket name that contains the object for which to get the ACL information.</para><para>When using this API with an access point, you must direct requests to the access point hostname. 
            The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. 
            When using this operation with an access point through the AWS SDKs, you provide the access point 
            ARN in place of the bucket name. For more information about access point ARNs, see 
            <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html">Using Access Points</a> 
            in the <i>Amazon Simple Storage Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ACLCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ACLCmdlet.Key">
            <summary>
            <para>
            The key of the S3 object to be queried.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ACLCmdlet.VersionId">
            <summary>
            <para>
            VersionId used to reference a specific version of the object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ACLCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AccessControlList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetACLResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetACLResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ACLCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketAccelerateConfigurationCmdlet">
            <summary>
            Amazon.S3.IAmazonS3.GetBucketAccelerateConfiguration
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketAccelerateConfigurationCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket for which the accelerate configuration is retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketAccelerateConfigurationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketAccelerateConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Status'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetBucketAccelerateConfigurationResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetBucketAccelerateConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketAccelerateConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketAnalyticsConfigurationCmdlet">
            <summary>
            Amazon.S3.IAmazonS3.GetBucketAnalyticsConfiguration
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketAnalyticsConfigurationCmdlet.AnalyticsId">
            <summary>
            <para>
            The identifier used to represent an analytics configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketAnalyticsConfigurationCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket from which an analytics configuration is retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketAnalyticsConfigurationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketAnalyticsConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AnalyticsConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetBucketAnalyticsConfigurationResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetBucketAnalyticsConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketAnalyticsConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketAnalyticsConfigurationListCmdlet">
            <summary>
            Lists the analytics configurations for the bucket. You can have up to 1,000 analytics
            configurations per bucket.
            
             
            <para>
            This action supports list pagination and does not return more than 100 configurations
            at a time. You should always check the <code>IsTruncated</code> element in the response.
            If there are no more configurations to list, <code>IsTruncated</code> is set to false.
            If there are more configurations to list, <code>IsTruncated</code> is set to true,
            and there will be a value in <code>NextContinuationToken</code>. You use the <code>NextContinuationToken</code>
            value to continue the pagination of the list by passing the value in continuation-token
            in the request to <code>GET</code> the next page.
            </para><para>
            To use this operation, you must have permissions to perform the <code>s3:GetAnalyticsConfiguration</code>
            action. The bucket owner has this permission by default. The bucket owner can grant
            this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions
            Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
            Access Permissions to Your Amazon S3 Resources</a>.
            </para><para>
            For information about Amazon S3 analytics feature, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/analytics-storage-class.html">Amazon
            S3 Analytics â€“ Storage Class Analysis</a>. 
            </para><para>
            The following operations are related to <code>ListBucketAnalyticsConfigurations</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAnalyticsConfiguration.html">GetBucketAnalyticsConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketAnalyticsConfiguration.html">DeleteBucketAnalyticsConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAnalyticsConfiguration.html">PutBucketAnalyticsConfiguration</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketAnalyticsConfigurationListCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket containing the analytics configurations to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketAnalyticsConfigurationListCmdlet.ContinuationToken">
            <summary>
            <para>
            The ContinuationToken that represents a placeholder from where this request should begin.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketAnalyticsConfigurationListCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketAnalyticsConfigurationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.ListBucketAnalyticsConfigurationsResponse).
            Specifying the name of a property of type Amazon.S3.Model.ListBucketAnalyticsConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketAnalyticsConfigurationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketEncryptionCmdlet">
            <summary>
            Returns the default encryption configuration for an Amazon S3 bucket. If the bucket
            does not have a default encryption configuration, GetBucketEncryption returns <code>ServerSideEncryptionConfigurationNotFoundError</code>.
            
            
             
            <para>
            For information about the Amazon S3 default encryption feature, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html">Amazon
            S3 Default Bucket Encryption</a>.
            </para><para>
             To use this operation, you must have permission to perform the <code>s3:GetEncryptionConfiguration</code>
            action. The bucket owner has this permission by default. The bucket owner can grant
            this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions
            Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
            Access Permissions to Your Amazon S3 Resources</a>.
            </para><para>
            The following operations are related to <code>GetBucketEncryption</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketEncryption.html">PutBucketEncryption</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketEncryption.html">DeleteBucketEncryption</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketEncryptionCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketEncryptionCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketEncryptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ServerSideEncryptionConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetBucketEncryptionResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetBucketEncryptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketEncryptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketIntelligentTieringConfigurationCmdlet">
            <summary>
            Gets the S3 Intelligent-Tiering configuration from the specified bucket.
            
             
            <para>
            The S3 Intelligent-Tiering storage class is designed to optimize storage costs by
            automatically moving data to the most cost-effective storage access tier, without
            additional operational overhead. S3 Intelligent-Tiering delivers automatic cost savings
            by moving data between access tiers, when access patterns change.
            </para><para>
            The S3 Intelligent-Tiering storage class is suitable for objects larger than 128 KB
            that you plan to store for at least 30 days. If the size of an object is less than
            128 KB, it is not eligible for auto-tiering. Smaller objects can be stored, but they
            are always charged at the frequent access tier rates in the S3 Intelligent-Tiering
            storage class. 
            </para><para>
            If you delete an object before the end of the 30-day minimum storage duration period,
            you are charged for 30 days. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access">Storage
            class for automatically optimizing frequently and infrequently accessed objects</a>.
            </para><para>
            Operations related to <code>GetBucketIntelligentTieringConfiguration</code> include:
            
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketIntelligentTieringConfiguration.html">DeleteBucketIntelligentTieringConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketIntelligentTieringConfiguration.html">PutBucketIntelligentTieringConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketIntelligentTieringConfigurations.html">ListBucketIntelligentTieringConfigurations</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketIntelligentTieringConfigurationCmdlet.BucketName">
            <summary>
            <para>
            The name of the Amazon S3 bucket whose configuration you want to modify or retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketIntelligentTieringConfigurationCmdlet.IntelligentTieringId">
            <summary>
            <para>
            The ID used to identify the S3 Intelligent-Tiering configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketIntelligentTieringConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IntelligentTieringConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetBucketIntelligentTieringConfigurationResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetBucketIntelligentTieringConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketIntelligentTieringConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketIntelligentTieringConfigurationListCmdlet">
            <summary>
            Lists the S3 Intelligent-Tiering configuration from the specified bucket.
            
             
            <para>
            The S3 Intelligent-Tiering storage class is designed to optimize storage costs by
            automatically moving data to the most cost-effective storage access tier, without
            additional operational overhead. S3 Intelligent-Tiering delivers automatic cost savings
            by moving data between access tiers, when access patterns change.
            </para><para>
            The S3 Intelligent-Tiering storage class is suitable for objects larger than 128 KB
            that you plan to store for at least 30 days. If the size of an object is less than
            128 KB, it is not eligible for auto-tiering. Smaller objects can be stored, but they
            are always charged at the frequent access tier rates in the S3 Intelligent-Tiering
            storage class. 
            </para><para>
            If you delete an object before the end of the 30-day minimum storage duration period,
            you are charged for 30 days. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access">Storage
            class for automatically optimizing frequently and infrequently accessed objects</a>.
            </para><para>
            Operations related to <code>ListBucketIntelligentTieringConfigurations</code> include:
            
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketIntelligentTieringConfiguration.html">DeleteBucketIntelligentTieringConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketIntelligentTieringConfiguration.html">PutBucketIntelligentTieringConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketIntelligentTieringConfiguration.html">GetBucketIntelligentTieringConfiguration</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketIntelligentTieringConfigurationListCmdlet.BucketName">
            <summary>
            <para>
            The name of the Amazon S3 bucket whose configuration you want to modify or retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketIntelligentTieringConfigurationListCmdlet.ContinuationToken">
            <summary>
            <para>
            The ContinuationToken that represents a placeholder from where this request should begin.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketIntelligentTieringConfigurationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.ListBucketIntelligentTieringConfigurationsResponse).
            Specifying the name of a property of type Amazon.S3.Model.ListBucketIntelligentTieringConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketIntelligentTieringConfigurationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketInventoryConfigurationCmdlet">
            <summary>
            Returns an inventory configuration (identified by the inventory configuration ID)
            from the bucket.
            
             
            <para>
            To use this operation, you must have permissions to perform the <code>s3:GetInventoryConfiguration</code>
            action. The bucket owner has this permission by default and can grant this permission
            to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions
            Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
            Access Permissions to Your Amazon S3 Resources</a>.
            </para><para>
            For information about the Amazon S3 inventory feature, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html">Amazon
            S3 Inventory</a>.
            </para><para>
            The following operations are related to <code>GetBucketInventoryConfiguration</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketInventoryConfiguration.html">DeleteBucketInventoryConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketInventoryConfigurations.html">ListBucketInventoryConfigurations</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketInventoryConfiguration.html">PutBucketInventoryConfiguration</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketInventoryConfigurationCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket containing the inventory configuration to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketInventoryConfigurationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketInventoryConfigurationCmdlet.InventoryId">
            <summary>
            <para>
            The ID used to identify the inventory configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketInventoryConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InventoryConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetBucketInventoryConfigurationResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetBucketInventoryConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketInventoryConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketInventoryConfigurationListCmdlet">
            <summary>
            Returns a list of inventory configurations for the bucket. You can have up to 1,000
            analytics configurations per bucket.
            
             
            <para>
            This action supports list pagination and does not return more than 100 configurations
            at a time. Always check the <code>IsTruncated</code> element in the response. If there
            are no more configurations to list, <code>IsTruncated</code> is set to false. If there
            are more configurations to list, <code>IsTruncated</code> is set to true, and there
            is a value in <code>NextContinuationToken</code>. You use the <code>NextContinuationToken</code>
            value to continue the pagination of the list by passing the value in continuation-token
            in the request to <code>GET</code> the next page.
            </para><para>
             To use this operation, you must have permissions to perform the <code>s3:GetInventoryConfiguration</code>
            action. The bucket owner has this permission by default. The bucket owner can grant
            this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions
            Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
            Access Permissions to Your Amazon S3 Resources</a>.
            </para><para>
            For information about the Amazon S3 inventory feature, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html">Amazon
            S3 Inventory</a></para><para>
            The following operations are related to <code>ListBucketInventoryConfigurations</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketInventoryConfiguration.html">GetBucketInventoryConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketInventoryConfiguration.html">DeleteBucketInventoryConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketInventoryConfiguration.html">PutBucketInventoryConfiguration</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketInventoryConfigurationListCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket containing the inventory configurations to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketInventoryConfigurationListCmdlet.ContinuationToken">
            <summary>
            <para>
            The marker used to continue an inventory configuration listing that has been truncated. 
            Use the NextContinuationToken from a previously truncated list response to continue the listing. 
            The continuation token is an opaque value that Amazon S3 understands.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketInventoryConfigurationListCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketInventoryConfigurationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.ListBucketInventoryConfigurationsResponse).
            Specifying the name of a property of type Amazon.S3.Model.ListBucketInventoryConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketInventoryConfigurationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketLocationCmdlet">
            <summary>
            Returns the Region the bucket resides in. You set the bucket's Region using the <code>LocationConstraint</code>
            request parameter in a <code>CreateBucket</code> request. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a>.
            
             
            <para>
             To use this implementation of the operation, you must be the bucket owner.
            </para><para>
            The following operations are related to <code>GetBucketLocation</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketLocationCmdlet.BucketName">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketLocationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketLocationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Location'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetBucketLocationResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetBucketLocationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketLocationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketLoggingCmdlet">
            <summary>
            Returns the logging status of a bucket and the permissions users have to view and
            modify that status. To use GET, you must be the bucket owner.
            
             
            <para>
            The following operations are related to <code>GetBucketLogging</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLogging.html">PutBucketLogging</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketLoggingCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket to query.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketLoggingCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketLoggingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'BucketLoggingConfig'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetBucketLoggingResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetBucketLoggingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketLoggingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketMetricsConfigurationCmdlet">
            <summary>
            Gets a metrics configuration (specified by the metrics configuration ID) from the
            bucket. Note that this doesn't include the daily storage metrics.
            
             
            <para>
             To use this operation, you must have permissions to perform the <code>s3:GetMetricsConfiguration</code>
            action. The bucket owner has this permission by default. The bucket owner can grant
            this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions
            Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
            Access Permissions to Your Amazon S3 Resources</a>.
            </para><para>
             For information about CloudWatch request metrics for Amazon S3, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cloudwatch-monitoring.html">Monitoring
            Metrics with Amazon CloudWatch</a>.
            </para><para>
            The following operations are related to <code>GetBucketMetricsConfiguration</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketMetricsConfiguration.html">PutBucketMetricsConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketMetricsConfiguration.html">DeleteBucketMetricsConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketMetricsConfigurations.html">ListBucketMetricsConfigurations</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cloudwatch-monitoring.html">Monitoring
            Metrics with Amazon CloudWatch</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketMetricsConfigurationCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket containing the metrics configuration to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketMetricsConfigurationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketMetricsConfigurationCmdlet.MetricsId">
            <summary>
            <para>
            The ID used to identify the metrics configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketMetricsConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MetricsConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetBucketMetricsConfigurationResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetBucketMetricsConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketMetricsConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketMetricsConfigurationListCmdlet">
            <summary>
            Lists the metrics configurations for the bucket. The metrics configurations are only
            for the request metrics of the bucket and do not provide information on daily storage
            metrics. You can have up to 1,000 configurations per bucket.
            
             
            <para>
            This action supports list pagination and does not return more than 100 configurations
            at a time. Always check the <code>IsTruncated</code> element in the response. If there
            are no more configurations to list, <code>IsTruncated</code> is set to false. If there
            are more configurations to list, <code>IsTruncated</code> is set to true, and there
            is a value in <code>NextContinuationToken</code>. You use the <code>NextContinuationToken</code>
            value to continue the pagination of the list by passing the value in <code>continuation-token</code>
            in the request to <code>GET</code> the next page.
            </para><para>
            To use this operation, you must have permissions to perform the <code>s3:GetMetricsConfiguration</code>
            action. The bucket owner has this permission by default. The bucket owner can grant
            this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions
            Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
            Access Permissions to Your Amazon S3 Resources</a>.
            </para><para>
            For more information about metrics configurations and CloudWatch request metrics,
            see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cloudwatch-monitoring.html">Monitoring
            Metrics with Amazon CloudWatch</a>.
            </para><para>
            The following operations are related to <code>ListBucketMetricsConfigurations</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketMetricsConfiguration.html">PutBucketMetricsConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketMetricsConfiguration.html">GetBucketMetricsConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketMetricsConfiguration.html">DeleteBucketMetricsConfiguration</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketMetricsConfigurationListCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket containing the metrics configurations to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketMetricsConfigurationListCmdlet.ContinuationToken">
            <summary>
            <para>
            The marker that is used to continue a metrics configuration listing that has been truncated. 
            Use the NextContinuationToken from a previously truncated list response to continue the listing. 
            The continuation token is an opaque value that Amazon S3 understands.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketMetricsConfigurationListCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketMetricsConfigurationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.ListBucketMetricsConfigurationsResponse).
            Specifying the name of a property of type Amazon.S3.Model.ListBucketMetricsConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketMetricsConfigurationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketNotificationCmdlet">
            <summary>
            Returns the notification configuration of a bucket.
            
             
            <para>
            If notifications are not enabled on the bucket, the action returns an empty <code>NotificationConfiguration</code>
            element.
            </para><para>
            By default, you must be the bucket owner to read the notification configuration of
            a bucket. However, the bucket owner can use a bucket policy to grant permission to
            other users to read this configuration with the <code>s3:GetBucketNotification</code>
            permission.
            </para><para>
            For more information about setting and reading the notification configuration on a
            bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Setting
            Up Notification of Bucket Events</a>. For more information about bucket policies,
            see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html">Using
            Bucket Policies</a>.
            </para><para>
            The following action is related to <code>GetBucketNotification</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketNotification.html">PutBucketNotification</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketNotificationCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket for which to get the notification configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketNotificationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketNotificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetBucketNotificationResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetBucketNotificationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketNotificationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketOwnershipControlCmdlet">
            <summary>
            Retrieves <code>OwnershipControls</code> for an Amazon S3 bucket. To use this operation,
            you must have the <code>s3:GetBucketOwnershipControls</code> permission. For more
            information about Amazon S3 permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html">Specifying
            Permissions in a Policy</a>. 
            
             
            <para>
            For information about Amazon S3 Object Ownership, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/about-object-ownership.html">Using
            Object Ownership</a>. 
            </para><para>
            The following operations are related to <code>GetBucketOwnershipControls</code>:
            </para><ul><li><para><a>PutBucketOwnershipControls</a></para></li><li><para><a>DeleteBucketOwnershipControls</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketOwnershipControlCmdlet.BucketName">
            <summary>
            <para>
            The name of the Amazon S3 bucket whose OwnershipControls you want to retrieve
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketOwnershipControlCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, 
            the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketOwnershipControlCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OwnershipControls'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetBucketOwnershipControlsResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetBucketOwnershipControlsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketOwnershipControlCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketPolicyCmdlet">
            <summary>
            Returns the policy of a specified bucket. If you are using an identity other than
            the root user of the AWS account that owns the bucket, the calling identity must have
            the <code>GetBucketPolicy</code> permissions on the specified bucket and belong to
            the bucket owner's account in order to use this operation.
            
             
            <para>
            If you don't have <code>GetBucketPolicy</code> permissions, Amazon S3 returns a <code>403
            Access Denied</code> error. If you have the correct permissions, but you're not using
            an identity that belongs to the bucket owner's account, Amazon S3 returns a <code>405
            Method Not Allowed</code> error.
            </para><important><para>
            As a security precaution, the root user of the AWS account that owns a bucket can
            always use this operation, even if the policy explicitly denies the root user the
            ability to perform this action.
            </para></important><para>
            For more information about bucket policies, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html">Using
            Bucket Policies and User Policies</a>.
            </para><para>
            The following action is related to <code>GetBucketPolicy</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketPolicyCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketPolicyCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Policy'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetBucketPolicyResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetBucketPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketPolicyStatusCmdlet">
            <summary>
            Retrieves the policy status for an Amazon S3 bucket, indicating whether the bucket
            is public. In order to use this operation, you must have the <code>s3:GetBucketPolicyStatus</code>
            permission. For more information about Amazon S3 permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html">Specifying
            Permissions in a Policy</a>.
            
             
            <para>
             For more information about when Amazon S3 considers a bucket public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The
            Meaning of "Public"</a>. 
            </para><para>
            The following operations are related to <code>GetBucketPolicyStatus</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html">Using
            Amazon S3 Block Public Access</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetPublicAccessBlock.html">GetPublicAccessBlock</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutPublicAccessBlock.html">PutPublicAccessBlock</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeletePublicAccessBlock.html">DeletePublicAccessBlock</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketPolicyStatusCmdlet.BucketName">
            <summary>
            <para>
            <para>The name of the Amazon S3 bucket whose public-policy status you want to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketPolicyStatusCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketPolicyStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PolicyStatus'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetBucketPolicyStatusResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetBucketPolicyStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketPolicyStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketReplicationCmdlet">
            <summary>
            Retrieves the replication configuration for the given Amazon S3 bucket.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketReplicationCmdlet.BucketName">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketReplicationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketReplicationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Configuration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetBucketReplicationResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetBucketReplicationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketReplicationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketRequestPaymentCmdlet">
            <summary>
            Returns the request payment configuration of a bucket. To use this version of the
            operation, you must be the bucket owner. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html">Requester
            Pays Buckets</a>.
            
             
            <para>
            The following operations are related to <code>GetBucketRequestPayment</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjects.html">ListObjects</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketRequestPaymentCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketRequestPaymentCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketRequestPaymentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Payer'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetBucketRequestPaymentResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetBucketRequestPaymentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketRequestPaymentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketTaggingCmdlet">
            <summary>
            Returns the tag set associated with the bucket.
            
             
            <para>
            To use this operation, you must have permission to perform the <code>s3:GetBucketTagging</code>
            action. By default, the bucket owner has this permission and can grant this permission
            to others.
            </para><para><code>GetBucketTagging</code> has the following special error:
            </para><ul><li><para>
            Error code: <code>NoSuchTagSetError</code></para><ul><li><para>
            Description: There is no tag set associated with the bucket.
            </para></li></ul></li></ul><para>
            The following operations are related to <code>GetBucketTagging</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketTagging.html">PutBucketTagging</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketTagging.html">DeleteBucketTagging</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketTaggingCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket to be queried.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketTaggingCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketTaggingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TagSet'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetBucketTaggingResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetBucketTaggingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketTaggingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketVersioningCmdlet">
            <summary>
            Returns the versioning state of a bucket.
            
             
            <para>
            To retrieve the versioning state of a bucket, you must be the bucket owner.
            </para><para>
            This implementation also returns the MFA Delete status of the versioning state. If
            the MFA Delete status is <code>enabled</code>, the bucket owner must use an authentication
            device to change the versioning state of the bucket.
            </para><para>
            The following operations are related to <code>GetBucketVersioning</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html">DeleteObject</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketVersioningCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket to be queried.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketVersioningCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketVersioningCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VersioningConfig'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetBucketVersioningResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetBucketVersioningResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketVersioningCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3BucketWebsiteCmdlet">
            <summary>
            Returns the website configuration for a bucket. To host website on Amazon S3, you
            can configure a bucket as website by adding a website configuration. For more information
            about hosting websites, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html">Hosting
            Websites on Amazon S3</a>. 
            
             
            <para>
            This GET action requires the <code>S3:GetBucketWebsite</code> permission. By default,
            only the bucket owner can read the bucket website configuration. However, bucket owners
            can allow other users to read the website configuration by writing a bucket policy
            granting them the <code>S3:GetBucketWebsite</code> permission.
            </para><para>
            The following operations are related to <code>DeleteBucketWebsite</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketWebsite.html">DeleteBucketWebsite</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketWebsite.html">PutBucketWebsite</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketWebsiteCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket to be queried.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketWebsiteCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketWebsiteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WebsiteConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetBucketWebsiteResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetBucketWebsiteResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3BucketWebsiteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3CORSConfigurationCmdlet">
            <summary>
            Returns the cors configuration information set for the bucket.
            
             
            <para>
             To use this operation, you must have permission to perform the s3:GetBucketCORS action.
            By default, the bucket owner has this permission and can grant it to others.
            </para><para>
             For more information about cors, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html">
            Enabling Cross-Origin Resource Sharing</a>.
            </para><para>
            The following operations are related to <code>GetBucketCors</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketCors.html">PutBucketCors</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketCors.html">DeleteBucketCors</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3CORSConfigurationCmdlet.BucketName">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3CORSConfigurationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3CORSConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Configuration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetCORSConfigurationResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetCORSConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3CORSConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3LifecycleConfigurationCmdlet">
            <summary>
            <note><para>
            Bucket lifecycle configuration now supports specifying a lifecycle rule using an object
            key name prefix, one or more object tags, or a combination of both. Accordingly, this
            section describes the latest API. The response describes the new filter element that
            you can use to specify a filter to select a subset of objects to which the rule applies.
            If you are using a previous version of the lifecycle configuration, it still works.
            For the earlier action, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycle.html">GetBucketLifecycle</a>.
            </para></note><para>
            Returns the lifecycle configuration information set on the bucket. For information
            about lifecycle configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html">Object
            Lifecycle Management</a>.
            </para><para>
            To use this operation, you must have permission to perform the <code>s3:GetLifecycleConfiguration</code>
            action. The bucket owner has this permission, by default. The bucket owner can grant
            this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions
            Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
            Access Permissions to Your Amazon S3 Resources</a>.
            </para><para><code>GetBucketLifecycleConfiguration</code> has the following special error:
            </para><ul><li><para>
            Error code: <code>NoSuchLifecycleConfiguration</code></para><ul><li><para>
            Description: The lifecycle configuration does not exist.
            </para></li><li><para>
            HTTP Status Code: 404 Not Found
            </para></li><li><para>
            SOAP Fault Code Prefix: Client
            </para></li></ul></li></ul><para>
            The following operations are related to <code>GetBucketLifecycleConfiguration</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycle.html">GetBucketLifecycle</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html">PutBucketLifecycle</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html">DeleteBucketLifecycle</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3LifecycleConfigurationCmdlet.BucketName">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3LifecycleConfigurationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3LifecycleConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Configuration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetLifecycleConfigurationResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetLifecycleConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3LifecycleConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectLegalHoldCmdlet">
            <summary>
            Gets an object's current Legal Hold status. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Locking
            Objects</a>.
            
             
            <para>
            This action is not supported by Amazon S3 on Outposts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectLegalHoldCmdlet.BucketName">
            <summary>
            <para>
            <para>The bucket name containing the object whose Legal Hold status you want to retrieve.
            </para><para>When using this action with an access point, you must direct requests to the access
            point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com.
            When using this action with an access point through the AWS SDKs, you provide the
            access point ARN in place of the bucket name. For more information about access point
            ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using
            access points</a> in the <i>Amazon S3 User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectLegalHoldCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            <para>The account ID of the expected bucket owner. If the bucket is owned by a different
            account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectLegalHoldCmdlet.Key">
            <summary>
            <para>
            <para>The key name for the object whose Legal Hold status you want to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectLegalHoldCmdlet.RequestPayer">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectLegalHoldCmdlet.VersionId">
            <summary>
            <para>
            <para>The version ID of the object whose Legal Hold status you want to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectLegalHoldCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LegalHold'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetObjectLegalHoldResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetObjectLegalHoldResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectLegalHoldCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectLockConfigurationCmdlet">
            <summary>
            Gets the Object Lock configuration for a bucket. The rule specified in the Object
            Lock configuration will be applied by default to every new object placed in the specified
            bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Locking
            Objects</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectLockConfigurationCmdlet.BucketName">
            <summary>
            <para>
            <para>The bucket whose Object Lock configuration you want to retrieve.</para><para>When using this action with an access point, you must direct requests to the access
            point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com.
            When using this action with an access point through the AWS SDKs, you provide the
            access point ARN in place of the bucket name. For more information about access point
            ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using
            access points</a> in the <i>Amazon S3 User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectLockConfigurationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            <para>The account ID of the expected bucket owner. If the bucket is owned by a different
            account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectLockConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ObjectLockConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetObjectLockConfigurationResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetObjectLockConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectLockConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectMetadataCmdlet">
            <summary>
            The HEAD action retrieves metadata from an object without returning the object itself.
            This action is useful if you're only interested in an object's metadata. To use HEAD,
            you must have READ access to the object.
            
             
            <para>
            A <code>HEAD</code> request has the same options as a <code>GET</code> action on an
            object. The response is identical to the <code>GET</code> response except that there
            is no response body. Because of this, if the <code>HEAD</code> request generates an
            error, it returns a generic <code>404 Not Found</code> or <code>403 Forbidden</code>
            code. It is not possible to retrieve the exact exception beyond these error codes.
            </para><para>
            If you encrypt an object by using server-side encryption with customer-provided encryption
            keys (SSE-C) when you store the object in Amazon S3, then when you retrieve the metadata
            from the object, you must use the following headers:
            </para><ul><li><para>
            x-amz-server-side-encryption-customer-algorithm
            </para></li><li><para>
            x-amz-server-side-encryption-customer-key
            </para></li><li><para>
            x-amz-server-side-encryption-customer-key-MD5
            </para></li></ul><para>
            For more information about SSE-C, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Server-Side
            Encryption (Using Customer-Provided Encryption Keys)</a>.
            </para><note><ul><li><para>
            Encryption request headers, like <code>x-amz-server-side-encryption</code>, should
            not be sent for GET requests if your object uses server-side encryption with CMKs
            stored in AWS KMS (SSE-KMS) or server-side encryption with Amazon S3â€“managed encryption
            keys (SSE-S3). If your object does use these types of keys, youâ€™ll get an HTTP 400
            BadRequest error.
            </para></li><li><para>
             The last modified property in this case is the creation date of the object.
            </para></li></ul></note><para>
            Request headers are limited to 8 KB in size. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTCommonRequestHeaders.html">Common
            Request Headers</a>.
            </para><para>
            Consider the following when using request headers:
            </para><ul><li><para>
             Consideration 1 â€“ If both of the <code>If-Match</code> and <code>If-Unmodified-Since</code>
            headers are present in the request as follows:
            </para><ul><li><para><code>If-Match</code> condition evaluates to <code>true</code>, and;
            </para></li><li><para><code>If-Unmodified-Since</code> condition evaluates to <code>false</code>;
            </para></li></ul><para>
            Then Amazon S3 returns <code>200 OK</code> and the data requested.
            </para></li><li><para>
             Consideration 2 â€“ If both of the <code>If-None-Match</code> and <code>If-Modified-Since</code>
            headers are present in the request as follows:
            </para><ul><li><para><code>If-None-Match</code> condition evaluates to <code>false</code>, and;
            </para></li><li><para><code>If-Modified-Since</code> condition evaluates to <code>true</code>;
            </para></li></ul><para>
            Then Amazon S3 returns the <code>304 Not Modified</code> response code.
            </para></li></ul><para>
            For more information about conditional requests, see <a href="https://tools.ietf.org/html/rfc7232">RFC
            7232</a>.
            </para><para><b>Permissions</b></para><para>
            You need the <code>s3:GetObject</code> permission for this operation. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html">Specifying
            Permissions in a Policy</a>. If the object you request does not exist, the error Amazon
            S3 returns depends on whether you also have the s3:ListBucket permission.
            </para><ul><li><para>
            If you have the <code>s3:ListBucket</code> permission on the bucket, Amazon S3 returns
            an HTTP status code 404 ("no such key") error.
            </para></li><li><para>
            If you donâ€™t have the <code>s3:ListBucket</code> permission, Amazon S3 returns an
            HTTP status code 403 ("access denied") error.
            </para></li></ul><para>
            The following action is related to <code>HeadObject</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectMetadataCmdlet.BucketName">
            <summary>
            <para>
            <para>The name of the bucket containing the object.</para><para>When using this action with an access point, you must direct requests to the access
            point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com.
            When using this action with an access point through the AWS SDKs, you provide the
            access point ARN in place of the bucket name. For more information about access point
            ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using
            access points</a> in the <i>Amazon S3 User Guide</i>.</para><para>When using this action with Amazon S3 on Outposts, you must direct requests to the
            S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com.
            When using this action using S3 on Outposts through the AWS SDKs, you provide the
            Outposts bucket ARN in place of the bucket name. For more information about S3 on
            Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using
            S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectMetadataCmdlet.EtagToMatch">
            <summary>
            <para>
            ETag to be matched as a pre-condition for returning the object,
            otherwise a PreconditionFailed signal is returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectMetadataCmdlet.EtagToNotMatch">
            <summary>
            <para>
            ETag that should not be matched as a pre-condition for returning the object,
            otherwise a PreconditionFailed signal is returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectMetadataCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            <para>The account ID of the expected bucket owner. If the bucket is owned by a different
            account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectMetadataCmdlet.Key">
            <summary>
            <para>
            The key of the object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectMetadataCmdlet.UtcModifiedSinceDate">
            <summary>
            <para>
            Returns the object only if it has been modified since the specified time, 
            otherwise returns a PreconditionFailed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectMetadataCmdlet.PartNumber">
            <summary>
            <para>
            Part number of the object being read. This is a positive integer between 1 and 10,000.
            Effectively performs a 'ranged' HEAD request for the part specified.
            Useful querying about the size of the part and the number of parts in this object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectMetadataCmdlet.RequestPayer">
            <summary>
            <para>
            Confirms that the requester knows that she or he will be charged for the request.
            Bucket owners need not specify this parameter in their requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectMetadataCmdlet.ServerSideEncryptionCustomerMethod">
            <summary>
            <para>
            The Server-side encryption algorithm to be used with the customer provided key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectMetadataCmdlet.ServerSideEncryptionCustomerProvidedKey">
            <summary>
            <para>
            The base64-encoded encryption key for Amazon S3 to use to decrypt the object
            <para>Using the encryption key you provide as part of your request Amazon S3 manages both the encryption, as it writes 
            to disks, and decryption, when you access your objects. Therefore, you don't need to maintain any data encryption code. The only 
            thing you do is manage the encryption keys you provide.</para><para>When you retrieve an object, you must provide the same encryption key as part of your request. Amazon S3 first verifies 
            the encryption key you provided matches, and then decrypts the object before returning the object data to you.</para><para>Important: Amazon S3 does not store the encryption key you provide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectMetadataCmdlet.ServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            <para>
            The MD5 of the customer encryption key specified in the ServerSideEncryptionCustomerProvidedKey property. The MD5 is
            base 64 encoded. This field is optional, the SDK will calculate the MD5 if this is not set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectMetadataCmdlet.UtcUnmodifiedSinceDate">
            <summary>
            <para>
            Returns the object only if it has not been modified since the specified time, 
            otherwise returns a PreconditionFailed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectMetadataCmdlet.VersionId">
            <summary>
            <para>
            VersionId used to reference a specific version of the object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectMetadataCmdlet.ModifiedSinceDate">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use ModifiedSinceDateUtc instead. Setting either ModifiedSinceDate or
            ModifiedSinceDateUtc results in both ModifiedSinceDate and ModifiedSinceDateUtc being assigned,
            the latest assignment to either one of the two property is reflected in the value of both.
            ModifiedSinceDate is provided for backwards compatibility only and assigning a non-Utc DateTime
            to it results in the wrong timestamp being passed to the service.</para>
            Returns the object only if it has been modified since the specified time, 
            otherwise returns a PreconditionFailed.
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectMetadataCmdlet.UnmodifiedSinceDate">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use UnmodifiedSinceDateUtc instead. Setting either UnmodifiedSinceDate or
            UnmodifiedSinceDateUtc results in both UnmodifiedSinceDate and UnmodifiedSinceDateUtc being assigned,
            the latest assignment to either one of the two property is reflected in the value of both.
            UnmodifiedSinceDate is provided for backwards compatibility only and assigning a non-Utc DateTime
            to it results in the wrong timestamp being passed to the service.</para>
            Returns the object only if it has not been modified since the specified time, 
            otherwise returns a PreconditionFailed.
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectMetadataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetObjectMetadataResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetObjectMetadataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectMetadataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectRetentionCmdlet">
            <summary>
            Retrieves an object's retention settings. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Locking
            Objects</a>.
            
             
            <para>
            This action is not supported by Amazon S3 on Outposts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectRetentionCmdlet.BucketName">
            <summary>
            <para>
            <para>The bucket name containing the object whose retention settings you want to retrieve.
            </para><para>When using this action with an access point, you must direct requests to the access
            point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com.
            When using this action with an access point through the AWS SDKs, you provide the
            access point ARN in place of the bucket name. For more information about access point
            ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using
            access points</a> in the <i>Amazon S3 User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectRetentionCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            <para>The account ID of the expected bucket owner. If the bucket is owned by a different
            account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectRetentionCmdlet.Key">
            <summary>
            <para>
            <para>The key name for the object whose retention settings you want to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectRetentionCmdlet.RequestPayer">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectRetentionCmdlet.VersionId">
            <summary>
            <para>
            <para>The version ID for the object whose retention settings you want to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectRetentionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Retention'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetObjectRetentionResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetObjectRetentionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectRetentionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectTagSetCmdlet">
            <summary>
            Returns the tag-set of an object. You send the GET request against the tagging subresource
            associated with the object.
            
             
            <para>
            To use this operation, you must have permission to perform the <code>s3:GetObjectTagging</code>
            action. By default, the GET action returns information about current version of an
            object. For a versioned bucket, you can have multiple versions of an object in your
            bucket. To retrieve tags of any other version, use the versionId query parameter.
            You also need permission for the <code>s3:GetObjectVersionTagging</code> action.
            </para><para>
             By default, the bucket owner has this permission and can grant this permission to
            others.
            </para><para>
             For information about the Amazon S3 object tagging feature, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-tagging.html">Object
            Tagging</a>.
            </para><para>
            The following action is related to <code>GetObjectTagging</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectTagging.html">PutObjectTagging</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjectTagging.html">DeleteObjectTagging</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectTagSetCmdlet.BucketName">
            <summary>
            <para>
            <para>The bucket name containing the object for which to get the tagging information. </para><para>When using this action with an access point, you must direct requests to the access
            point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com.
            When using this action with an access point through the AWS SDKs, you provide the
            access point ARN in place of the bucket name. For more information about access point
            ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using
            access points</a> in the <i>Amazon S3 User Guide</i>.</para><para>When using this action with Amazon S3 on Outposts, you must direct requests to the
            S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com.
            When using this action using S3 on Outposts through the AWS SDKs, you provide the
            Outposts bucket ARN in place of the bucket name. For more information about S3 on
            Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using
            S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectTagSetCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            <para>The account ID of the expected bucket owner. If the bucket is owned by a different
            account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectTagSetCmdlet.Key">
            <summary>
            <para>
            <para>Object key for which to get the tagging information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectTagSetCmdlet.RequestPayer">
            <summary>
            <para>
            <para>Confirms that the requester knows that they will be charged for the request. 
            Bucket owners need not specify this parameter in their requests</para>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectTagSetCmdlet.VersionId">
            <summary>
            <para>
            <para>The versionId of the object for which to get the tagging information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectTagSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tagging'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetObjectTaggingResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetObjectTaggingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3ObjectTagSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Key parameter.
            The -PassThru parameter is deprecated, use -Select '^Key' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3PublicAccessBlockCmdlet">
            <summary>
            Retrieves the <code>PublicAccessBlock</code> configuration for an Amazon S3 bucket.
            To use this operation, you must have the <code>s3:GetBucketPublicAccessBlock</code>
            permission. For more information about Amazon S3 permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html">Specifying
            Permissions in a Policy</a>.
            
             <important><para>
            When Amazon S3 evaluates the <code>PublicAccessBlock</code> configuration for a bucket
            or an object, it checks the <code>PublicAccessBlock</code> configuration for both
            the bucket (or the bucket that contains the object) and the bucket owner's account.
            If the <code>PublicAccessBlock</code> settings are different between the bucket and
            the account, Amazon S3 uses the most restrictive combination of the bucket-level and
            account-level settings.
            </para></important><para>
            For more information about when Amazon S3 considers a bucket or an object public,
            see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The
            Meaning of "Public"</a>.
            </para><para>
            The following operations are related to <code>GetPublicAccessBlock</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html">Using
            Amazon S3 Block Public Access</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutPublicAccessBlock.html">PutPublicAccessBlock</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetPublicAccessBlock.html">GetPublicAccessBlock</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeletePublicAccessBlock.html">DeletePublicAccessBlock</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3PublicAccessBlockCmdlet.BucketName">
            <summary>
            <para>
            <para> The name of the Amazon S3 bucket whose Public Access Block configuration you want
            to retrieve. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3PublicAccessBlockCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3PublicAccessBlockCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PublicAccessBlockConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.GetPublicAccessBlockResponse).
            Specifying the name of a property of type Amazon.S3.Model.GetPublicAccessBlockResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3PublicAccessBlockCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.GetS3VersionCmdlet">
            <summary>
            Returns metadata about all versions of the objects in a bucket. You can also use request
            parameters as selection criteria to return metadata about a subset of all the object
            versions.
            
             <important><para>
             To use this operation, you must have permissions to perform the <code>s3:ListBucketVersions</code>
            action. Be aware of the name difference. 
            </para></important><note><para>
             A 200 OK response can contain valid or invalid XML. Make sure to design your application
            to parse the contents of the response and handle it appropriately.
            </para></note><para>
            To use this operation, you must have READ access to the bucket.
            </para><para>
            This action is not supported by Amazon S3 on Outposts.
            </para><para>
            The following operations are related to <code>ListObjectVersions</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html">ListObjectsV2</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html">DeleteObject</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3VersionCmdlet.BucketName">
            <summary>
            <para>
            The bucket name that contains the objects.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3VersionCmdlet.Encoding">
            <summary>
            <para>
            Requests Amazon S3 to encode the object keys in the response and specifies
            the encoding method to use. An object key may contain any Unicode character;
            however, XML 1.0 parser cannot parse some characters, such as characters
            with an ASCII value from 0 to 10. For characters that are not supported in
            XML 1.0, you can add this parameter to request that Amazon S3 encode the
            keys in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3VersionCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3VersionCmdlet.KeyMarker">
            <summary>
            <para>
            Specifies the key to start with when listing objects in a bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3VersionCmdlet.VersionIdMarker">
            <summary>
            <para>
            Specifies the object version you want to start listing from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3VersionCmdlet.Delimiter">
            <summary>
            <para>
            A delimiter is a character you use to group keys.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3VersionCmdlet.MaxKey">
            <summary>
            <para>
            Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3VersionCmdlet.Prefix">
            <summary>
            <para>
            Limits the response to keys that begin with the specified prefix.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3VersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.ListVersionsResponse).
            Specifying the name of a property of type Amazon.S3.Model.ListVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.GetS3VersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketAnalyticsConfigurationCmdlet">
            <summary>
            Deletes an analytics configuration for the bucket (specified by the analytics configuration
            ID).
            
             
            <para>
            To use this operation, you must have permissions to perform the <code>s3:PutAnalyticsConfiguration</code>
            action. The bucket owner has this permission by default. The bucket owner can grant
            this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions
            Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
            Access Permissions to Your Amazon S3 Resources</a>.
            </para><para>
            For information about the Amazon S3 analytics feature, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/analytics-storage-class.html">Amazon
            S3 Analytics â€“ Storage Class Analysis</a>. 
            </para><para>
            The following operations are related to <code>DeleteBucketAnalyticsConfiguration</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAnalyticsConfiguration.html">GetBucketAnalyticsConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketAnalyticsConfigurations.html">ListBucketAnalyticsConfigurations</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAnalyticsConfiguration.html">PutBucketAnalyticsConfiguration</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketAnalyticsConfigurationCmdlet.AnalyticsId">
            <summary>
            <para>
            The identifier used to represent an analytics configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketAnalyticsConfigurationCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket from which an analytics configuration is deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketAnalyticsConfigurationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketAnalyticsConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.DeleteBucketAnalyticsConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketAnalyticsConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketAnalyticsConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketEncryptionCmdlet">
            <summary>
            Amazon.S3.IAmazonS3.DeleteBucketEncryption
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketEncryptionCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket containing the server-side encryption configuration to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketEncryptionCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketEncryptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.DeleteBucketEncryptionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketEncryptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketEncryptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketIntelligentTieringConfigurationCmdlet">
            <summary>
            Deletes the S3 Intelligent-Tiering configuration from the specified bucket.
            
             
            <para>
            The S3 Intelligent-Tiering storage class is designed to optimize storage costs by
            automatically moving data to the most cost-effective storage access tier, without
            additional operational overhead. S3 Intelligent-Tiering delivers automatic cost savings
            by moving data between access tiers, when access patterns change.
            </para><para>
            The S3 Intelligent-Tiering storage class is suitable for objects larger than 128 KB
            that you plan to store for at least 30 days. If the size of an object is less than
            128 KB, it is not eligible for auto-tiering. Smaller objects can be stored, but they
            are always charged at the frequent access tier rates in the S3 Intelligent-Tiering
            storage class. 
            </para><para>
            If you delete an object before the end of the 30-day minimum storage duration period,
            you are charged for 30 days. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access">Storage
            class for automatically optimizing frequently and infrequently accessed objects</a>.
            </para><para>
            Operations related to <code>DeleteBucketIntelligentTieringConfiguration</code> include:
            
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketIntelligentTieringConfiguration.html">GetBucketIntelligentTieringConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketIntelligentTieringConfiguration.html">PutBucketIntelligentTieringConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketIntelligentTieringConfigurations.html">ListBucketIntelligentTieringConfigurations</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketIntelligentTieringConfigurationCmdlet.BucketName">
            <summary>
            <para>
            The name of the Amazon S3 bucket whose configuration you want to modify or retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketIntelligentTieringConfigurationCmdlet.IntelligentTieringId">
            <summary>
            <para>
            The ID used to identify the S3 Intelligent-Tiering configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketIntelligentTieringConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.DeleteBucketIntelligentTieringConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketIntelligentTieringConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketIntelligentTieringConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketInventoryConfigurationCmdlet">
            <summary>
            Deletes an inventory configuration (identified by the inventory ID) from the bucket.
            
             
            <para>
            To use this operation, you must have permissions to perform the <code>s3:PutInventoryConfiguration</code>
            action. The bucket owner has this permission by default. The bucket owner can grant
            this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions
            Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
            Access Permissions to Your Amazon S3 Resources</a>.
            </para><para>
            For information about the Amazon S3 inventory feature, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html">Amazon
            S3 Inventory</a>.
            </para><para>
            Operations related to <code>DeleteBucketInventoryConfiguration</code> include: 
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketInventoryConfiguration.html">GetBucketInventoryConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketInventoryConfiguration.html">PutBucketInventoryConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketInventoryConfigurations.html">ListBucketInventoryConfigurations</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketInventoryConfigurationCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket containing the inventory configuration to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketInventoryConfigurationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketInventoryConfigurationCmdlet.InventoryId">
            <summary>
            <para>
            The ID used to identify the inventory configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketInventoryConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.DeleteBucketInventoryConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketInventoryConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketInventoryConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketMetricsConfigurationCmdlet">
            <summary>
            Deletes a metrics configuration for the Amazon CloudWatch request metrics (specified
            by the metrics configuration ID) from the bucket. Note that this doesn't include the
            daily storage metrics.
            
             
            <para>
             To use this operation, you must have permissions to perform the <code>s3:PutMetricsConfiguration</code>
            action. The bucket owner has this permission by default. The bucket owner can grant
            this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions
            Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
            Access Permissions to Your Amazon S3 Resources</a>.
            </para><para>
            For information about CloudWatch request metrics for Amazon S3, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cloudwatch-monitoring.html">Monitoring
            Metrics with Amazon CloudWatch</a>. 
            </para><para>
            The following operations are related to <code>DeleteBucketMetricsConfiguration</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketMetricsConfiguration.html">GetBucketMetricsConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketMetricsConfiguration.html">PutBucketMetricsConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketMetricsConfigurations.html">ListBucketMetricsConfigurations</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cloudwatch-monitoring.html">Monitoring
            Metrics with Amazon CloudWatch</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketMetricsConfigurationCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket on which Inventory configuration is to be removed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketMetricsConfigurationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketMetricsConfigurationCmdlet.MetricsId">
            <summary>
            <para>
            The ID used to identify the metrics configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketMetricsConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.DeleteBucketMetricsConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketMetricsConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketMetricsConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketOwnershipControlCmdlet">
            <summary>
            Removes <code>OwnershipControls</code> for an Amazon S3 bucket. To use this operation,
            you must have the <code>s3:PutBucketOwnershipControls</code> permission. For more
            information about Amazon S3 permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html">Specifying
            Permissions in a Policy</a>.
            
             
            <para>
            For information about Amazon S3 Object Ownership, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/about-object-ownership.html">Using
            Object Ownership</a>. 
            </para><para>
            The following operations are related to <code>DeleteBucketOwnershipControls</code>:
            </para><ul><li><para><a>GetBucketOwnershipControls</a></para></li><li><para><a>PutBucketOwnershipControls</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketOwnershipControlCmdlet.BucketName">
            <summary>
            <para>
            The Amazon S3 bucket whose OwnershipControls you want to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketOwnershipControlCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. If the bucket is owned by a different account, 
            the request will fail with an HTTP <code>403 (Access Denied)</code> error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketOwnershipControlCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.DeleteBucketOwnershipControlsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketOwnershipControlCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketOwnershipControlCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketPolicyCmdlet">
            <summary>
            This implementation of the DELETE action uses the policy subresource to delete the
            policy of a specified bucket. If you are using an identity other than the root user
            of the AWS account that owns the bucket, the calling identity must have the <code>DeleteBucketPolicy</code>
            permissions on the specified bucket and belong to the bucket owner's account to use
            this operation. 
            
             
            <para>
            If you don't have <code>DeleteBucketPolicy</code> permissions, Amazon S3 returns a
            <code>403 Access Denied</code> error. If you have the correct permissions, but you're
            not using an identity that belongs to the bucket owner's account, Amazon S3 returns
            a <code>405 Method Not Allowed</code> error. 
            </para><important><para>
            As a security precaution, the root user of the AWS account that owns a bucket can
            always use this operation, even if the policy explicitly denies the root user the
            ability to perform this action.
            </para></important><para>
            For more information about bucket policies, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html">Using
            Bucket Policies and UserPolicies</a>. 
            </para><para>
            The following operations are related to <code>DeleteBucketPolicy</code></para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html">DeleteObject</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketPolicyCmdlet.BucketName">
            <summary>
            <para>
            The bucket on which the policy is to be deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketPolicyCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.DeleteBucketPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketReplicationCmdlet">
            <summary>
            Deletes the replication configuration from the bucket.
            
             
            <para>
            To use this operation, you must have permissions to perform the <code>s3:PutReplicationConfiguration</code>
            action. The bucket owner has these permissions by default and can grant it to others.
            For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions
            Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
            Access Permissions to Your Amazon S3 Resources</a>. 
            </para><note><para>
            It can take a while for the deletion of a replication configuration to fully propagate.
            </para></note><para>
             For information about replication configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html">Replication</a>
            in the <i>Amazon S3 User Guide</i>.
            </para><para>
            The following operations are related to <code>DeleteBucketReplication</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketReplication.html">PutBucketReplication</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketReplication.html">GetBucketReplication</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketReplicationCmdlet.BucketName">
            <summary>
            <para>
            <para>Deletes the replication subresource associated with the specified bucket.</para><note><para>There is usually some time lag before
            replication configuration deletion is fully propagated to all the
            Amazon S3 systems.</para></note><para> For more information, see
            <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html">
            Cross-Region Replication (CRR)</a> in the Amazon S3 Developer
            Guide. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketReplicationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            <para>The account ID of the expected bucket owner. If the bucket is owned by a different
            account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketReplicationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.DeleteBucketReplicationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketReplicationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketReplicationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketTaggingCmdlet">
            <summary>
            Deletes the tags from the bucket.
            
             
            <para>
            To use this operation, you must have permission to perform the <code>s3:PutBucketTagging</code>
            action. By default, the bucket owner has this permission and can grant this permission
            to others. 
            </para><para>
            The following operations are related to <code>DeleteBucketTagging</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html">GetBucketTagging</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketTagging.html">PutBucketTagging</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketTaggingCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket on which the tag set is to be removed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketTaggingCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketTaggingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.DeleteBucketTaggingResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketTaggingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketTaggingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketWebsiteCmdlet">
            <summary>
            This action removes the website configuration for a bucket. Amazon S3 returns a <code>200
            OK</code> response upon successfully deleting a website configuration on the specified
            bucket. You will get a <code>200 OK</code> response if the website configuration you
            are trying to delete does not exist on the bucket. Amazon S3 returns a <code>404</code>
            response if the bucket specified in the request does not exist.
            
             
            <para>
            This DELETE action requires the <code>S3:DeleteBucketWebsite</code> permission. By
            default, only the bucket owner can delete the website configuration attached to a
            bucket. However, bucket owners can grant other users permission to delete the website
            configuration by writing a bucket policy granting them the <code>S3:DeleteBucketWebsite</code>
            permission. 
            </para><para>
            For more information about hosting websites, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html">Hosting
            Websites on Amazon S3</a>. 
            </para><para>
            The following operations are related to <code>DeleteBucketWebsite</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketWebsite.html">GetBucketWebsite</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketWebsite.html">PutBucketWebsite</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketWebsiteCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket on which website configuration is to be removed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketWebsiteCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketWebsiteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.DeleteBucketWebsiteResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketWebsiteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3BucketWebsiteCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.RemoveS3CORSConfigurationCmdlet">
            <summary>
            Amazon.S3.IAmazonS3.DeleteCORSConfiguration
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3CORSConfigurationCmdlet.BucketName">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3CORSConfigurationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3CORSConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.DeleteCORSConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3CORSConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3CORSConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.RemoveS3LifecycleConfigurationCmdlet">
            <summary>
            Deletes the lifecycle configuration from the specified bucket. Amazon S3 removes all
            the lifecycle configuration rules in the lifecycle subresource associated with the
            bucket. Your objects never expire, and Amazon S3 no longer automatically deletes any
            objects on the basis of rules contained in the deleted lifecycle configuration.
            
             
            <para>
            To use this operation, you must have permission to perform the <code>s3:PutLifecycleConfiguration</code>
            action. By default, the bucket owner has this permission and the bucket owner can
            grant this permission to others.
            </para><para>
            There is usually some time lag before lifecycle configuration deletion is fully propagated
            to all the Amazon S3 systems.
            </para><para>
            For more information about the object expiration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#intro-lifecycle-rules-actions">Elements
            to Describe Lifecycle Actions</a>.
            </para><para>
            Related actions include:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html">PutBucketLifecycleConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html">GetBucketLifecycleConfiguration</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3LifecycleConfigurationCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket on which the lifecycle configuration is to be deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3LifecycleConfigurationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3LifecycleConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.DeleteLifecycleConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3LifecycleConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3LifecycleConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.RemoveS3ObjectTagSetCmdlet">
            <summary>
            Removes the entire tag set from the specified object. For more information about managing
            object tags, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-tagging.html">
            Object Tagging</a>.
            
             
            <para>
            To use this operation, you must have permission to perform the <code>s3:DeleteObjectTagging</code>
            action.
            </para><para>
            To delete tags of a specific object version, add the <code>versionId</code> query
            parameter in the request. You will need permission for the <code>s3:DeleteObjectVersionTagging</code>
            action.
            </para><para>
            The following operations are related to <code>DeleteBucketMetricsConfiguration</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectTagging.html">PutObjectTagging</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html">GetObjectTagging</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3ObjectTagSetCmdlet.BucketName">
            <summary>
            <para>
            <para>The bucket name containing the objects from which to remove the tags. </para><para>When using this action with an access point, you must direct requests to the access
            point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com.
            When using this action with an access point through the AWS SDKs, you provide the
            access point ARN in place of the bucket name. For more information about access point
            ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using
            access points</a> in the <i>Amazon S3 User Guide</i>.</para><para>When using this action with Amazon S3 on Outposts, you must direct requests to the
            S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com.
            When using this action using S3 on Outposts through the AWS SDKs, you provide the
            Outposts bucket ARN in place of the bucket name. For more information about S3 on
            Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using
            S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3ObjectTagSetCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            <para>The account ID of the expected bucket owner. If the bucket is owned by a different
            account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3ObjectTagSetCmdlet.Key">
            <summary>
            <para>
            The key identifying the object tagging to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3ObjectTagSetCmdlet.VersionId">
            <summary>
            <para>
            <para>The versionId of the object that the tag-set will be removed from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3ObjectTagSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VersionId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.DeleteObjectTaggingResponse).
            Specifying the name of a property of type Amazon.S3.Model.DeleteObjectTaggingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3ObjectTagSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Key parameter.
            The -PassThru parameter is deprecated, use -Select '^Key' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3ObjectTagSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.RemoveS3PublicAccessBlockCmdlet">
            <summary>
            Removes the <code>PublicAccessBlock</code> configuration for an Amazon S3 bucket.
            To use this operation, you must have the <code>s3:PutBucketPublicAccessBlock</code>
            permission. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions
            Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
            Access Permissions to Your Amazon S3 Resources</a>.
            
             
            <para>
            The following operations are related to <code>DeletePublicAccessBlock</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html">Using
            Amazon S3 Block Public Access</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetPublicAccessBlock.html">GetPublicAccessBlock</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutPublicAccessBlock.html">PutPublicAccessBlock</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketPolicyStatus.html">GetBucketPolicyStatus</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3PublicAccessBlockCmdlet.BucketName">
            <summary>
            <para>
            <para>The Amazon S3 bucket whose Public Access Block configuration you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3PublicAccessBlockCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3PublicAccessBlockCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.DeletePublicAccessBlockResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3PublicAccessBlockCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RemoveS3PublicAccessBlockCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet">
            <summary>
            Amazon.S3.IAmazonS3.RestoreObject
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.BucketName">
            <summary>
            <para>
            <para>The bucket name containing the object to restore. </para><para>When using this action with an access point, you must direct requests to the access
            point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com.
            When using this action with an access point through the AWS SDKs, you provide the
            access point ARN in place of the bucket name. For more information about access point
            ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using
            access points</a> in the <i>Amazon S3 User Guide</i>.</para><para>When using this action with Amazon S3 on Outposts, you must direct requests to the
            S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com.
            When using this action using S3 on Outposts through the AWS SDKs, you provide the
            Outposts bucket ARN in place of the bucket name. For more information about S3 on
            Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using
            S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.S3_BucketName">
            <summary>
            <para>
            The name of the bucket where the restore results will be placed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.S3_CannedACL">
            <summary>
            <para>
            The canned ACL to apply to the restore results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.CopyLifetimeInDays">
            <summary>
            <para>
            <para>Lifetime of the active copy in days. 
            Do not use with restores that specify <code>OutputLocation</code>.</para><para>The Days element is required for regular restores, and must not be provided for 
            select requests.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.Description">
            <summary>
            <para>
            The optional description for the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.Owner_DisplayName">
            <summary>
            <para>
            The display name of the owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.Encryption_EncryptionType">
            <summary>
            <para>
            The server-side encryption algorithm used when storing job results in Amazon S3 (e.g., AES256, aws:kms).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            <para>The account ID of the expected bucket owner. If the bucket is owned by a different
            account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.AccessControlList_Grant">
            <summary>
            <para>
            A collection of grants.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.Owner_Id">
            <summary>
            <para>
            The unique identifier of the owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.Key">
            <summary>
            <para>
            This key indicates the S3 object to restore.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.Encryption_KMSContext">
            <summary>
            <para>
            If the encryption type is aws:kms, this optional value can be used to specify the encryption context for the restore results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.Encryption_KMSKeyId">
            <summary>
            <para>
            Specifies the AWS KMS key ID to use for object encryption. All GET and PUT requests for an object protected by
            AWS KMS will fail if not made via SSL or using SigV4. Documentation on configuring any of the officially supported AWS SDKs and CLI can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.S3_Prefix">
            <summary>
            <para>
            The prefix that is prepended to the restore results for this request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.RequestPayer">
            <summary>
            <para>
            Confirms that the requester knows that she or he will be charged for the request.
            Bucket owners need not specify this parameter in their requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.RestoreRequestType">
            <summary>
            <para>
            Type of restore request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.RetrievalTier">
            <summary>
            <para>
            Retrieval tier at which the restore will be processed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.SelectParameter">
            <summary>
            <para>
            Describes the parameters for Select job types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.S3_StorageClass">
            <summary>
            <para>
            The class of storage used to store the restore results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.Tagging_TagSet">
            <summary>
            <para>
            TagSet
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.Tier">
            <summary>
            <para>
            Tier at which the restore will be processed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.S3_UserMetadata">
            <summary>
            <para>
            A map of metadata to store with the restore results in S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.VersionId">
            <summary>
            <para>
            VersionId used to reference a specific version of the object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.RestoreObjectResponse).
            Specifying the name of a property of type Amazon.S3.Model.RestoreObjectResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.RestoreS3ObjectCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.SelectS3ObjectContentCmdlet">
            <summary>
            Amazon.S3.IAmazonS3.SelectObjectContent
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SelectS3ObjectContentCmdlet.Bucket">
            <summary>
            <para>
            The S3 Bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SelectS3ObjectContentCmdlet.ScanRange_End">
            <summary>
            <para>
            Specifies the end of the byte range. This parameter is optional. Valid values: non-negative integers. The default value is one less than the size of the object being queried.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SelectS3ObjectContentCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SelectS3ObjectContentCmdlet.Expression">
            <summary>
            <para>
            The expression that is used to query the object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SelectS3ObjectContentCmdlet.ExpressionType">
            <summary>
            <para>
            The type of the provided expression (e.g., SQL).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SelectS3ObjectContentCmdlet.InputSerialization">
            <summary>
            <para>
            Describes the format of the data in the object that is being queried.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SelectS3ObjectContentCmdlet.Key">
            <summary>
            <para>
            The Object Key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SelectS3ObjectContentCmdlet.OutputSerialization">
            <summary>
            <para>
            Describes the format of the data that you want Amazon S3 to return in response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SelectS3ObjectContentCmdlet.RequestProgress">
            <summary>
            <para>
            Specifies if periodic request progress information should be enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SelectS3ObjectContentCmdlet.ServerSideCustomerEncryptionMethod">
            <summary>
            <para>
            The SSE Algorithm used to encrypt the object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SelectS3ObjectContentCmdlet.ServerSideEncryptionCustomerProvidedKey">
            <summary>
            <para>
            The SSE Customer Key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SelectS3ObjectContentCmdlet.ServerSideEncryptionCustomerProvidedKeyMD5">
            <summary>
            <para>
            The SSE Customer Key MD5.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SelectS3ObjectContentCmdlet.ScanRange_Start">
            <summary>
            <para>
            Specifies the start of the byte range. This parameter is optional. Valid values: non-negative integers. The default value is 0.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SelectS3ObjectContentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Payload'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.SelectObjectContentResponse).
            Specifying the name of a property of type Amazon.S3.Model.SelectObjectContentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SelectS3ObjectContentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Expression parameter.
            The -PassThru parameter is deprecated, use -Select '^Expression' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.SetS3BucketEncryptionCmdlet">
            <summary>
            Amazon.S3.IAmazonS3.PutBucketEncryption
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SetS3BucketEncryptionCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket for which the server-side encryption configuration is set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SetS3BucketEncryptionCmdlet.ContentMD5">
            <summary>
            <para>
            The base64-encoded 128-bit MD5 digest of the server-side encryption configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SetS3BucketEncryptionCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SetS3BucketEncryptionCmdlet.ServerSideEncryptionConfiguration_ServerSideEncryptionRule">
            <summary>
            <para>
            Container for information about a particular server-side encryption configuration rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SetS3BucketEncryptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.PutBucketEncryptionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SetS3BucketEncryptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.SetS3BucketEncryptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketAccelerateConfigurationCmdlet">
            <summary>
            Sets the accelerate configuration of an existing bucket. Amazon S3 Transfer Acceleration
            is a bucket-level feature that enables you to perform faster data transfers to Amazon
            S3.
            
             
            <para>
             To use this operation, you must have permission to perform the s3:PutAccelerateConfiguration
            action. The bucket owner has this permission by default. The bucket owner can grant
            this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions
            Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
            Access Permissions to Your Amazon S3 Resources</a>.
            </para><para>
             The Transfer Acceleration state of a bucket can be set to one of the following two
            values:
            </para><ul><li><para>
             Enabled â€“ Enables accelerated data transfers to the bucket.
            </para></li><li><para>
             Suspended â€“ Disables accelerated data transfers to the bucket.
            </para></li></ul><para>
            The <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAccelerateConfiguration.html">GetBucketAccelerateConfiguration</a>
            action returns the transfer acceleration state of a bucket.
            </para><para>
            After setting the Transfer Acceleration state of a bucket to Enabled, it might take
            up to thirty minutes before the data transfer rates to the bucket increase.
            </para><para>
             The name of the bucket used for Transfer Acceleration must be DNS-compliant and must
            not contain periods (".").
            </para><para>
             For more information about transfer acceleration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html">Transfer
            Acceleration</a>.
            </para><para>
            The following operations are related to <code>PutBucketAccelerateConfiguration</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAccelerateConfiguration.html">GetBucketAccelerateConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketAccelerateConfigurationCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket for which the accelerate configuration is set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketAccelerateConfigurationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketAccelerateConfigurationCmdlet.AccelerateConfiguration_Status">
            <summary>
            <para>
            The accelerate status of the bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketAccelerateConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutBucketAccelerateConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketAccelerateConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketAccelerateConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketAnalyticsConfigurationCmdlet">
            <summary>
            Amazon.S3.IAmazonS3.PutBucketAnalyticsConfiguration
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketAnalyticsConfigurationCmdlet.AnalyticsFilter_AnalyticsFilterPredicate">
            <summary>
            <para>
            Filter Predicate setup for specific filter types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketAnalyticsConfigurationCmdlet.AnalyticsId">
            <summary>
            <para>
            The identifier used to represent an analytics configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketAnalyticsConfigurationCmdlet.AnalyticsConfiguration_AnalyticsId">
            <summary>
            <para>
            The identifier used to represent an analytics configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketAnalyticsConfigurationCmdlet.S3BucketDestination_BucketAccountId">
            <summary>
            <para>
            The account ID that owns the destination bucket. If no account ID is provided, the owner will not be validated prior to exporting data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketAnalyticsConfigurationCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket to which an analytics configuration is stored.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketAnalyticsConfigurationCmdlet.S3BucketDestination_BucketName">
            <summary>
            <para>
            The Amazon resource name (ARN) of the bucket to which data is exported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketAnalyticsConfigurationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketAnalyticsConfigurationCmdlet.S3BucketDestination_Format">
            <summary>
            <para>
            The file format used when exporting data to Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketAnalyticsConfigurationCmdlet.DataExport_OutputSchemaVersion">
            <summary>
            <para>
            The version of the output schema to use when exporting data. Must be V_1.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketAnalyticsConfigurationCmdlet.S3BucketDestination_Prefix">
            <summary>
            <para>
            The prefix to use when exporting data. The exported data begins with this prefix.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketAnalyticsConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutBucketAnalyticsConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketAnalyticsConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketAnalyticsConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketIntelligentTieringConfigurationCmdlet">
            <summary>
            Amazon.S3.IAmazonS3.PutBucketIntelligentTieringConfiguration
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketIntelligentTieringConfigurationCmdlet.BucketName">
            <summary>
            <para>
            The name of the Amazon S3 bucket whose configuration you want to modify or retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketIntelligentTieringConfigurationCmdlet.IntelligentTieringFilter_IntelligentTieringFilterPredicate">
            <summary>
            <para>
            Filter Predicate setup for specific filter types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketIntelligentTieringConfigurationCmdlet.IntelligentTieringId">
            <summary>
            <para>
            The ID used to identify the S3 Intelligent-Tiering configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketIntelligentTieringConfigurationCmdlet.IntelligentTieringConfiguration_IntelligentTieringId">
            <summary>
            <para>
            The ID used to identify the S3 Intelligent-Tiering configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketIntelligentTieringConfigurationCmdlet.IntelligentTieringConfiguration_Status">
            <summary>
            <para>
            Specifies the status of the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketIntelligentTieringConfigurationCmdlet.IntelligentTieringConfiguration_Tiering">
            <summary>
            <para>
            Specifies the S3 Intelligent-Tiering storage class tier of the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketIntelligentTieringConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutBucketIntelligentTieringConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketIntelligentTieringConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketIntelligentTieringConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketInventoryConfigurationCmdlet">
            <summary>
            Amazon.S3.IAmazonS3.PutBucketInventoryConfiguration
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketInventoryConfigurationCmdlet.S3BucketDestination_AccountId">
            <summary>
            <para>
            The ID of the account that owns the destination bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketInventoryConfigurationCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket where the inventory configuration will be stored.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketInventoryConfigurationCmdlet.S3BucketDestination_BucketName">
            <summary>
            <para>
            The Amazon resource name (ARN) of the bucket where inventory results will be published.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketInventoryConfigurationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketInventoryConfigurationCmdlet.Schedule_Frequency">
            <summary>
            <para>
            Specifies how frequently inventory results are produced.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketInventoryConfigurationCmdlet.InventoryConfiguration_IncludedObjectVersion">
            <summary>
            <para>
            <para>Object versions to include in the inventory list. If set to <code>All</code>, the
            list includes all the object versions, which adds the version-related fields <code>VersionId</code>,
            <code>IsLatest</code>, and <code>DeleteMarker</code> to the list. If set to <code>Current</code>,
            the list does not contain these version-related fields.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketInventoryConfigurationCmdlet.InventoryFilter_InventoryFilterPredicate">
            <summary>
            <para>
            Filter Predicate setup for specific filter types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketInventoryConfigurationCmdlet.S3BucketDestination_InventoryFormat">
            <summary>
            <para>
            Specifies the output format of the inventory results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketInventoryConfigurationCmdlet.InventoryId">
            <summary>
            <para>
            Specifies the inventory Id.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketInventoryConfigurationCmdlet.InventoryConfiguration_InventoryId">
            <summary>
            <para>
            The ID used to identify the inventory configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketInventoryConfigurationCmdlet.InventoryConfiguration_InventoryOptionalField">
            <summary>
            <para>
            Contains the optional fields that are included in the inventory results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketInventoryConfigurationCmdlet.InventoryConfiguration_IsEnabled">
            <summary>
            <para>
            <para>Specifies whether the inventory is enabled or disabled. If set to <code>True</code>,
            an inventory list is generated. If set to <code>False</code>, no inventory list is
            generated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketInventoryConfigurationCmdlet.SSEKMS_KeyId">
            <summary>
            <para>
            Specifies the ID of the AWS Key Management Service (KMS) 
            master encryption key to use for encrypting Inventory reports.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketInventoryConfigurationCmdlet.S3BucketDestination_Prefix">
            <summary>
            <para>
            The prefix that is prepended to all inventory results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketInventoryConfigurationCmdlet.InventoryEncryption_SSES3">
            <summary>
            <para>
            Specifies the use of SSE-S3 to encrypt delievered Inventory reports.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketInventoryConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutBucketInventoryConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketInventoryConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketInventoryConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketLoggingCmdlet">
            <summary>
            Set the logging parameters for a bucket and to specify permissions for who can view
            and modify the logging parameters. All logs are saved to buckets in the same AWS Region
            as the source bucket. To set the logging status of a bucket, you must be the bucket
            owner.
            
             
            <para>
            The bucket owner is automatically granted FULL_CONTROL to all logs. You use the <code>Grantee</code>
            request element to grant access to other people. The <code>Permissions</code> request
            element specifies the kind of access the grantee has to the logs.
            </para><para><b>Grantee Values</b></para><para>
            You can specify the person (grantee) to whom you're assigning access rights (using
            request elements) in the following ways:
            </para><ul><li><para>
            By the person's ID:
            </para><para><code>&lt;Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="CanonicalUser"&gt;&lt;ID&gt;&lt;&gt;ID&lt;&gt;&lt;/ID&gt;&lt;DisplayName&gt;&lt;&gt;GranteesEmail&lt;&gt;&lt;/DisplayName&gt;
            &lt;/Grantee&gt;</code></para><para>
            DisplayName is optional and ignored in the request.
            </para></li><li><para>
            By Email address:
            </para><para><code> &lt;Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="AmazonCustomerByEmail"&gt;&lt;EmailAddress&gt;&lt;&gt;Grantees@email.com&lt;&gt;&lt;/EmailAddress&gt;&lt;/Grantee&gt;</code></para><para>
            The grantee is resolved to the CanonicalUser and, in a response to a GET Object acl
            request, appears as the CanonicalUser.
            </para></li><li><para>
            By URI:
            </para><para><code>&lt;Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="Group"&gt;&lt;URI&gt;&lt;&gt;http://acs.amazonaws.com/groups/global/AuthenticatedUsers&lt;&gt;&lt;/URI&gt;&lt;/Grantee&gt;</code></para></li></ul><para>
            To enable logging, you use LoggingEnabled and its children request elements. To disable
            logging, you use an empty BucketLoggingStatus request element:
            </para><para><code>&lt;BucketLoggingStatus xmlns="http://doc.s3.amazonaws.com/2006-03-01" /&gt;</code></para><para>
            For more information about server access logging, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html">Server
            Access Logging</a>. 
            </para><para>
            For more information about creating a bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a>.
            For more information about returning the logging status of a bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLogging.html">GetBucketLogging</a>.
            </para><para>
            The following operations are related to <code>PutBucketLogging</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html">PutObject</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html">DeleteBucket</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLogging.html">GetBucketLogging</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketLoggingCmdlet.BucketName">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketLoggingCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketLoggingCmdlet.LoggingConfig_Grant">
            <summary>
            <para>
            A collection of grants.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketLoggingCmdlet.LoggingConfig_TargetBucketName">
            <summary>
            <para>
            Specifies the bucket where you want Amazon S3 to store server access logs. You can have your logs delivered to any bucket that you own,
            including the same bucket that is being logged. You can also configure multiple buckets to deliver their logs to the same target bucket. In
            this case you should choose a different TargetPrefix for each source bucket so that the delivered log files can be distinguished by key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketLoggingCmdlet.LoggingConfig_TargetPrefix">
            <summary>
            <para>
            <para>A prefix for all log object keys. If you store log files from multiple Amazon S3 buckets
            in a single bucket, you can use a prefix to distinguish which log files came from
            which bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketLoggingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutBucketLoggingResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketLoggingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketLoggingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketMetricsConfigurationCmdlet">
            <summary>
            Sets a metrics configuration (specified by the metrics configuration ID) for the bucket.
            You can have up to 1,000 metrics configurations per bucket. If you're updating an
            existing metrics configuration, note that this is a full replacement of the existing
            metrics configuration. If you don't include the elements you want to keep, they are
            erased.
            
             
            <para>
            To use this operation, you must have permissions to perform the <code>s3:PutMetricsConfiguration</code>
            action. The bucket owner has this permission by default. The bucket owner can grant
            this permission to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions
            Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
            Access Permissions to Your Amazon S3 Resources</a>.
            </para><para>
            For information about CloudWatch request metrics for Amazon S3, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cloudwatch-monitoring.html">Monitoring
            Metrics with Amazon CloudWatch</a>.
            </para><para>
            The following operations are related to <code>PutBucketMetricsConfiguration</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketMetricsConfiguration.html">DeleteBucketMetricsConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketMetricsConfiguration.html">PutBucketMetricsConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketMetricsConfigurations.html">ListBucketMetricsConfigurations</a></para></li></ul><para><code>GetBucketLifecycle</code> has the following special error:
            </para><ul><li><para>
            Error code: <code>TooManyConfigurations</code></para><ul><li><para>
            Description: You are attempting to create a new configuration but have already reached
            the 1,000-configuration limit.
            </para></li><li><para>
            HTTP Status Code: HTTP 400 Bad Request
            </para></li></ul></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketMetricsConfigurationCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket for which the metrics configuration is set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketMetricsConfigurationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketMetricsConfigurationCmdlet.MetricsFilter_MetricsFilterPredicate">
            <summary>
            <para>
            Filter Predicate setup for specific filter types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketMetricsConfigurationCmdlet.MetricsId">
            <summary>
            <para>
            The ID used to identify the metrics configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketMetricsConfigurationCmdlet.MetricsConfiguration_MetricsId">
            <summary>
            <para>
            The ID used to identify the metrics configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketMetricsConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutBucketMetricsConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketMetricsConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketMetricsConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketNotificationCmdlet">
            <summary>
            Enables notifications of specified events for a bucket. For more information about
            event notifications, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Configuring
            Event Notifications</a>.
            
             
            <para>
            Using this API, you can replace an existing notification configuration. The configuration
            is an XML file that defines the event types that you want Amazon S3 to publish and
            the destination where you want Amazon S3 to publish an event notification when it
            detects an event of the specified type.
            </para><para>
            By default, your bucket has no event notifications configured. That is, the notification
            configuration will be an empty <code>NotificationConfiguration</code>.
            </para><para><code>&lt;NotificationConfiguration&gt;</code></para><para><code>&lt;/NotificationConfiguration&gt;</code></para><para>
            This action replaces the existing notification configuration with the configuration
            you include in the request body.
            </para><para>
            After Amazon S3 receives this request, it first verifies that any Amazon Simple Notification
            Service (Amazon SNS) or Amazon Simple Queue Service (Amazon SQS) destination exists,
            and that the bucket owner has permission to publish to it by sending a test notification.
            In the case of AWS Lambda destinations, Amazon S3 verifies that the Lambda function
            permissions grant Amazon S3 permission to invoke the function from the Amazon S3 bucket.
            For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Configuring
            Notifications for Amazon S3 Events</a>.
            </para><para>
            You can disable notifications by adding the empty NotificationConfiguration element.
            </para><para>
            By default, only the bucket owner can configure notifications on a bucket. However,
            bucket owners can use a bucket policy to grant permission to other users to set this
            configuration with <code>s3:PutBucketNotification</code> permission.
            </para><note><para>
            The PUT notification is an atomic operation. For example, suppose your notification
            configuration includes SNS topic, SQS queue, and Lambda function configurations. When
            you send a PUT request with this configuration, Amazon S3 sends test messages to your
            SNS topic. If the message fails, the entire PUT action will fail, and Amazon S3 will
            not add the configuration to your bucket.
            </para></note><para><b>Responses</b></para><para>
            If the configuration in the request body includes only one <code>TopicConfiguration</code>
            specifying only the <code>s3:ReducedRedundancyLostObject</code> event type, the response
            will also include the <code>x-amz-sns-test-message-id</code> header containing the
            message ID of the test notification sent to the topic.
            </para><para>
            The following action is related to <code>PutBucketNotificationConfiguration</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketNotificationConfiguration.html">GetBucketNotificationConfiguration</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketNotificationCmdlet.BucketName">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketNotificationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketNotificationCmdlet.LambdaFunctionConfiguration">
            <summary>
            <para>
            LambdaFunctionConfigurations are configuration for 
            Amazon S3 events to be sent to an Amazon Lambda cloud function.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketNotificationCmdlet.QueueConfiguration">
            <summary>
            <para>
            QueueConfigurations are configuration for Amazon S3 
            events to be sent to Amazon SQS queues.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketNotificationCmdlet.TopicConfiguration">
            <summary>
            <para>
            TopicConfigurations are configuration for Amazon S3 
            events to be sent to Amazon SNS topics.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketNotificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutBucketNotificationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketNotificationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketNotificationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketOwnershipControlCmdlet">
            <summary>
            Creates or modifies <code>OwnershipControls</code> for an Amazon S3 bucket. To use
            this operation, you must have the <code>s3:PutBucketOwnershipControls</code> permission.
            For more information about Amazon S3 permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html">Specifying
            Permissions in a Policy</a>. 
            
             
            <para>
            For information about Amazon S3 Object Ownership, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/about-object-ownership.html">Using
            Object Ownership</a>. 
            </para><para>
            The following operations are related to <code>PutBucketOwnershipControls</code>:
            </para><ul><li><para><a>GetBucketOwnershipControls</a></para></li><li><para><a>DeleteBucketOwnershipControls</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketOwnershipControlCmdlet.BucketName">
            <summary>
            <para>
            The name of the Amazon S3 bucket whose OwnershipControls you want to set
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketOwnershipControlCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, 
            the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketOwnershipControlCmdlet.OwnershipControls_Rule">
            <summary>
            <para>
            A bucket's ownership control rules
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketOwnershipControlCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutBucketOwnershipControlsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketOwnershipControlCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketOwnershipControlCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketPolicyCmdlet">
            <summary>
            Applies an Amazon S3 bucket policy to an Amazon S3 bucket. If you are using an identity
            other than the root user of the AWS account that owns the bucket, the calling identity
            must have the <code>PutBucketPolicy</code> permissions on the specified bucket and
            belong to the bucket owner's account in order to use this operation.
            
             
            <para>
            If you don't have <code>PutBucketPolicy</code> permissions, Amazon S3 returns a <code>403
            Access Denied</code> error. If you have the correct permissions, but you're not using
            an identity that belongs to the bucket owner's account, Amazon S3 returns a <code>405
            Method Not Allowed</code> error.
            </para><important><para>
             As a security precaution, the root user of the AWS account that owns a bucket can
            always use this operation, even if the policy explicitly denies the root user the
            ability to perform this action. 
            </para></important><para>
            For more information about bucket policies, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html">Using
            Bucket Policies and User Policies</a>.
            </para><para>
            The following operations are related to <code>PutBucketPolicy</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html">DeleteBucket</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketPolicyCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketPolicyCmdlet.ConfirmRemoveSelfBucketAccess">
            <summary>
            <para>
            Set this parameter to true to confirm that you want to remove your 
            permissions to change this bucket policy in the future.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketPolicyCmdlet.ContentMD5">
            <summary>
            <para>
            The base64 encoded 128-bit MD5 digest of the message (without the headers) according to RFC 1864. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketPolicyCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketPolicyCmdlet.Policy">
            <summary>
            <para>
            The bucket policy as a JSON document.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutBucketPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketReplicationCmdlet">
            <summary>
            Creates a replication configuration or replaces an existing one. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html">Replication</a>
            in the <i>Amazon S3 User Guide</i>. 
            
             <note><para>
            To perform this operation, the user or role performing the action must have the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_passrole.html">iam:PassRole</a>
            permission.
            </para></note><para>
            Specify the replication configuration in the request body. In the replication configuration,
            you provide the name of the destination bucket or buckets where you want Amazon S3
            to replicate objects, the IAM role that Amazon S3 can assume to replicate objects
            on your behalf, and other relevant information.
            </para><para>
            A replication configuration must include at least one rule, and can contain a maximum
            of 1,000. Each rule identifies a subset of objects to replicate by filtering the objects
            in the source bucket. To choose additional subsets of objects to replicate, add a
            rule for each subset.
            </para><para>
            To specify a subset of the objects in the source bucket to apply a replication rule
            to, add the Filter element as a child of the Rule element. You can filter objects
            based on an object key prefix, one or more object tags, or both. When you add the
            Filter element in the configuration, you must also add the following elements: <code>DeleteMarkerReplication</code>,
            <code>Status</code>, and <code>Priority</code>.
            </para><note><para>
            If you are using an earlier version of the replication configuration, Amazon S3 handles
            replication of delete markers differently. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations">Backward
            Compatibility</a>.
            </para></note><para>
            For information about enabling versioning on a bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html">Using
            Versioning</a>.
            </para><para>
            By default, a resource owner, in this case the AWS account that created the bucket,
            can perform this operation. The resource owner can also grant others permissions to
            perform the operation. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html">Specifying
            Permissions in a Policy</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
            Access Permissions to Your Amazon S3 Resources</a>.
            </para><para><b>Handling Replication of Encrypted Objects</b></para><para>
            By default, Amazon S3 doesn't replicate objects that are stored at rest using server-side
            encryption with CMKs stored in AWS KMS. To replicate AWS KMS-encrypted objects, add
            the following: <code>SourceSelectionCriteria</code>, <code>SseKmsEncryptedObjects</code>,
            <code>Status</code>, <code>EncryptionConfiguration</code>, and <code>ReplicaKmsKeyID</code>.
            For information about replication configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-config-for-kms-objects.html">Replicating
            Objects Created with SSE Using CMKs stored in AWS KMS</a>.
            </para><para>
            For information on <code>PutBucketReplication</code> errors, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ReplicationErrorCodeList">List
            of replication-related error codes</a></para><para>
            The following operations are related to <code>PutBucketReplication</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketReplication.html">GetBucketReplication</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketReplication.html">DeleteBucketReplication</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketReplicationCmdlet.BucketName">
            <summary>
            <para>
            <para>The name of the bucket</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketReplicationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            <para>The account ID of the expected bucket owner. If the bucket is owned by a different
            account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketReplicationCmdlet.Configuration_Role">
            <summary>
            <para>
            Indicates the ARN of the role to assume.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketReplicationCmdlet.Configuration_Rule">
            <summary>
            <para>
            Container for information about a particular replication rule.
            Replication configuration must have at least one rule and can contain up to 1,000 rules.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketReplicationCmdlet.Token">
            <summary>
            <para>
            <para>A token to allow Object Lock to be enabled for an existing bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketReplicationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutBucketReplicationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketReplicationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketReplicationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketRequestPaymentCmdlet">
            <summary>
            Sets the request payment configuration for a bucket. By default, the bucket owner
            pays for downloads from the bucket. This configuration parameter enables the bucket
            owner (only) to specify that the person requesting the download will be charged for
            the download. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html">Requester
            Pays Buckets</a>.
            
             
            <para>
            The following operations are related to <code>PutBucketRequestPayment</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketRequestPayment.html">GetBucketRequestPayment</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketRequestPaymentCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket to set payment config.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketRequestPaymentCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketRequestPaymentCmdlet.RequestPaymentConfiguration_Payer">
            <summary>
            <para>
            Specifies who pays for the download and request fees.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketRequestPaymentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutBucketRequestPaymentResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketRequestPaymentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketRequestPaymentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketTaggingCmdlet">
            <summary>
            Sets the tags for a bucket.
            
             
            <para>
            Use tags to organize your AWS bill to reflect your own cost structure. To do this,
            sign up to get your AWS account bill with tag key values included. Then, to see the
            cost of combined resources, organize your billing information according to resources
            with the same tag key values. For example, you can tag several resources with a specific
            application name, and then organize your billing information to see the total cost
            of that application across several services. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Cost
            Allocation and Tagging</a>.
            </para><note><para>
            Within a bucket, if you add a tag that has the same key as an existing tag, the new
            value overwrites the old value. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/CostAllocTagging.html">Using
            Cost Allocation in Amazon S3 Bucket Tags</a>.
            </para></note><para>
            To use this operation, you must have permissions to perform the <code>s3:PutBucketTagging</code>
            action. The bucket owner has this permission by default and can grant this permission
            to others. For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources">Permissions
            Related to Bucket Subresource Operations</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
            Access Permissions to Your Amazon S3 Resources</a>.
            </para><para><code>PutBucketTagging</code> has the following special errors:
            </para><ul><li><para>
            Error code: <code>InvalidTagError</code></para><ul><li><para>
            Description: The tag provided was not a valid tag. This error can occur if the tag
            did not pass input validation. For information about tag restrictions, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html">User-Defined
            Tag Restrictions</a> and <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/aws-tag-restrictions.html">AWS-Generated
            Cost Allocation Tag Restrictions</a>.
            </para></li></ul></li><li><para>
            Error code: <code>MalformedXMLError</code></para><ul><li><para>
            Description: The XML provided does not match the schema.
            </para></li></ul></li><li><para>
            Error code: <code>OperationAbortedError </code></para><ul><li><para>
            Description: A conflicting conditional action is currently in progress against this
            resource. Please try again.
            </para></li></ul></li><li><para>
            Error code: <code>InternalError</code></para><ul><li><para>
            Description: The service was unable to apply the provided tag to the bucket.
            </para></li></ul></li></ul><para>
            The following operations are related to <code>PutBucketTagging</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html">GetBucketTagging</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketTagging.html">DeleteBucketTagging</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketTaggingCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket to apply the tags to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketTaggingCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketTaggingCmdlet.TagSet">
            <summary>
            <para>
            The collection of tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketTaggingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutBucketTaggingResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketTaggingCmdlet.PassThru">
            <summary>
            Returns the collection of Tag objects that were added
            The -PassThru parameter is deprecated, use -Select instead. This parameter will be removed in future
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketTaggingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketVersioningCmdlet">
            <summary>
            Amazon.S3.IAmazonS3.PutBucketVersioning
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketVersioningCmdlet.MfaCodes_AuthenticationValue">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketVersioningCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket to be updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketVersioningCmdlet.VersioningConfig_EnableMfaDelete">
            <summary>
            <para>
            Specifies whether MFA Delete is enabled on this S3 Bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketVersioningCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketVersioningCmdlet.MfaCodes_SerialNumber">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketVersioningCmdlet.VersioningConfig_Status">
            <summary>
            <para>
            Versioning status for the bucket.
            Accepted values: Off, Enabled, Suspended.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketVersioningCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutBucketVersioningResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketVersioningCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketVersioningCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketWebsiteCmdlet">
            <summary>
            Sets the configuration of the website that is specified in the <code>website</code>
            subresource. To configure a bucket as a website, you can add this subresource on the
            bucket with website configuration information such as the file name of the index document
            and any redirect rules. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html">Hosting
            Websites on Amazon S3</a>.
            
             
            <para>
            This PUT action requires the <code>S3:PutBucketWebsite</code> permission. By default,
            only the bucket owner can configure the website attached to a bucket; however, bucket
            owners can allow other users to set the website configuration by writing a bucket
            policy that grants them the <code>S3:PutBucketWebsite</code> permission.
            </para><para>
            To redirect all website requests sent to the bucket's website endpoint, you add a
            website configuration with the following elements. Because all requests are sent to
            another website, you don't need to provide index document name for the bucket.
            </para><ul><li><para><code>WebsiteConfiguration</code></para></li><li><para><code>RedirectAllRequestsTo</code></para></li><li><para><code>HostName</code></para></li><li><para><code>Protocol</code></para></li></ul><para>
            If you want granular control over redirects, you can use the following elements to
            add routing rules that describe conditions for redirecting requests and information
            about the redirect destination. In this case, the website configuration must provide
            an index document for the bucket, because some requests might not be redirected. 
            </para><ul><li><para><code>WebsiteConfiguration</code></para></li><li><para><code>IndexDocument</code></para></li><li><para><code>Suffix</code></para></li><li><para><code>ErrorDocument</code></para></li><li><para><code>Key</code></para></li><li><para><code>RoutingRules</code></para></li><li><para><code>RoutingRule</code></para></li><li><para><code>Condition</code></para></li><li><para><code>HttpErrorCodeReturnedEquals</code></para></li><li><para><code>KeyPrefixEquals</code></para></li><li><para><code>Redirect</code></para></li><li><para><code>Protocol</code></para></li><li><para><code>HostName</code></para></li><li><para><code>ReplaceKeyPrefixWith</code></para></li><li><para><code>ReplaceKeyWith</code></para></li><li><para><code>HttpRedirectCode</code></para></li></ul><para>
            Amazon S3 has a limitation of 50 routing rules per website configuration. If you require
            more than 50 routing rules, you can use object redirect. For more information, see
            <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html">Configuring
            an Object Redirect</a> in the <i>Amazon S3 User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketWebsiteCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket to apply the configuration to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketWebsiteCmdlet.WebsiteConfiguration_ErrorDocument">
            <summary>
            <para>
            The ErrorDocument value, an object key name to use when a 4XX class error occurs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketWebsiteCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketWebsiteCmdlet.RedirectAllRequestsTo_HostName">
            <summary>
            <para>
            Name of the host where requests will be redirected.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketWebsiteCmdlet.RedirectAllRequestsTo_HttpRedirectCode">
            <summary>
            <para>
            The HTTP redirect code to use on the response. Not required if one of the siblings is present.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketWebsiteCmdlet.WebsiteConfiguration_IndexDocumentSuffix">
            <summary>
            <para>
            <para>This value is a suffix that is appended to a request that is for a "directory" 
            on the website endpoint (e.g. if the suffix is index.html and
            you make a request to samplebucket/images/ the data that
            is returned will be for the object with the key name
            images/index.html)</para><para>The suffix must not be empty and must not include a slash
            character.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketWebsiteCmdlet.RedirectAllRequestsTo_Protocol">
            <summary>
            <para>
            Protocol to use (http, https) when redirecting requests. The default is the protocol that is used in the original request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketWebsiteCmdlet.RedirectAllRequestsTo_ReplaceKeyPrefixWith">
            <summary>
            <para>
            The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix docs/ (objects in the
            docs/ folder) to documents/, you can set a condition block with KeyPrefixEquals set to docs/ and in the Redirect set ReplaceKeyPrefixWith to
            /documents. Not required if one of the siblings is present. Can be present only if ReplaceKeyWith is not provided.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketWebsiteCmdlet.RedirectAllRequestsTo_ReplaceKeyWith">
            <summary>
            <para>
            The specific object key to use in the redirect request. For example, redirect request to error.html. Not required if one of the sibling is
            present. Can be present only if ReplaceKeyPrefixWith is not provided.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketWebsiteCmdlet.WebsiteConfiguration_RoutingRule">
            <summary>
            <para>
            The list of routing rules that can be used for configuring redirects if certain conditions are meet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketWebsiteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutBucketWebsiteResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketWebsiteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3BucketWebsiteCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3CORSConfigurationCmdlet">
            <summary>
            Amazon.S3.IAmazonS3.PutCORSConfiguration
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3CORSConfigurationCmdlet.BucketName">
            <summary>
            <para>
            The name of the bucket to have the CORS configuration applied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3CORSConfigurationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3CORSConfigurationCmdlet.Configuration_Rule">
            <summary>
            <para>
            The collection of rules in this configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3CORSConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutCORSConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3CORSConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3CORSConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet">
            <summary>
            Passes transformed objects to a <code>GetObject</code> operation when using Object
            Lambda Access Points. For information about Object Lambda Access Points, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/transforming-objects.html">Transforming
            objects with Object Lambda Access Points</a> in the <i>Amazon S3 User Guide</i>.
            
             
            <para>
            This operation supports metadata that can be returned by <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a>,
            in addition to <code>RequestRoute</code>, <code>RequestToken</code>, <code>StatusCode</code>,
            <code>ErrorCode</code>, and <code>ErrorMessage</code>. The <code>GetObject</code>
            response metadata is supported so that the <code>WriteGetObjectResponse</code> caller,
            typically an AWS Lambda function, can provide the same metadata when it internally
            invokes <code>GetObject</code>. When <code>WriteGetObjectResponse</code> is called
            by a customer-owned Lambda function, the metadata returned to the end user <code>GetObject</code>
            call might differ from what Amazon S3 would normally return.
            </para><para>
            AWS provides some prebuilt Lambda functions that you can use with S3 Object Lambda
            to detect and redact personally identifiable information (PII) and decompress S3 objects.
            These Lambda functions are available in the AWS Serverless Application Repository,
            and can be selected through the AWS Management Console when you create your Object
            Lambda Access Point.
            </para><para>
            Example 1: PII Access Control - This Lambda function uses Amazon Comprehend, a natural
            language processing (NLP) service using machine learning to find insights and relationships
            in text. It automatically detects personally identifiable information (PII) such as
            names, addresses, dates, credit card numbers, and social security numbers from documents
            in your Amazon S3 bucket. 
            </para><para>
            Example 2: PII Redaction - This Lambda function uses Amazon Comprehend, a natural
            language processing (NLP) service using machine learning to find insights and relationships
            in text. It automatically redacts personally identifiable information (PII) such as
            names, addresses, dates, credit card numbers, and social security numbers from documents
            in your Amazon S3 bucket. 
            </para><para>
            Example 3: Decompression - The Lambda function S3ObjectLambdaDecompression, is equipped
            to decompress objects stored in S3 in one of six compressed file formats including
            bzip2, gzip, snappy, zlib, zstandard and ZIP. 
            </para><para>
            For information on how to view and use these functions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/olap-examples.html">Using
            AWS built Lambda functions</a> in the <i>Amazon S3 User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.AcceptRange">
            <summary>
            <para>
            Indicates that a range of bytes was specified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.Body">
            <summary>
            <para>
            <para>The object data</para>.
            </para>
            <para>The cmdlet accepts a parameter of type string, string[], System.IO.FileInfo or System.IO.Stream.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.BucketKeyEnabled">
            <summary>
            <para>
            Indicates whether the object stored in Amazon S3 uses a S3 Bucket Key for server-side encryption with AWS KMS (SSE-KMS).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.CacheControl">
            <summary>
            <para>
            Specifies caching behavior along the request/reply chain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.ContentDisposition">
            <summary>
            <para>
            Specifies presentational information for the object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.ContentEncoding">
            <summary>
            <para>
            Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.ContentLanguage">
            <summary>
            <para>
            The language the content is in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.ContentLength">
            <summary>
            <para>
            The size of the body in bytes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.ContentRange">
            <summary>
            <para>
            The portion of the object returned in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.ContentType">
            <summary>
            <para>
            A standard MIME type describing the format of the object data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.DeleteMarker">
            <summary>
            <para>
            Specifies whether an object stored in Amazon S3 is (<code>true</code>) or is not (<code>false</code>) a delete marker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.ErrorCode">
            <summary>
            <para>
            A string that uniquely identifies an error condition. Returned in &lt;Code&gt; tag of error XML response for corresponding GetObject call. Cannot be used with successful <code>StatusCode</code> header or when transformed object is provided in body.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.ErrorMessage">
            <summary>
            <para>
            Contains a generic description of the error condition. Returned in &lt;Message&gt; tag of error XML response for corresponding GetObject call. Cannot be used with successful <code>StatusCode</code> header or when transformed object is provided in body.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.Expiration">
            <summary>
            <para>
            If object stored in Amazon S3 expiration is configured (see PUT Bucket lifecycle) it includes expiry-date and rule-id key-value pairs providing object expiration information. The value of the rule-id is URL encoded.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.Expire">
            <summary>
            <para>
            The date and time at which the object is no longer cacheable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.LastModified">
            <summary>
            <para>
            Date and time the object was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.MissingMeta">
            <summary>
            <para>
            Set to the number of metadata entries not returned in <code>x-amz-meta</code> headers. This can happen if you create metadata using an API like SOAP that supports more flexible metadata than the REST API. For example, using SOAP, you can create metadata whose values are not legal HTTP headers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.ObjectLockLegalHoldStatus">
            <summary>
            <para>
            Indicates whether object stored in Amazon S3 has an active legal hold.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.ObjectLockMode">
            <summary>
            <para>
            Amazon.S3.Model.WriteGetObjectResponseRequest.ObjectLockMode
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.ObjectLockRetainUntilDate">
            <summary>
            <para>
            Date and time when Object Lock is configured to expire.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.PartsCount">
            <summary>
            <para>
            The count of parts this object has.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.ReplicationStatus">
            <summary>
            <para>
            Amazon.S3.Model.WriteGetObjectResponseRequest.ReplicationStatus
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.RequestCharged">
            <summary>
            <para>
            If present, indicates that the requester was successfully charged for the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.RequestRoute">
            <summary>
            <para>
            Route prefix to the HTTP URL generated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.RequestToken">
            <summary>
            <para>
            A single use encrypted token that maps <code>WriteGetObjectResponse</code> to the end user <code>GetObject</code> request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.Restore">
            <summary>
            <para>
            Provides information about object restoration operation and expiration time of the restored object copy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.ServerSideEncryptionMethod">
            <summary>
            <para>
            The server-side encryption algorithm used when storing requested object in Amazon S3 (for example, AES256, aws:kms).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.SSECustomerAlgorithm">
            <summary>
            <para>
            Encryption algorithm used if server-side encryption with a customer-provided encryption key was specified for object stored in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.SSECustomerKeyMD5">
            <summary>
            <para>
            Amazon.S3.Model.WriteGetObjectResponseRequest.SSECustomerKeyMD5
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.SSEKMSKeyId">
            <summary>
            <para>
            If present, specifies the ID of the AWS Key Management Service (AWS KMS) symmetric customer managed customer master key (CMK) that was used for stored in Amazon S3 object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.StatusCode">
            <summary>
            <para>
            Amazon.S3.Model.WriteGetObjectResponseRequest.StatusCode
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.StorageClass">
            <summary>
            <para>
            The class of storage used to store object in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.TagCount">
            <summary>
            <para>
            The number of tags, if any, on the object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.VersionId">
            <summary>
            <para>
            VersionId used to reference a specific version of the object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.ETag">
            <summary>
            <para>
            An ETag is an opaque identifier assigned by a web server to a specific version of a resource found at a URL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.WriteGetObjectResponseResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3GetObjectResponseCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3LifecycleConfigurationCmdlet">
            <summary>
            Creates a new lifecycle configuration for the bucket or replaces an existing lifecycle
            configuration. For information about lifecycle configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html">Managing
            your storage lifecycle</a>.
            
             <note><para>
            Bucket lifecycle configuration now supports specifying a lifecycle rule using an object
            key name prefix, one or more object tags, or a combination of both. Accordingly, this
            section describes the latest API. The previous version of the API supported filtering
            based only on an object key name prefix, which is supported for backward compatibility.
            For the related API description, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html">PutBucketLifecycle</a>.
            </para></note><para><b>Rules</b></para><para>
            You specify the lifecycle configuration in your request body. The lifecycle configuration
            is specified as XML consisting of one or more rules. Each rule consists of the following:
            </para><ul><li><para>
            Filter identifying a subset of objects to which the rule applies. The filter can be
            based on a key name prefix, object tags, or a combination of both.
            </para></li><li><para>
            Status whether the rule is in effect.
            </para></li><li><para>
            One or more lifecycle transition and expiration actions that you want Amazon S3 to
            perform on the objects identified by the filter. If the state of your bucket is versioning-enabled
            or versioning-suspended, you can have many versions of the same object (one current
            version and zero or more noncurrent versions). Amazon S3 provides predefined actions
            that you can specify for current and noncurrent object versions.
            </para></li></ul><para>
            For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html">Object
            Lifecycle Management</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html">Lifecycle
            Configuration Elements</a>.
            </para><para><b>Permissions</b></para><para>
            By default, all Amazon S3 resources are private, including buckets, objects, and related
            subresources (for example, lifecycle configuration and website configuration). Only
            the resource owner (that is, the AWS account that created it) can access the resource.
            The resource owner can optionally grant access permissions to others by writing an
            access policy. For this operation, a user must get the s3:PutLifecycleConfiguration
            permission.
            </para><para>
            You can also explicitly deny permissions. Explicit deny also supersedes any other
            permissions. If you want to block users or accounts from removing or deleting objects
            from your bucket, you must deny them permissions for the following actions:
            </para><ul><li><para>
            s3:DeleteObject
            </para></li><li><para>
            s3:DeleteObjectVersion
            </para></li><li><para>
            s3:PutLifecycleConfiguration
            </para></li></ul><para>
            For more information about permissions, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html">Managing
            Access Permissions to Your Amazon S3 Resources</a>.
            </para><para>
            The following are related to <code>PutBucketLifecycleConfiguration</code>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-configuration-examples.html">Examples
            of Lifecycle Configuration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html">GetBucketLifecycleConfiguration</a></para></li><li><para><a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html">DeleteBucketLifecycle</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3LifecycleConfigurationCmdlet.BucketName">
            <summary>
            <para>
            <para>The name of the bucket for which to set the configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3LifecycleConfigurationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            <para>The account ID of the expected bucket owner. If the bucket is owned by a different
            account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3LifecycleConfigurationCmdlet.Configuration_Rule">
            <summary>
            <para>
            These rules defined the lifecycle configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3LifecycleConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutLifecycleConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3LifecycleConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3LifecycleConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLegalHoldCmdlet">
            <summary>
            Applies a Legal Hold configuration to the specified object. For more information,
            see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Locking
            Objects</a>.
            
             
            <para>
            This action is not supported by Amazon S3 on Outposts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLegalHoldCmdlet.BucketName">
            <summary>
            <para>
            <para>The bucket name containing the object that you want to place a Legal Hold on. </para><para>When using this action with an access point, you must direct requests to the access
            point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com.
            When using this action with an access point through the AWS SDKs, you provide the
            access point ARN in place of the bucket name. For more information about access point
            ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using
            access points</a> in the <i>Amazon S3 User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLegalHoldCmdlet.ContentMD5">
            <summary>
            <para>
            <para>The MD5 hash for the request body.</para><para>For requests made using the AWS Command Line Interface (CLI) or AWS SDKs, this field
            is calculated automatically.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLegalHoldCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            <para>The account ID of the expected bucket owner. If the bucket is owned by a different
            account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLegalHoldCmdlet.Key">
            <summary>
            <para>
            <para>The key name for the object that you want to place a Legal Hold on.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLegalHoldCmdlet.RequestPayer">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLegalHoldCmdlet.LegalHold_Status">
            <summary>
            <para>
            <para>Indicates whether the specified object has a Legal Hold in place.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLegalHoldCmdlet.VersionId">
            <summary>
            <para>
            <para>The version ID of the object that you want to place a Legal Hold on.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLegalHoldCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RequestCharged'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutObjectLegalHoldResponse).
            Specifying the name of a property of type Amazon.S3.Model.PutObjectLegalHoldResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLegalHoldCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLegalHoldCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLockConfigurationCmdlet">
            <summary>
            Places an Object Lock configuration on the specified bucket. The rule specified in
            the Object Lock configuration will be applied by default to every new object placed
            in the specified bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Locking
            Objects</a>. 
            
             <note><ul><li><para>
            The <code>DefaultRetention</code> settings require both a mode and a period.
            </para></li><li><para>
            The <code>DefaultRetention</code> period can be either <code>Days</code> or <code>Years</code>
            but you must select one. You cannot specify <code>Days</code> and <code>Years</code>
            at the same time.
            </para></li><li><para>
            You can only enable Object Lock for new buckets. If you want to turn on Object Lock
            for an existing bucket, contact AWS Support.
            </para></li></ul></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLockConfigurationCmdlet.BucketName">
            <summary>
            <para>
            <para>The bucket whose Object Lock configuration you want to create or replace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLockConfigurationCmdlet.ContentMD5">
            <summary>
            <para>
            <para>The MD5 signature for the configuration included in your request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLockConfigurationCmdlet.DefaultRetention_Day">
            <summary>
            <para>
            <para>The number of days that you want to specify for the default retention period.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLockConfigurationCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            The account ID of the expected bucket owner. 
            If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLockConfigurationCmdlet.DefaultRetention_Mode">
            <summary>
            <para>
            <para>The default Object Lock retention mode you want to apply to new objects placed in
            the specified bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLockConfigurationCmdlet.ObjectLockConfiguration_ObjectLockEnabled">
            <summary>
            <para>
            <para>Indicates whether this object has an Object Lock configuration enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLockConfigurationCmdlet.RequestPayer">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLockConfigurationCmdlet.Token">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLockConfigurationCmdlet.DefaultRetention_Year">
            <summary>
            <para>
            <para>The number of years that you want to specify for the default retention period.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLockConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RequestCharged'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutObjectLockConfigurationResponse).
            Specifying the name of a property of type Amazon.S3.Model.PutObjectLockConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLockConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectLockConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectRetentionCmdlet">
            <summary>
            Places an Object Retention configuration on an object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Locking Objects</a>.
            
            
             
            <para>
            This action is not supported by Amazon S3 on Outposts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectRetentionCmdlet.BucketName">
            <summary>
            <para>
            <para>The bucket name that contains the object you want to apply this Object Retention configuration
            to. </para><para>When using this action with an access point, you must direct requests to the access
            point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com.
            When using this action with an access point through the AWS SDKs, you provide the
            access point ARN in place of the bucket name. For more information about access point
            ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using
            access points</a> in the <i>Amazon S3 User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectRetentionCmdlet.BypassGovernanceRetention">
            <summary>
            <para>
            <para>Indicates whether this action should bypass Governance-mode restrictions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectRetentionCmdlet.ContentMD5">
            <summary>
            <para>
            <para>The MD5 hash for the request body.</para><para>For requests made using the AWS Command Line Interface (CLI) or AWS SDKs, this field
            is calculated automatically.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectRetentionCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            <para>The account ID of the expected bucket owner. If the bucket is owned by a different
            account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectRetentionCmdlet.Key">
            <summary>
            <para>
            <para>The key name for the object that you want to apply this Object Retention configuration
            to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectRetentionCmdlet.Retention_Mode">
            <summary>
            <para>
            <para>Indicates the Retention mode for the specified object.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectRetentionCmdlet.RequestPayer">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectRetentionCmdlet.Retention_RetainUntilDate">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectRetentionCmdlet.VersionId">
            <summary>
            <para>
            <para>The version ID for the object that you want to apply this Object Retention configuration
            to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectRetentionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RequestCharged'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutObjectRetentionResponse).
            Specifying the name of a property of type Amazon.S3.Model.PutObjectRetentionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectRetentionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BucketName parameter.
            The -PassThru parameter is deprecated, use -Select '^BucketName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectRetentionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectTagSetCmdlet">
            <summary>
            Amazon.S3.IAmazonS3.PutObjectTagging
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectTagSetCmdlet.BucketName">
            <summary>
            <para>
            <para>The bucket name containing the object. </para><para>When using this action with an access point, you must direct requests to the access
            point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com.
            When using this action with an access point through the AWS SDKs, you provide the
            access point ARN in place of the bucket name. For more information about access point
            ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using
            access points</a> in the <i>Amazon S3 User Guide</i>.</para><para>When using this action with Amazon S3 on Outposts, you must direct requests to the
            S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com.
            When using this action using S3 on Outposts through the AWS SDKs, you provide the
            Outposts bucket ARN in place of the bucket name. For more information about S3 on
            Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using
            S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectTagSetCmdlet.ExpectedBucketOwner">
            <summary>
            <para>
            <para>The account ID of the expected bucket owner. If the bucket is owned by a different
            account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectTagSetCmdlet.Key">
            <summary>
            <para>
            This key is used to identify the object in S3.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectTagSetCmdlet.RequestPayer">
            <summary>
            <para>
            <para>Confirms that the requester knows that they will be charged for the request. 
            Bucket owners need not specify this parameter in their requests</para>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectTagSetCmdlet.Tagging_TagSet">
            <summary>
            <para>
            TagSet
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectTagSetCmdlet.VersionId">
            <summary>
            <para>
            <para>The versionId of the object that the tag-set will be added to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectTagSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VersionId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.S3.Model.PutObjectTaggingResponse).
            Specifying the name of a property of type Amazon.S3.Model.PutObjectTaggingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectTagSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Key parameter.
            The -PassThru parameter is deprecated, use -Select '^Key' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.S3.WriteS3ObjectTagSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
